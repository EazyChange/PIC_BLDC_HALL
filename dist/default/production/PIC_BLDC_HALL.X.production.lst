

Microchip Technology PIC18 PRO Macro Assembler V1.37 build -260352376 
                                                                                               Sun Jun 05 17:31:52 2016

Microchip Technology Omniscient Code Generator v1.37 (PRO mode) build 201603110536
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    99                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   100  0000                     
   101                           	psect	idataCOMRAM
   102  003104                     __pidataCOMRAM:
   103                           	opt stack 0
   104                           
   105                           ;initializer for _OperatorID
   106  003104  01                 	db	1
   107                           
   108                           ;initializer for _table
   109  003105  00                 	db	0
   110  003106  00                 	db	0
   111  003107  00                 	db	0
   112  003108  01                 	db	1
   113  003109  01                 	db	1
   114  00310A  01                 	db	1
   115  00310B  16                 	db	22
   116                           
   117                           	psect	idataBANK0
   118  003032                     __pidataBANK0:
   119                           	opt stack 0
   120                           
   121                           ;initializer for _STATE_HALL
   122  003032  09                 	db	9
   123  003033  24                 	db	36
   124  003034  21                 	db	33
   125  003035  12                 	db	18
   126  003036  18                 	db	24
   127  003037  06                 	db	6
   128                           
   129                           ;initializer for _STATE_HALL_BACK
   130  003038  18                 	db	24
   131  003039  21                 	db	33
   132  00303A  09                 	db	9
   133  00303B  06                 	db	6
   134  00303C  12                 	db	18
   135  00303D  24                 	db	36
   136                           
   137                           ;initializer for _Page
   138  00303E  01                 	db	1
   139                           
   140                           ;initializer for _start
   141  00303F  00                 	db	0
   142  003040  00                 	db	0
   143  003041  00                 	db	0
   144  003042  01                 	db	1
   145  003043  01                 	db	1
   146  003044  01                 	db	1
   147  003045  16                 	db	22
   148                           
   149                           	psect	mediumconst
   150  003268                     __pmediumconst:
   151                           	opt stack 0
   152  003268  00                 	db	0
   153  003269                     _F8X16:
   154                           	opt stack 0
   155  003269  00                 	db	0
   156  00326A  00                 	db	0
   157  00326B  00                 	db	0
   158  00326C  00                 	db	0
   159  00326D  00                 	db	0
   160  00326E  00                 	db	0
   161  00326F  00                 	db	0
   162  003270  00                 	db	0
   163  003271  00                 	db	0
   164  003272  00                 	db	0
   165  003273  00                 	db	0
   166  003274  00                 	db	0
   167  003275  00                 	db	0
   168  003276  00                 	db	0
   169  003277  00                 	db	0
   170  003278  00                 	db	0
   171  003279  00                 	db	0
   172  00327A  00                 	db	0
   173  00327B  00                 	db	0
   174  00327C  F8                 	db	248
   175  00327D  00                 	db	0
   176  00327E  00                 	db	0
   177  00327F  00                 	db	0
   178  003280  00                 	db	0
   179  003281  00                 	db	0
   180  003282  00                 	db	0
   181  003283  00                 	db	0
   182  003284  33                 	db	51
   183  003285  30                 	db	48
   184  003286  00                 	db	0
   185  003287  00                 	db	0
   186  003288  00                 	db	0
   187  003289  00                 	db	0
   188  00328A  10                 	db	16
   189  00328B  0C                 	db	12
   190  00328C  06                 	db	6
   191  00328D  10                 	db	16
   192  00328E  0C                 	db	12
   193  00328F  06                 	db	6
   194  003290  00                 	db	0
   195  003291  00                 	db	0
   196  003292  00                 	db	0
   197  003293  00                 	db	0
   198  003294  00                 	db	0
   199  003295  00                 	db	0
   200  003296  00                 	db	0
   201  003297  00                 	db	0
   202  003298  00                 	db	0
   203  003299  40                 	db	64
   204  00329A  C0                 	db	192
   205  00329B  78                 	db	120
   206  00329C  40                 	db	64
   207  00329D  C0                 	db	192
   208  00329E  78                 	db	120
   209  00329F  40                 	db	64
   210  0032A0  00                 	db	0
   211  0032A1  04                 	db	4
   212  0032A2  3F                 	db	63
   213  0032A3  04                 	db	4
   214  0032A4  04                 	db	4
   215  0032A5  3F                 	db	63
   216  0032A6  04                 	db	4
   217  0032A7  04                 	db	4
   218  0032A8  00                 	db	0
   219  0032A9  00                 	db	0
   220  0032AA  70                 	db	112
   221  0032AB  88                 	db	136
   222  0032AC  FC                 	db	252
   223  0032AD  08                 	db	8
   224  0032AE  30                 	db	48
   225  0032AF  00                 	db	0
   226  0032B0  00                 	db	0
   227  0032B1  00                 	db	0
   228  0032B2  18                 	db	24
   229  0032B3  20                 	db	32
   230  0032B4  FF                 	db	255
   231  0032B5  21                 	db	33
   232  0032B6  1E                 	db	30
   233  0032B7  00                 	db	0
   234  0032B8  00                 	db	0
   235  0032B9  F0                 	db	240
   236  0032BA  08                 	db	8
   237  0032BB  F0                 	db	240
   238  0032BC  00                 	db	0
   239  0032BD  E0                 	db	224
   240  0032BE  18                 	db	24
   241  0032BF  00                 	db	0
   242  0032C0  00                 	db	0
   243  0032C1  00                 	db	0
   244  0032C2  21                 	db	33
   245  0032C3  1C                 	db	28
   246  0032C4  03                 	db	3
   247  0032C5  1E                 	db	30
   248  0032C6  21                 	db	33
   249  0032C7  1E                 	db	30
   250  0032C8  00                 	db	0
   251  0032C9  00                 	db	0
   252  0032CA  F0                 	db	240
   253  0032CB  08                 	db	8
   254  0032CC  88                 	db	136
   255  0032CD  70                 	db	112
   256  0032CE  00                 	db	0
   257  0032CF  00                 	db	0
   258  0032D0  00                 	db	0
   259  0032D1  1E                 	db	30
   260  0032D2  21                 	db	33
   261  0032D3  23                 	db	35
   262  0032D4  24                 	db	36
   263  0032D5  19                 	db	25
   264  0032D6  27                 	db	39
   265  0032D7  21                 	db	33
   266  0032D8  10                 	db	16
   267  0032D9  10                 	db	16
   268  0032DA  16                 	db	22
   269  0032DB  0E                 	db	14
   270  0032DC  00                 	db	0
   271  0032DD  00                 	db	0
   272  0032DE  00                 	db	0
   273  0032DF  00                 	db	0
   274  0032E0  00                 	db	0
   275  0032E1  00                 	db	0
   276  0032E2  00                 	db	0
   277  0032E3  00                 	db	0
   278  0032E4  00                 	db	0
   279  0032E5  00                 	db	0
   280  0032E6  00                 	db	0
   281  0032E7  00                 	db	0
   282  0032E8  00                 	db	0
   283  0032E9  00                 	db	0
   284  0032EA  00                 	db	0
   285  0032EB  00                 	db	0
   286  0032EC  E0                 	db	224
   287  0032ED  18                 	db	24
   288  0032EE  04                 	db	4
   289  0032EF  02                 	db	2
   290  0032F0  00                 	db	0
   291  0032F1  00                 	db	0
   292  0032F2  00                 	db	0
   293  0032F3  00                 	db	0
   294  0032F4  07                 	db	7
   295  0032F5  18                 	db	24
   296  0032F6  20                 	db	32
   297  0032F7  40                 	db	64
   298  0032F8  00                 	db	0
   299  0032F9  00                 	db	0
   300  0032FA  02                 	db	2
   301  0032FB  04                 	db	4
   302  0032FC  18                 	db	24
   303  0032FD  E0                 	db	224
   304  0032FE  00                 	db	0
   305  0032FF  00                 	db	0
   306  003300  00                 	db	0
   307  003301  00                 	db	0
   308  003302  40                 	db	64
   309  003303  20                 	db	32
   310  003304  18                 	db	24
   311  003305  07                 	db	7
   312  003306  00                 	db	0
   313  003307  00                 	db	0
   314  003308  00                 	db	0
   315  003309  40                 	db	64
   316  00330A  40                 	db	64
   317  00330B  80                 	db	128
   318  00330C  F0                 	db	240
   319  00330D  80                 	db	128
   320  00330E  40                 	db	64
   321  00330F  40                 	db	64
   322  003310  00                 	db	0
   323  003311  02                 	db	2
   324  003312  02                 	db	2
   325  003313  01                 	db	1
   326  003314  0F                 	db	15
   327  003315  01                 	db	1
   328  003316  02                 	db	2
   329  003317  02                 	db	2
   330  003318  00                 	db	0
   331  003319  00                 	db	0
   332  00331A  00                 	db	0
   333  00331B  00                 	db	0
   334  00331C  F0                 	db	240
   335  00331D  00                 	db	0
   336  00331E  00                 	db	0
   337  00331F  00                 	db	0
   338  003320  00                 	db	0
   339  003321  01                 	db	1
   340  003322  01                 	db	1
   341  003323  01                 	db	1
   342  003324  1F                 	db	31
   343  003325  01                 	db	1
   344  003326  01                 	db	1
   345  003327  01                 	db	1
   346  003328  00                 	db	0
   347  003329  00                 	db	0
   348  00332A  00                 	db	0
   349  00332B  00                 	db	0
   350  00332C  00                 	db	0
   351  00332D  00                 	db	0
   352  00332E  00                 	db	0
   353  00332F  00                 	db	0
   354  003330  00                 	db	0
   355  003331  80                 	db	128
   356  003332  B0                 	db	176
   357  003333  70                 	db	112
   358  003334  00                 	db	0
   359  003335  00                 	db	0
   360  003336  00                 	db	0
   361  003337  00                 	db	0
   362  003338  00                 	db	0
   363  003339  00                 	db	0
   364  00333A  00                 	db	0
   365  00333B  00                 	db	0
   366  00333C  00                 	db	0
   367  00333D  00                 	db	0
   368  00333E  00                 	db	0
   369  00333F  00                 	db	0
   370  003340  00                 	db	0
   371  003341  00                 	db	0
   372  003342  01                 	db	1
   373  003343  01                 	db	1
   374  003344  01                 	db	1
   375  003345  01                 	db	1
   376  003346  01                 	db	1
   377  003347  01                 	db	1
   378  003348  01                 	db	1
   379  003349  00                 	db	0
   380  00334A  00                 	db	0
   381  00334B  00                 	db	0
   382  00334C  00                 	db	0
   383  00334D  00                 	db	0
   384  00334E  00                 	db	0
   385  00334F  00                 	db	0
   386  003350  00                 	db	0
   387  003351  00                 	db	0
   388  003352  30                 	db	48
   389  003353  30                 	db	48
   390  003354  00                 	db	0
   391  003355  00                 	db	0
   392  003356  00                 	db	0
   393  003357  00                 	db	0
   394  003358  00                 	db	0
   395  003359  00                 	db	0
   396  00335A  00                 	db	0
   397  00335B  00                 	db	0
   398  00335C  00                 	db	0
   399  00335D  80                 	db	128
   400  00335E  60                 	db	96
   401  00335F  18                 	db	24
   402  003360  04                 	db	4
   403  003361  00                 	db	0
   404  003362  60                 	db	96
   405  003363  18                 	db	24
   406  003364  06                 	db	6
   407  003365  01                 	db	1
   408  003366  00                 	db	0
   409  003367  00                 	db	0
   410  003368  00                 	db	0
   411  003369  00                 	db	0
   412  00336A  E0                 	db	224
   413  00336B  10                 	db	16
   414  00336C  08                 	db	8
   415  00336D  08                 	db	8
   416  00336E  10                 	db	16
   417  00336F  E0                 	db	224
   418  003370  00                 	db	0
   419  003371  00                 	db	0
   420  003372  0F                 	db	15
   421  003373  10                 	db	16
   422  003374  20                 	db	32
   423  003375  20                 	db	32
   424  003376  10                 	db	16
   425  003377  0F                 	db	15
   426  003378  00                 	db	0
   427  003379  00                 	db	0
   428  00337A  10                 	db	16
   429  00337B  10                 	db	16
   430  00337C  F8                 	db	248
   431  00337D  00                 	db	0
   432  00337E  00                 	db	0
   433  00337F  00                 	db	0
   434  003380  00                 	db	0
   435  003381  00                 	db	0
   436  003382  20                 	db	32
   437  003383  20                 	db	32
   438  003384  3F                 	db	63
   439  003385  20                 	db	32
   440  003386  20                 	db	32
   441  003387  00                 	db	0
   442  003388  00                 	db	0
   443  003389  00                 	db	0
   444  00338A  70                 	db	112
   445  00338B  08                 	db	8
   446  00338C  08                 	db	8
   447  00338D  08                 	db	8
   448  00338E  88                 	db	136
   449  00338F  70                 	db	112
   450  003390  00                 	db	0
   451  003391  00                 	db	0
   452  003392  30                 	db	48
   453  003393  28                 	db	40
   454  003394  24                 	db	36
   455  003395  22                 	db	34
   456  003396  21                 	db	33
   457  003397  30                 	db	48
   458  003398  00                 	db	0
   459  003399  00                 	db	0
   460  00339A  30                 	db	48
   461  00339B  08                 	db	8
   462  00339C  88                 	db	136
   463  00339D  88                 	db	136
   464  00339E  48                 	db	72
   465  00339F  30                 	db	48
   466  0033A0  00                 	db	0
   467  0033A1  00                 	db	0
   468  0033A2  18                 	db	24
   469  0033A3  20                 	db	32
   470  0033A4  20                 	db	32
   471  0033A5  20                 	db	32
   472  0033A6  11                 	db	17
   473  0033A7  0E                 	db	14
   474  0033A8  00                 	db	0
   475  0033A9  00                 	db	0
   476  0033AA  00                 	db	0
   477  0033AB  C0                 	db	192
   478  0033AC  20                 	db	32
   479  0033AD  10                 	db	16
   480  0033AE  F8                 	db	248
   481  0033AF  00                 	db	0
   482  0033B0  00                 	db	0
   483  0033B1  00                 	db	0
   484  0033B2  07                 	db	7
   485  0033B3  04                 	db	4
   486  0033B4  24                 	db	36
   487  0033B5  24                 	db	36
   488  0033B6  3F                 	db	63
   489  0033B7  24                 	db	36
   490  0033B8  00                 	db	0
   491  0033B9  00                 	db	0
   492  0033BA  F8                 	db	248
   493  0033BB  08                 	db	8
   494  0033BC  88                 	db	136
   495  0033BD  88                 	db	136
   496  0033BE  08                 	db	8
   497  0033BF  08                 	db	8
   498  0033C0  00                 	db	0
   499  0033C1  00                 	db	0
   500  0033C2  19                 	db	25
   501  0033C3  21                 	db	33
   502  0033C4  20                 	db	32
   503  0033C5  20                 	db	32
   504  0033C6  11                 	db	17
   505  0033C7  0E                 	db	14
   506  0033C8  00                 	db	0
   507  0033C9  00                 	db	0
   508  0033CA  E0                 	db	224
   509  0033CB  10                 	db	16
   510  0033CC  88                 	db	136
   511  0033CD  88                 	db	136
   512  0033CE  18                 	db	24
   513  0033CF  00                 	db	0
   514  0033D0  00                 	db	0
   515  0033D1  00                 	db	0
   516  0033D2  0F                 	db	15
   517  0033D3  11                 	db	17
   518  0033D4  20                 	db	32
   519  0033D5  20                 	db	32
   520  0033D6  11                 	db	17
   521  0033D7  0E                 	db	14
   522  0033D8  00                 	db	0
   523  0033D9  00                 	db	0
   524  0033DA  38                 	db	56
   525  0033DB  08                 	db	8
   526  0033DC  08                 	db	8
   527  0033DD  C8                 	db	200
   528  0033DE  38                 	db	56
   529  0033DF  08                 	db	8
   530  0033E0  00                 	db	0
   531  0033E1  00                 	db	0
   532  0033E2  00                 	db	0
   533  0033E3  00                 	db	0
   534  0033E4  3F                 	db	63
   535  0033E5  00                 	db	0
   536  0033E6  00                 	db	0
   537  0033E7  00                 	db	0
   538  0033E8  00                 	db	0
   539  0033E9  00                 	db	0
   540  0033EA  70                 	db	112
   541  0033EB  88                 	db	136
   542  0033EC  08                 	db	8
   543  0033ED  08                 	db	8
   544  0033EE  88                 	db	136
   545  0033EF  70                 	db	112
   546  0033F0  00                 	db	0
   547  0033F1  00                 	db	0
   548  0033F2  1C                 	db	28
   549  0033F3  22                 	db	34
   550  0033F4  21                 	db	33
   551  0033F5  21                 	db	33
   552  0033F6  22                 	db	34
   553  0033F7  1C                 	db	28
   554  0033F8  00                 	db	0
   555  0033F9  00                 	db	0
   556  0033FA  E0                 	db	224
   557  0033FB  10                 	db	16
   558  0033FC  08                 	db	8
   559  0033FD  08                 	db	8
   560  0033FE  10                 	db	16
   561  0033FF  E0                 	db	224
   562  003400  00                 	db	0
   563  003401  00                 	db	0
   564  003402  00                 	db	0
   565  003403  31                 	db	49
   566  003404  22                 	db	34
   567  003405  22                 	db	34
   568  003406  11                 	db	17
   569  003407  0F                 	db	15
   570  003408  00                 	db	0
   571  003409  00                 	db	0
   572  00340A  00                 	db	0
   573  00340B  00                 	db	0
   574  00340C  C0                 	db	192
   575  00340D  C0                 	db	192
   576  00340E  00                 	db	0
   577  00340F  00                 	db	0
   578  003410  00                 	db	0
   579  003411  00                 	db	0
   580  003412  00                 	db	0
   581  003413  00                 	db	0
   582  003414  30                 	db	48
   583  003415  30                 	db	48
   584  003416  00                 	db	0
   585  003417  00                 	db	0
   586  003418  00                 	db	0
   587  003419  00                 	db	0
   588  00341A  00                 	db	0
   589  00341B  00                 	db	0
   590  00341C  80                 	db	128
   591  00341D  00                 	db	0
   592  00341E  00                 	db	0
   593  00341F  00                 	db	0
   594  003420  00                 	db	0
   595  003421  00                 	db	0
   596  003422  00                 	db	0
   597  003423  80                 	db	128
   598  003424  60                 	db	96
   599  003425  00                 	db	0
   600  003426  00                 	db	0
   601  003427  00                 	db	0
   602  003428  00                 	db	0
   603  003429  00                 	db	0
   604  00342A  00                 	db	0
   605  00342B  80                 	db	128
   606  00342C  40                 	db	64
   607  00342D  20                 	db	32
   608  00342E  10                 	db	16
   609  00342F  08                 	db	8
   610  003430  00                 	db	0
   611  003431  00                 	db	0
   612  003432  01                 	db	1
   613  003433  02                 	db	2
   614  003434  04                 	db	4
   615  003435  08                 	db	8
   616  003436  10                 	db	16
   617  003437  20                 	db	32
   618  003438  00                 	db	0
   619  003439  40                 	db	64
   620  00343A  40                 	db	64
   621  00343B  40                 	db	64
   622  00343C  40                 	db	64
   623  00343D  40                 	db	64
   624  00343E  40                 	db	64
   625  00343F  40                 	db	64
   626  003440  00                 	db	0
   627  003441  04                 	db	4
   628  003442  04                 	db	4
   629  003443  04                 	db	4
   630  003444  04                 	db	4
   631  003445  04                 	db	4
   632  003446  04                 	db	4
   633  003447  04                 	db	4
   634  003448  00                 	db	0
   635  003449  00                 	db	0
   636  00344A  08                 	db	8
   637  00344B  10                 	db	16
   638  00344C  20                 	db	32
   639  00344D  40                 	db	64
   640  00344E  80                 	db	128
   641  00344F  00                 	db	0
   642  003450  00                 	db	0
   643  003451  00                 	db	0
   644  003452  20                 	db	32
   645  003453  10                 	db	16
   646  003454  08                 	db	8
   647  003455  04                 	db	4
   648  003456  02                 	db	2
   649  003457  01                 	db	1
   650  003458  00                 	db	0
   651  003459  08                 	db	8
   652  00345A  78                 	db	120
   653  00345B  88                 	db	136
   654  00345C  00                 	db	0
   655  00345D  00                 	db	0
   656  00345E  C8                 	db	200
   657  00345F  38                 	db	56
   658  003460  08                 	db	8
   659  003461  00                 	db	0
   660  003462  00                 	db	0
   661  003463  07                 	db	7
   662  003464  38                 	db	56
   663  003465  0E                 	db	14
   664  003466  01                 	db	1
   665  003467  00                 	db	0
   666  003468  00                 	db	0
   667  003469  80                 	db	128
   668  00346A  80                 	db	128
   669  00346B  80                 	db	128
   670  00346C  00                 	db	0
   671  00346D  80                 	db	128
   672  00346E  80                 	db	128
   673  00346F  80                 	db	128
   674  003470  00                 	db	0
   675  003471  20                 	db	32
   676  003472  20                 	db	32
   677  003473  3F                 	db	63
   678  003474  21                 	db	33
   679  003475  20                 	db	32
   680  003476  00                 	db	0
   681  003477  01                 	db	1
   682  003478  00                 	db	0
   683  003479  80                 	db	128
   684  00347A  80                 	db	128
   685  00347B  80                 	db	128
   686  00347C  80                 	db	128
   687  00347D  80                 	db	128
   688  00347E  80                 	db	128
   689  00347F  80                 	db	128
   690  003480  00                 	db	0
   691  003481  20                 	db	32
   692  003482  3F                 	db	63
   693  003483  20                 	db	32
   694  003484  00                 	db	0
   695  003485  3F                 	db	63
   696  003486  20                 	db	32
   697  003487  00                 	db	0
   698  003488  3F                 	db	63
   699  003489  E0                 	db	224
   700  00348A  10                 	db	16
   701  00348B  08                 	db	8
   702  00348C  08                 	db	8
   703  00348D  08                 	db	8
   704  00348E  10                 	db	16
   705  00348F  E0                 	db	224
   706  003490  00                 	db	0
   707  003491  0F                 	db	15
   708  003492  10                 	db	16
   709  003493  20                 	db	32
   710  003494  20                 	db	32
   711  003495  20                 	db	32
   712  003496  10                 	db	16
   713  003497  0F                 	db	15
   714  003498  00                 	db	0
   715  003499  08                 	db	8
   716  00349A  F8                 	db	248
   717  00349B  88                 	db	136
   718  00349C  C0                 	db	192
   719  00349D  28                 	db	40
   720  00349E  18                 	db	24
   721  00349F  08                 	db	8
   722  0034A0  00                 	db	0
   723  0034A1  20                 	db	32
   724  0034A2  3F                 	db	63
   725  0034A3  20                 	db	32
   726  0034A4  01                 	db	1
   727  0034A5  26                 	db	38
   728  0034A6  38                 	db	56
   729  0034A7  20                 	db	32
   730  0034A8  00                 	db	0
   731  0034A9  00                 	db	0
   732  0034AA  00                 	db	0
   733  0034AB  00                 	db	0
   734  0034AC  00                 	db	0
   735  0034AD  00                 	db	0
   736  0034AE  00                 	db	0
   737  0034AF  00                 	db	0
   738  0034B0  00                 	db	0
   739  0034B1  80                 	db	128
   740  0034B2  80                 	db	128
   741  0034B3  80                 	db	128
   742  0034B4  80                 	db	128
   743  0034B5  80                 	db	128
   744  0034B6  80                 	db	128
   745  0034B7  80                 	db	128
   746  0034B8  80                 	db	128
   747  0034B9                     __end_of_F8X16:
   748                           	opt stack 0
   749  0034B9                     _F6x8_1:
   750                           	opt stack 0
   751  0034B9  00                 	db	0
   752  0034BA  3E                 	db	62
   753  0034BB  51                 	db	81
   754  0034BC  49                 	db	73
   755  0034BD  45                 	db	69
   756  0034BE  3E                 	db	62
   757  0034BF  00                 	db	0
   758  0034C0  00                 	db	0
   759  0034C1  42                 	db	66
   760  0034C2  7F                 	db	127
   761  0034C3  40                 	db	64
   762  0034C4  00                 	db	0
   763  0034C5  00                 	db	0
   764  0034C6  21                 	db	33
   765  0034C7  41                 	db	65
   766  0034C8  45                 	db	69
   767  0034C9  4B                 	db	75
   768  0034CA  31                 	db	49
   769  0034CB  00                 	db	0
   770  0034CC  27                 	db	39
   771  0034CD  45                 	db	69
   772  0034CE  45                 	db	69
   773  0034CF  45                 	db	69
   774  0034D0  39                 	db	57
   775  0034D1  00                 	db	0
   776  0034D2  36                 	db	54
   777  0034D3  49                 	db	73
   778  0034D4  49                 	db	73
   779  0034D5  49                 	db	73
   780  0034D6  36                 	db	54
   781  0034D7  00                 	db	0
   782  0034D8  06                 	db	6
   783  0034D9  49                 	db	73
   784  0034DA  49                 	db	73
   785  0034DB  29                 	db	41
   786  0034DC  1E                 	db	30
   787  0034DD  00                 	db	0
   788  0034DE  00                 	db	0
   789  0034DF  60                 	db	96
   790  0034E0  60                 	db	96
   791  0034E1  00                 	db	0
   792  0034E2  00                 	db	0
   793  0034E3  00                 	db	0
   794  0034E4  08                 	db	8
   795  0034E5  08                 	db	8
   796  0034E6  08                 	db	8
   797  0034E7  08                 	db	8
   798  0034E8  08                 	db	8
   799  0034E9  00                 	db	0
   800  0034EA  20                 	db	32
   801  0034EB  54                 	db	84
   802  0034EC  54                 	db	84
   803  0034ED  54                 	db	84
   804  0034EE  78                 	db	120
   805  0034EF  00                 	db	0
   806  0034F0  38                 	db	56
   807  0034F1  44                 	db	68
   808  0034F2  44                 	db	68
   809  0034F3  44                 	db	68
   810  0034F4  20                 	db	32
   811  0034F5  00                 	db	0
   812  0034F6  7F                 	db	127
   813  0034F7  08                 	db	8
   814  0034F8  04                 	db	4
   815  0034F9  04                 	db	4
   816  0034FA  78                 	db	120
   817  0034FB  00                 	db	0
   818  0034FC  7C                 	db	124
   819  0034FD  04                 	db	4
   820  0034FE  18                 	db	24
   821  0034FF  04                 	db	4
   822  003500  78                 	db	120
   823  003501  00                 	db	0
   824  003502  38                 	db	56
   825  003503  44                 	db	68
   826  003504  44                 	db	68
   827  003505  44                 	db	68
   828  003506  38                 	db	56
   829  003507  00                 	db	0
   830  003508  7C                 	db	124
   831  003509  08                 	db	8
   832  00350A  04                 	db	4
   833  00350B  04                 	db	4
   834  00350C  08                 	db	8
   835  00350D  00                 	db	0
   836  00350E  48                 	db	72
   837  00350F  54                 	db	84
   838  003510  54                 	db	84
   839  003511  54                 	db	84
   840  003512  20                 	db	32
   841  003513  00                 	db	0
   842  003514  04                 	db	4
   843  003515  3F                 	db	63
   844  003516  44                 	db	68
   845  003517  40                 	db	64
   846  003518  20                 	db	32
   847  003519  00                 	db	0
   848  00351A  3C                 	db	60
   849  00351B  40                 	db	64
   850  00351C  30                 	db	48
   851  00351D  40                 	db	64
   852  00351E  3C                 	db	60
   853  00351F                     __end_of_F6x8_1:
   854                           	opt stack 0
   855  00351F                     _F16x16_HZ:
   856                           	opt stack 0
   857  00351F  10                 	db	16
   858  003520  10                 	db	16
   859  003521  FF                 	db	255
   860  003522  10                 	db	16
   861  003523  90                 	db	144
   862  003524  E0                 	db	224
   863  003525  2F                 	db	47
   864  003526  29                 	db	41
   865  003527  E9                 	db	233
   866  003528  09                 	db	9
   867  003529  E9                 	db	233
   868  00352A  29                 	db	41
   869  00352B  2F                 	db	47
   870  00352C  E0                 	db	224
   871  00352D  00                 	db	0
   872  00352E  00                 	db	0
   873  00352F  42                 	db	66
   874  003530  82                 	db	130
   875  003531  7F                 	db	127
   876  003532  41                 	db	65
   877  003533  44                 	db	68
   878  003534  25                 	db	37
   879  003535  15                 	db	21
   880  003536  0D                 	db	13
   881  003537  05                 	db	5
   882  003538  FE                 	db	254
   883  003539  0D                 	db	13
   884  00353A  15                 	db	21
   885  00353B  25                 	db	37
   886  00353C  45                 	db	69
   887  00353D  44                 	db	68
   888  00353E  00                 	db	0
   889  00353F  00                 	db	0
   890  003540  80                 	db	128
   891  003541  60                 	db	96
   892  003542  F8                 	db	248
   893  003543  07                 	db	7
   894  003544  40                 	db	64
   895  003545  30                 	db	48
   896  003546  0F                 	db	15
   897  003547  F8                 	db	248
   898  003548  88                 	db	136
   899  003549  88                 	db	136
   900  00354A  88                 	db	136
   901  00354B  88                 	db	136
   902  00354C  08                 	db	8
   903  00354D  08                 	db	8
   904  00354E  00                 	db	0
   905  00354F  01                 	db	1
   906  003550  00                 	db	0
   907  003551  00                 	db	0
   908  003552  FF                 	db	255
   909  003553  00                 	db	0
   910  003554  00                 	db	0
   911  003555  00                 	db	0
   912  003556  00                 	db	0
   913  003557  FF                 	db	255
   914  003558  08                 	db	8
   915  003559  08                 	db	8
   916  00355A  08                 	db	8
   917  00355B  08                 	db	8
   918  00355C  08                 	db	8
   919  00355D  00                 	db	0
   920  00355E  00                 	db	0
   921  00355F  20                 	db	32
   922  003560  30                 	db	48
   923  003561  AC                 	db	172
   924  003562  63                 	db	99
   925  003563  30                 	db	48
   926  003564  00                 	db	0
   927  003565  FC                 	db	252
   928  003566  24                 	db	36
   929  003567  25                 	db	37
   930  003568  26                 	db	38
   931  003569  24                 	db	36
   932  00356A  24                 	db	36
   933  00356B  24                 	db	36
   934  00356C  3C                 	db	60
   935  00356D  00                 	db	0
   936  00356E  00                 	db	0
   937  00356F  22                 	db	34
   938  003570  67                 	db	103
   939  003571  22                 	db	34
   940  003572  12                 	db	18
   941  003573  52                 	db	82
   942  003574  38                 	db	56
   943  003575  07                 	db	7
   944  003576  FF                 	db	255
   945  003577  09                 	db	9
   946  003578  7F                 	db	127
   947  003579  09                 	db	9
   948  00357A  3F                 	db	63
   949  00357B  89                 	db	137
   950  00357C  FF                 	db	255
   951  00357D  00                 	db	0
   952  00357E  00                 	db	0
   953  00357F  80                 	db	128
   954  003580  80                 	db	128
   955  003581  80                 	db	128
   956  003582  BE                 	db	190
   957  003583  A2                 	db	162
   958  003584  A2                 	db	162
   959  003585  A2                 	db	162
   960  003586  A2                 	db	162
   961  003587  A2                 	db	162
   962  003588  A2                 	db	162
   963  003589  A2                 	db	162
   964  00358A  BE                 	db	190
   965  00358B  80                 	db	128
   966  00358C  80                 	db	128
   967  00358D  80                 	db	128
   968  00358E  00                 	db	0
   969  00358F  00                 	db	0
   970  003590  00                 	db	0
   971  003591  00                 	db	0
   972  003592  06                 	db	6
   973  003593  05                 	db	5
   974  003594  04                 	db	4
   975  003595  04                 	db	4
   976  003596  04                 	db	4
   977  003597  44                 	db	68
   978  003598  84                 	db	132
   979  003599  44                 	db	68
   980  00359A  3C                 	db	60
   981  00359B  00                 	db	0
   982  00359C  00                 	db	0
   983  00359D  00                 	db	0
   984  00359E  00                 	db	0
   985  00359F  40                 	db	64
   986  0035A0  40                 	db	64
   987  0035A1  42                 	db	66
   988  0035A2  CC                 	db	204
   989  0035A3  00                 	db	0
   990  0035A4  50                 	db	80
   991  0035A5  4E                 	db	78
   992  0035A6  C8                 	db	200
   993  0035A7  48                 	db	72
   994  0035A8  7F                 	db	127
   995  0035A9  C8                 	db	200
   996  0035AA  48                 	db	72
   997  0035AB  48                 	db	72
   998  0035AC  40                 	db	64
   999  0035AD  00                 	db	0
  1000  0035AE  00                 	db	0
  1001  0035AF  00                 	db	0
  1002  0035B0  40                 	db	64
  1003  0035B1  20                 	db	32
  1004  0035B2  1F                 	db	31
  1005  0035B3  20                 	db	32
  1006  0035B4  50                 	db	80
  1007  0035B5  4C                 	db	76
  1008  0035B6  43                 	db	67
  1009  0035B7  40                 	db	64
  1010  0035B8  40                 	db	64
  1011  0035B9  4F                 	db	79
  1012  0035BA  50                 	db	80
  1013  0035BB  50                 	db	80
  1014  0035BC  5C                 	db	92
  1015  0035BD  40                 	db	64
  1016  0035BE  00                 	db	0
  1017  0035BF  10                 	db	16
  1018  0035C0  10                 	db	16
  1019  0035C1  FF                 	db	255
  1020  0035C2  10                 	db	16
  1021  0035C3  00                 	db	0
  1022  0035C4  82                 	db	130
  1023  0035C5  86                 	db	134
  1024  0035C6  4A                 	db	74
  1025  0035C7  52                 	db	82
  1026  0035C8  A2                 	db	162
  1027  0035C9  52                 	db	82
  1028  0035CA  4A                 	db	74
  1029  0035CB  86                 	db	134
  1030  0035CC  80                 	db	128
  1031  0035CD  80                 	db	128
  1032  0035CE  00                 	db	0
  1033  0035CF  42                 	db	66
  1034  0035D0  82                 	db	130
  1035  0035D1  7F                 	db	127
  1036  0035D2  01                 	db	1
  1037  0035D3  00                 	db	0
  1038  0035D4  10                 	db	16
  1039  0035D5  12                 	db	18
  1040  0035D6  12                 	db	18
  1041  0035D7  12                 	db	18
  1042  0035D8  FF                 	db	255
  1043  0035D9  12                 	db	18
  1044  0035DA  12                 	db	18
  1045  0035DB  12                 	db	18
  1046  0035DC  10                 	db	16
  1047  0035DD  00                 	db	0
  1048  0035DE  00                 	db	0
  1049  0035DF  00                 	db	0
  1050  0035E0  20                 	db	32
  1051  0035E1  18                 	db	24
  1052  0035E2  C7                 	db	199
  1053  0035E3  44                 	db	68
  1054  0035E4  44                 	db	68
  1055  0035E5  44                 	db	68
  1056  0035E6  44                 	db	68
  1057  0035E7  FC                 	db	252
  1058  0035E8  44                 	db	68
  1059  0035E9  44                 	db	68
  1060  0035EA  44                 	db	68
  1061  0035EB  44                 	db	68
  1062  0035EC  04                 	db	4
  1063  0035ED  00                 	db	0
  1064  0035EE  00                 	db	0
  1065  0035EF  04                 	db	4
  1066  0035F0  04                 	db	4
  1067  0035F1  04                 	db	4
  1068  0035F2  07                 	db	7
  1069  0035F3  04                 	db	4
  1070  0035F4  04                 	db	4
  1071  0035F5  04                 	db	4
  1072  0035F6  04                 	db	4
  1073  0035F7  FF                 	db	255
  1074  0035F8  04                 	db	4
  1075  0035F9  04                 	db	4
  1076  0035FA  04                 	db	4
  1077  0035FB  04                 	db	4
  1078  0035FC  04                 	db	4
  1079  0035FD  04                 	db	4
  1080  0035FE  00                 	db	0
  1081  0035FF  00                 	db	0
  1082  003600  00                 	db	0
  1083  003601  00                 	db	0
  1084  003602  FE                 	db	254
  1085  003603  22                 	db	34
  1086  003604  22                 	db	34
  1087  003605  22                 	db	34
  1088  003606  22                 	db	34
  1089  003607  22                 	db	34
  1090  003608  22                 	db	34
  1091  003609  22                 	db	34
  1092  00360A  22                 	db	34
  1093  00360B  FE                 	db	254
  1094  00360C  00                 	db	0
  1095  00360D  00                 	db	0
  1096  00360E  00                 	db	0
  1097  00360F  80                 	db	128
  1098  003610  40                 	db	64
  1099  003611  30                 	db	48
  1100  003612  0F                 	db	15
  1101  003613  02                 	db	2
  1102  003614  02                 	db	2
  1103  003615  02                 	db	2
  1104  003616  02                 	db	2
  1105  003617  02                 	db	2
  1106  003618  02                 	db	2
  1107  003619  42                 	db	66
  1108  00361A  82                 	db	130
  1109  00361B  7F                 	db	127
  1110  00361C  00                 	db	0
  1111  00361D  00                 	db	0
  1112  00361E  00                 	db	0
  1113  00361F  00                 	db	0
  1114  003620  00                 	db	0
  1115  003621  00                 	db	0
  1116  003622  FE                 	db	254
  1117  003623  82                 	db	130
  1118  003624  82                 	db	130
  1119  003625  82                 	db	130
  1120  003626  82                 	db	130
  1121  003627  82                 	db	130
  1122  003628  82                 	db	130
  1123  003629  82                 	db	130
  1124  00362A  FE                 	db	254
  1125  00362B  00                 	db	0
  1126  00362C  00                 	db	0
  1127  00362D  00                 	db	0
  1128  00362E  00                 	db	0
  1129  00362F  00                 	db	0
  1130  003630  00                 	db	0
  1131  003631  00                 	db	0
  1132  003632  FF                 	db	255
  1133  003633  40                 	db	64
  1134  003634  40                 	db	64
  1135  003635  40                 	db	64
  1136  003636  40                 	db	64
  1137  003637  40                 	db	64
  1138  003638  40                 	db	64
  1139  003639  40                 	db	64
  1140  00363A  FF                 	db	255
  1141  00363B  00                 	db	0
  1142  00363C  00                 	db	0
  1143  00363D  00                 	db	0
  1144  00363E  00                 	db	0
  1145  00363F  00                 	db	0
  1146  003640  00                 	db	0
  1147  003641  FE                 	db	254
  1148  003642  82                 	db	130
  1149  003643  92                 	db	146
  1150  003644  92                 	db	146
  1151  003645  92                 	db	146
  1152  003646  FE                 	db	254
  1153  003647  92                 	db	146
  1154  003648  92                 	db	146
  1155  003649  92                 	db	146
  1156  00364A  82                 	db	130
  1157  00364B  FE                 	db	254
  1158  00364C  00                 	db	0
  1159  00364D  00                 	db	0
  1160  00364E  00                 	db	0
  1161  00364F  80                 	db	128
  1162  003650  60                 	db	96
  1163  003651  1F                 	db	31
  1164  003652  00                 	db	0
  1165  003653  00                 	db	0
  1166  003654  1E                 	db	30
  1167  003655  12                 	db	18
  1168  003656  12                 	db	18
  1169  003657  12                 	db	18
  1170  003658  1E                 	db	30
  1171  003659  40                 	db	64
  1172  00365A  80                 	db	128
  1173  00365B  7F                 	db	127
  1174  00365C  00                 	db	0
  1175  00365D  00                 	db	0
  1176  00365E  00                 	db	0
  1177  00365F  00                 	db	0
  1178  003660  40                 	db	64
  1179  003661  42                 	db	66
  1180  003662  44                 	db	68
  1181  003663  58                 	db	88
  1182  003664  40                 	db	64
  1183  003665  40                 	db	64
  1184  003666  7F                 	db	127
  1185  003667  40                 	db	64
  1186  003668  40                 	db	64
  1187  003669  50                 	db	80
  1188  00366A  48                 	db	72
  1189  00366B  C6                 	db	198
  1190  00366C  00                 	db	0
  1191  00366D  00                 	db	0
  1192  00366E  00                 	db	0
  1193  00366F  00                 	db	0
  1194  003670  40                 	db	64
  1195  003671  44                 	db	68
  1196  003672  44                 	db	68
  1197  003673  44                 	db	68
  1198  003674  44                 	db	68
  1199  003675  44                 	db	68
  1200  003676  44                 	db	68
  1201  003677  44                 	db	68
  1202  003678  44                 	db	68
  1203  003679  44                 	db	68
  1204  00367A  44                 	db	68
  1205  00367B  FF                 	db	255
  1206  00367C  00                 	db	0
  1207  00367D  00                 	db	0
  1208  00367E  00                 	db	0
  1209  00367F  08                 	db	8
  1210  003680  08                 	db	8
  1211  003681  E8                 	db	232
  1212  003682  29                 	db	41
  1213  003683  2E                 	db	46
  1214  003684  28                 	db	40
  1215  003685  E8                 	db	232
  1216  003686  08                 	db	8
  1217  003687  08                 	db	8
  1218  003688  C8                 	db	200
  1219  003689  0C                 	db	12
  1220  00368A  0B                 	db	11
  1221  00368B  E8                 	db	232
  1222  00368C  08                 	db	8
  1223  00368D  08                 	db	8
  1224  00368E  00                 	db	0
  1225  00368F  00                 	db	0
  1226  003690  00                 	db	0
  1227  003691  FF                 	db	255
  1228  003692  09                 	db	9
  1229  003693  49                 	db	73
  1230  003694  89                 	db	137
  1231  003695  7F                 	db	127
  1232  003696  00                 	db	0
  1233  003697  00                 	db	0
  1234  003698  0F                 	db	15
  1235  003699  40                 	db	64
  1236  00369A  80                 	db	128
  1237  00369B  7F                 	db	127
  1238  00369C  00                 	db	0
  1239  00369D  00                 	db	0
  1240  00369E  00                 	db	0
  1241  00369F  10                 	db	16
  1242  0036A0  10                 	db	16
  1243  0036A1  D0                 	db	208
  1244  0036A2  FF                 	db	255
  1245  0036A3  90                 	db	144
  1246  0036A4  10                 	db	16
  1247  0036A5  40                 	db	64
  1248  0036A6  42                 	db	66
  1249  0036A7  5C                 	db	92
  1250  0036A8  40                 	db	64
  1251  0036A9  7F                 	db	127
  1252  0036AA  40                 	db	64
  1253  0036AB  50                 	db	80
  1254  0036AC  CE                 	db	206
  1255  0036AD  00                 	db	0
  1256  0036AE  00                 	db	0
  1257  0036AF  04                 	db	4
  1258  0036B0  03                 	db	3
  1259  0036B1  00                 	db	0
  1260  0036B2  FF                 	db	255
  1261  0036B3  00                 	db	0
  1262  0036B4  01                 	db	1
  1263  0036B5  40                 	db	64
  1264  0036B6  44                 	db	68
  1265  0036B7  44                 	db	68
  1266  0036B8  44                 	db	68
  1267  0036B9  44                 	db	68
  1268  0036BA  44                 	db	68
  1269  0036BB  44                 	db	68
  1270  0036BC  FF                 	db	255
  1271  0036BD  00                 	db	0
  1272  0036BE  00                 	db	0
  1273  0036BF  00                 	db	0
  1274  0036C0  80                 	db	128
  1275  0036C1  60                 	db	96
  1276  0036C2  F8                 	db	248
  1277  0036C3  07                 	db	7
  1278  0036C4  10                 	db	16
  1279  0036C5  90                 	db	144
  1280  0036C6  10                 	db	16
  1281  0036C7  11                 	db	17
  1282  0036C8  16                 	db	22
  1283  0036C9  10                 	db	16
  1284  0036CA  10                 	db	16
  1285  0036CB  D0                 	db	208
  1286  0036CC  10                 	db	16
  1287  0036CD  00                 	db	0
  1288  0036CE  00                 	db	0
  1289  0036CF  01                 	db	1
  1290  0036D0  00                 	db	0
  1291  0036D1  00                 	db	0
  1292  0036D2  FF                 	db	255
  1293  0036D3  40                 	db	64
  1294  0036D4  40                 	db	64
  1295  0036D5  41                 	db	65
  1296  0036D6  5E                 	db	94
  1297  0036D7  40                 	db	64
  1298  0036D8  40                 	db	64
  1299  0036D9  70                 	db	112
  1300  0036DA  4E                 	db	78
  1301  0036DB  41                 	db	65
  1302  0036DC  40                 	db	64
  1303  0036DD  40                 	db	64
  1304  0036DE  00                 	db	0
  1305  0036DF  10                 	db	16
  1306  0036E0  10                 	db	16
  1307  0036E1  10                 	db	16
  1308  0036E2  FF                 	db	255
  1309  0036E3  10                 	db	16
  1310  0036E4  90                 	db	144
  1311  0036E5  04                 	db	4
  1312  0036E6  04                 	db	4
  1313  0036E7  04                 	db	4
  1314  0036E8  04                 	db	4
  1315  0036E9  FC                 	db	252
  1316  0036EA  04                 	db	4
  1317  0036EB  04                 	db	4
  1318  0036EC  04                 	db	4
  1319  0036ED  04                 	db	4
  1320  0036EE  00                 	db	0
  1321  0036EF  04                 	db	4
  1322  0036F0  44                 	db	68
  1323  0036F1  82                 	db	130
  1324  0036F2  7F                 	db	127
  1325  0036F3  01                 	db	1
  1326  0036F4  00                 	db	0
  1327  0036F5  00                 	db	0
  1328  0036F6  00                 	db	0
  1329  0036F7  40                 	db	64
  1330  0036F8  80                 	db	128
  1331  0036F9  7F                 	db	127
  1332  0036FA  00                 	db	0
  1333  0036FB  00                 	db	0
  1334  0036FC  00                 	db	0
  1335  0036FD  00                 	db	0
  1336  0036FE  00                 	db	0
  1337  0036FF  80                 	db	128
  1338  003700  80                 	db	128
  1339  003701  88                 	db	136
  1340  003702  88                 	db	136
  1341  003703  88                 	db	136
  1342  003704  88                 	db	136
  1343  003705  88                 	db	136
  1344  003706  FF                 	db	255
  1345  003707  88                 	db	136
  1346  003708  88                 	db	136
  1347  003709  88                 	db	136
  1348  00370A  88                 	db	136
  1349  00370B  88                 	db	136
  1350  00370C  80                 	db	128
  1351  00370D  80                 	db	128
  1352  00370E  00                 	db	0
  1353  00370F  00                 	db	0
  1354  003710  00                 	db	0
  1355  003711  7C                 	db	124
  1356  003712  40                 	db	64
  1357  003713  40                 	db	64
  1358  003714  40                 	db	64
  1359  003715  40                 	db	64
  1360  003716  7F                 	db	127
  1361  003717  40                 	db	64
  1362  003718  40                 	db	64
  1363  003719  40                 	db	64
  1364  00371A  40                 	db	64
  1365  00371B  FC                 	db	252
  1366  00371C  00                 	db	0
  1367  00371D  00                 	db	0
  1368  00371E  00                 	db	0
  1369  00371F  00                 	db	0
  1370  003720  02                 	db	2
  1371  003721  0C                 	db	12
  1372  003722  80                 	db	128
  1373  003723  60                 	db	96
  1374  003724  80                 	db	128
  1375  003725  40                 	db	64
  1376  003726  30                 	db	48
  1377  003727  0F                 	db	15
  1378  003728  C8                 	db	200
  1379  003729  08                 	db	8
  1380  00372A  08                 	db	8
  1381  00372B  28                 	db	40
  1382  00372C  18                 	db	24
  1383  00372D  00                 	db	0
  1384  00372E  00                 	db	0
  1385  00372F  02                 	db	2
  1386  003730  02                 	db	2
  1387  003731  7E                 	db	126
  1388  003732  01                 	db	1
  1389  003733  80                 	db	128
  1390  003734  40                 	db	64
  1391  003735  20                 	db	32
  1392  003736  18                 	db	24
  1393  003737  06                 	db	6
  1394  003738  01                 	db	1
  1395  003739  06                 	db	6
  1396  00373A  18                 	db	24
  1397  00373B  20                 	db	32
  1398  00373C  40                 	db	64
  1399  00373D  80                 	db	128
  1400  00373E  00                 	db	0
  1401  00373F  90                 	db	144
  1402  003740  52                 	db	82
  1403  003741  34                 	db	52
  1404  003742  10                 	db	16
  1405  003743  FF                 	db	255
  1406  003744  10                 	db	16
  1407  003745  34                 	db	52
  1408  003746  52                 	db	82
  1409  003747  80                 	db	128
  1410  003748  70                 	db	112
  1411  003749  8F                 	db	143
  1412  00374A  08                 	db	8
  1413  00374B  08                 	db	8
  1414  00374C  F8                 	db	248
  1415  00374D  08                 	db	8
  1416  00374E  00                 	db	0
  1417  00374F  82                 	db	130
  1418  003750  9A                 	db	154
  1419  003751  56                 	db	86
  1420  003752  63                 	db	99
  1421  003753  22                 	db	34
  1422  003754  52                 	db	82
  1423  003755  8E                 	db	142
  1424  003756  00                 	db	0
  1425  003757  80                 	db	128
  1426  003758  40                 	db	64
  1427  003759  33                 	db	51
  1428  00375A  0C                 	db	12
  1429  00375B  33                 	db	51
  1430  00375C  40                 	db	64
  1431  00375D  80                 	db	128
  1432  00375E  00                 	db	0
  1433  00375F  10                 	db	16
  1434  003760  60                 	db	96
  1435  003761  02                 	db	2
  1436  003762  8C                 	db	140
  1437  003763  00                 	db	0
  1438  003764  00                 	db	0
  1439  003765  FE                 	db	254
  1440  003766  92                 	db	146
  1441  003767  92                 	db	146
  1442  003768  92                 	db	146
  1443  003769  92                 	db	146
  1444  00376A  92                 	db	146
  1445  00376B  FE                 	db	254
  1446  00376C  00                 	db	0
  1447  00376D  00                 	db	0
  1448  00376E  00                 	db	0
  1449  00376F  04                 	db	4
  1450  003770  04                 	db	4
  1451  003771  7E                 	db	126
  1452  003772  01                 	db	1
  1453  003773  40                 	db	64
  1454  003774  7E                 	db	126
  1455  003775  42                 	db	66
  1456  003776  42                 	db	66
  1457  003777  7E                 	db	126
  1458  003778  42                 	db	66
  1459  003779  7E                 	db	126
  1460  00377A  42                 	db	66
  1461  00377B  42                 	db	66
  1462  00377C  7E                 	db	126
  1463  00377D  40                 	db	64
  1464  00377E  00                 	db	0
  1465  00377F  00                 	db	0
  1466  003780  00                 	db	0
  1467  003781  FC                 	db	252
  1468  003782  24                 	db	36
  1469  003783  24                 	db	36
  1470  003784  24                 	db	36
  1471  003785  FC                 	db	252
  1472  003786  25                 	db	37
  1473  003787  26                 	db	38
  1474  003788  24                 	db	36
  1475  003789  FC                 	db	252
  1476  00378A  24                 	db	36
  1477  00378B  24                 	db	36
  1478  00378C  24                 	db	36
  1479  00378D  04                 	db	4
  1480  00378E  00                 	db	0
  1481  00378F  40                 	db	64
  1482  003790  30                 	db	48
  1483  003791  8F                 	db	143
  1484  003792  80                 	db	128
  1485  003793  84                 	db	132
  1486  003794  4C                 	db	76
  1487  003795  55                 	db	85
  1488  003796  25                 	db	37
  1489  003797  25                 	db	37
  1490  003798  25                 	db	37
  1491  003799  55                 	db	85
  1492  00379A  4C                 	db	76
  1493  00379B  80                 	db	128
  1494  00379C  80                 	db	128
  1495  00379D  80                 	db	128
  1496  00379E  00                 	db	0
  1497  00379F  00                 	db	0
  1498  0037A0  00                 	db	0
  1499  0037A1  F8                 	db	248
  1500  0037A2  88                 	db	136
  1501  0037A3  88                 	db	136
  1502  0037A4  88                 	db	136
  1503  0037A5  88                 	db	136
  1504  0037A6  FF                 	db	255
  1505  0037A7  88                 	db	136
  1506  0037A8  88                 	db	136
  1507  0037A9  88                 	db	136
  1508  0037AA  88                 	db	136
  1509  0037AB  F8                 	db	248
  1510  0037AC  00                 	db	0
  1511  0037AD  00                 	db	0
  1512  0037AE  00                 	db	0
  1513  0037AF  00                 	db	0
  1514  0037B0  00                 	db	0
  1515  0037B1  1F                 	db	31
  1516  0037B2  08                 	db	8
  1517  0037B3  08                 	db	8
  1518  0037B4  08                 	db	8
  1519  0037B5  08                 	db	8
  1520  0037B6  7F                 	db	127
  1521  0037B7  88                 	db	136
  1522  0037B8  88                 	db	136
  1523  0037B9  88                 	db	136
  1524  0037BA  88                 	db	136
  1525  0037BB  9F                 	db	159
  1526  0037BC  80                 	db	128
  1527  0037BD  F0                 	db	240
  1528  0037BE  00                 	db	0
  1529  0037BF  20                 	db	32
  1530  0037C0  20                 	db	32
  1531  0037C1  20                 	db	32
  1532  0037C2  BE                 	db	190
  1533  0037C3  AA                 	db	170
  1534  0037C4  AA                 	db	170
  1535  0037C5  AA                 	db	170
  1536  0037C6  AA                 	db	170
  1537  0037C7  AA                 	db	170
  1538  0037C8  AA                 	db	170
  1539  0037C9  AA                 	db	170
  1540  0037CA  BE                 	db	190
  1541  0037CB  20                 	db	32
  1542  0037CC  20                 	db	32
  1543  0037CD  20                 	db	32
  1544  0037CE  00                 	db	0
  1545  0037CF  00                 	db	0
  1546  0037D0  80                 	db	128
  1547  0037D1  80                 	db	128
  1548  0037D2  AF                 	db	175
  1549  0037D3  AA                 	db	170
  1550  0037D4  AA                 	db	170
  1551  0037D5  AA                 	db	170
  1552  0037D6  FF                 	db	255
  1553  0037D7  AA                 	db	170
  1554  0037D8  AA                 	db	170
  1555  0037D9  AA                 	db	170
  1556  0037DA  AF                 	db	175
  1557  0037DB  80                 	db	128
  1558  0037DC  80                 	db	128
  1559  0037DD  00                 	db	0
  1560  0037DE  00                 	db	0
  1561  0037DF  00                 	db	0
  1562  0037E0  02                 	db	2
  1563  0037E1  02                 	db	2
  1564  0037E2  C2                 	db	194
  1565  0037E3  02                 	db	2
  1566  0037E4  02                 	db	2
  1567  0037E5  02                 	db	2
  1568  0037E6  FE                 	db	254
  1569  0037E7  82                 	db	130
  1570  0037E8  82                 	db	130
  1571  0037E9  82                 	db	130
  1572  0037EA  82                 	db	130
  1573  0037EB  82                 	db	130
  1574  0037EC  02                 	db	2
  1575  0037ED  00                 	db	0
  1576  0037EE  00                 	db	0
  1577  0037EF  40                 	db	64
  1578  0037F0  40                 	db	64
  1579  0037F1  40                 	db	64
  1580  0037F2  7F                 	db	127
  1581  0037F3  40                 	db	64
  1582  0037F4  40                 	db	64
  1583  0037F5  40                 	db	64
  1584  0037F6  7F                 	db	127
  1585  0037F7  40                 	db	64
  1586  0037F8  40                 	db	64
  1587  0037F9  40                 	db	64
  1588  0037FA  40                 	db	64
  1589  0037FB  40                 	db	64
  1590  0037FC  40                 	db	64
  1591  0037FD  40                 	db	64
  1592  0037FE  00                 	db	0
  1593  0037FF  C8                 	db	200
  1594  003800  B8                 	db	184
  1595  003801  8F                 	db	143
  1596  003802  E8                 	db	232
  1597  003803  88                 	db	136
  1598  003804  88                 	db	136
  1599  003805  40                 	db	64
  1600  003806  48                 	db	72
  1601  003807  48                 	db	72
  1602  003808  E8                 	db	232
  1603  003809  5F                 	db	95
  1604  00380A  48                 	db	72
  1605  00380B  48                 	db	72
  1606  00380C  48                 	db	72
  1607  00380D  40                 	db	64
  1608  00380E  00                 	db	0
  1609  00380F  08                 	db	8
  1610  003810  18                 	db	24
  1611  003811  08                 	db	8
  1612  003812  FF                 	db	255
  1613  003813  04                 	db	4
  1614  003814  04                 	db	4
  1615  003815  00                 	db	0
  1616  003816  02                 	db	2
  1617  003817  0B                 	db	11
  1618  003818  12                 	db	18
  1619  003819  22                 	db	34
  1620  00381A  D2                 	db	210
  1621  00381B  0A                 	db	10
  1622  00381C  06                 	db	6
  1623  00381D  00                 	db	0
  1624  00381E  00                 	db	0
  1625  00381F  80                 	db	128
  1626  003820  82                 	db	130
  1627  003821  82                 	db	130
  1628  003822  82                 	db	130
  1629  003823  FE                 	db	254
  1630  003824  82                 	db	130
  1631  003825  82                 	db	130
  1632  003826  82                 	db	130
  1633  003827  82                 	db	130
  1634  003828  82                 	db	130
  1635  003829  FE                 	db	254
  1636  00382A  82                 	db	130
  1637  00382B  82                 	db	130
  1638  00382C  82                 	db	130
  1639  00382D  80                 	db	128
  1640  00382E  00                 	db	0
  1641  00382F  00                 	db	0
  1642  003830  80                 	db	128
  1643  003831  40                 	db	64
  1644  003832  30                 	db	48
  1645  003833  0F                 	db	15
  1646  003834  00                 	db	0
  1647  003835  00                 	db	0
  1648  003836  00                 	db	0
  1649  003837  00                 	db	0
  1650  003838  00                 	db	0
  1651  003839  FF                 	db	255
  1652  00383A  00                 	db	0
  1653  00383B  00                 	db	0
  1654  00383C  00                 	db	0
  1655  00383D  00                 	db	0
  1656  00383E  00                 	db	0
  1657  00383F  00                 	db	0
  1658  003840  00                 	db	0
  1659  003841  10                 	db	16
  1660  003842  11                 	db	17
  1661  003843  16                 	db	22
  1662  003844  10                 	db	16
  1663  003845  10                 	db	16
  1664  003846  F0                 	db	240
  1665  003847  10                 	db	16
  1666  003848  10                 	db	16
  1667  003849  14                 	db	20
  1668  00384A  13                 	db	19
  1669  00384B  10                 	db	16
  1670  00384C  00                 	db	0
  1671  00384D  00                 	db	0
  1672  00384E  00                 	db	0
  1673  00384F  81                 	db	129
  1674  003850  81                 	db	129
  1675  003851  41                 	db	65
  1676  003852  41                 	db	65
  1677  003853  21                 	db	33
  1678  003854  11                 	db	17
  1679  003855  0D                 	db	13
  1680  003856  03                 	db	3
  1681  003857  0D                 	db	13
  1682  003858  11                 	db	17
  1683  003859  21                 	db	33
  1684  00385A  41                 	db	65
  1685  00385B  41                 	db	65
  1686  00385C  81                 	db	129
  1687  00385D  81                 	db	129
  1688  00385E  00                 	db	0
  1689  00385F  40                 	db	64
  1690  003860  40                 	db	64
  1691  003861  42                 	db	66
  1692  003862  CC                 	db	204
  1693  003863  00                 	db	0
  1694  003864  20                 	db	32
  1695  003865  22                 	db	34
  1696  003866  22                 	db	34
  1697  003867  A2                 	db	162
  1698  003868  62                 	db	98
  1699  003869  22                 	db	34
  1700  00386A  22                 	db	34
  1701  00386B  22                 	db	34
  1702  00386C  20                 	db	32
  1703  00386D  00                 	db	0
  1704  00386E  00                 	db	0
  1705  00386F  00                 	db	0
  1706  003870  40                 	db	64
  1707  003871  20                 	db	32
  1708  003872  1F                 	db	31
  1709  003873  20                 	db	32
  1710  003874  44                 	db	68
  1711  003875  4E                 	db	78
  1712  003876  45                 	db	69
  1713  003877  44                 	db	68
  1714  003878  44                 	db	68
  1715  003879  44                 	db	68
  1716  00387A  45                 	db	69
  1717  00387B  46                 	db	70
  1718  00387C  4C                 	db	76
  1719  00387D  40                 	db	64
  1720  00387E  00                 	db	0
  1721  00387F  00                 	db	0
  1722  003880  10                 	db	16
  1723  003881  88                 	db	136
  1724  003882  C4                 	db	196
  1725  003883  33                 	db	51
  1726  003884  00                 	db	0
  1727  003885  40                 	db	64
  1728  003886  42                 	db	66
  1729  003887  42                 	db	66
  1730  003888  42                 	db	66
  1731  003889  C2                 	db	194
  1732  00388A  42                 	db	66
  1733  00388B  42                 	db	66
  1734  00388C  42                 	db	66
  1735  00388D  40                 	db	64
  1736  00388E  00                 	db	0
  1737  00388F  02                 	db	2
  1738  003890  01                 	db	1
  1739  003891  00                 	db	0
  1740  003892  FF                 	db	255
  1741  003893  00                 	db	0
  1742  003894  00                 	db	0
  1743  003895  00                 	db	0
  1744  003896  00                 	db	0
  1745  003897  40                 	db	64
  1746  003898  80                 	db	128
  1747  003899  7F                 	db	127
  1748  00389A  00                 	db	0
  1749  00389B  00                 	db	0
  1750  00389C  00                 	db	0
  1751  00389D  00                 	db	0
  1752  00389E  00                 	db	0
  1753  00389F  00                 	db	0
  1754  0038A0  20                 	db	32
  1755  0038A1  20                 	db	32
  1756  0038A2  A8                 	db	168
  1757  0038A3  6C                 	db	108
  1758  0038A4  2A                 	db	42
  1759  0038A5  39                 	db	57
  1760  0038A6  28                 	db	40
  1761  0038A7  A8                 	db	168
  1762  0038A8  2A                 	db	42
  1763  0038A9  6C                 	db	108
  1764  0038AA  A8                 	db	168
  1765  0038AB  20                 	db	32
  1766  0038AC  20                 	db	32
  1767  0038AD  00                 	db	0
  1768  0038AE  00                 	db	0
  1769  0038AF  02                 	db	2
  1770  0038B0  82                 	db	130
  1771  0038B1  81                 	db	129
  1772  0038B2  90                 	db	144
  1773  0038B3  92                 	db	146
  1774  0038B4  4A                 	db	74
  1775  0038B5  49                 	db	73
  1776  0038B6  45                 	db	69
  1777  0038B7  24                 	db	36
  1778  0038B8  22                 	db	34
  1779  0038B9  10                 	db	16
  1780  0038BA  08                 	db	8
  1781  0038BB  01                 	db	1
  1782  0038BC  02                 	db	2
  1783  0038BD  02                 	db	2
  1784  0038BE  00                 	db	0
  1785  0038BF  90                 	db	144
  1786  0038C0  52                 	db	82
  1787  0038C1  34                 	db	52
  1788  0038C2  10                 	db	16
  1789  0038C3  FF                 	db	255
  1790  0038C4  10                 	db	16
  1791  0038C5  34                 	db	52
  1792  0038C6  52                 	db	82
  1793  0038C7  80                 	db	128
  1794  0038C8  70                 	db	112
  1795  0038C9  8F                 	db	143
  1796  0038CA  08                 	db	8
  1797  0038CB  08                 	db	8
  1798  0038CC  F8                 	db	248
  1799  0038CD  08                 	db	8
  1800  0038CE  00                 	db	0
  1801  0038CF  82                 	db	130
  1802  0038D0  9A                 	db	154
  1803  0038D1  56                 	db	86
  1804  0038D2  63                 	db	99
  1805  0038D3  22                 	db	34
  1806  0038D4  52                 	db	82
  1807  0038D5  8E                 	db	142
  1808  0038D6  00                 	db	0
  1809  0038D7  80                 	db	128
  1810  0038D8  40                 	db	64
  1811  0038D9  33                 	db	51
  1812  0038DA  0C                 	db	12
  1813  0038DB  33                 	db	51
  1814  0038DC  40                 	db	64
  1815  0038DD  80                 	db	128
  1816  0038DE  00                 	db	0
  1817  0038DF  00                 	db	0
  1818  0038E0  FC                 	db	252
  1819  0038E1  20                 	db	32
  1820  0038E2  24                 	db	36
  1821  0038E3  A8                 	db	168
  1822  0038E4  FF                 	db	255
  1823  0038E5  A8                 	db	168
  1824  0038E6  24                 	db	36
  1825  0038E7  00                 	db	0
  1826  0038E8  FC                 	db	252
  1827  0038E9  44                 	db	68
  1828  0038EA  44                 	db	68
  1829  0038EB  C4                 	db	196
  1830  0038EC  42                 	db	66
  1831  0038ED  40                 	db	64
  1832  0038EE  00                 	db	0
  1833  0038EF  00                 	db	0
  1834  0038F0  3F                 	db	63
  1835  0038F1  22                 	db	34
  1836  0038F2  21                 	db	33
  1837  0038F3  20                 	db	32
  1838  0038F4  2F                 	db	47
  1839  0038F5  20                 	db	32
  1840  0038F6  A3                 	db	163
  1841  0038F7  60                 	db	96
  1842  0038F8  1F                 	db	31
  1843  0038F9  00                 	db	0
  1844  0038FA  00                 	db	0
  1845  0038FB  FF                 	db	255
  1846  0038FC  00                 	db	0
  1847  0038FD  00                 	db	0
  1848  0038FE  00                 	db	0
  1849  0038FF  00                 	db	0
  1850  003900  00                 	db	0
  1851  003901  F8                 	db	248
  1852  003902  88                 	db	136
  1853  003903  88                 	db	136
  1854  003904  88                 	db	136
  1855  003905  88                 	db	136
  1856  003906  FF                 	db	255
  1857  003907  88                 	db	136
  1858  003908  88                 	db	136
  1859  003909  88                 	db	136
  1860  00390A  88                 	db	136
  1861  00390B  F8                 	db	248
  1862  00390C  00                 	db	0
  1863  00390D  00                 	db	0
  1864  00390E  00                 	db	0
  1865  00390F  00                 	db	0
  1866  003910  00                 	db	0
  1867  003911  1F                 	db	31
  1868  003912  08                 	db	8
  1869  003913  08                 	db	8
  1870  003914  08                 	db	8
  1871  003915  08                 	db	8
  1872  003916  7F                 	db	127
  1873  003917  88                 	db	136
  1874  003918  88                 	db	136
  1875  003919  88                 	db	136
  1876  00391A  88                 	db	136
  1877  00391B  9F                 	db	159
  1878  00391C  80                 	db	128
  1879  00391D  F0                 	db	240
  1880  00391E  00                 	db	0
  1881  00391F  10                 	db	16
  1882  003920  60                 	db	96
  1883  003921  02                 	db	2
  1884  003922  8C                 	db	140
  1885  003923  00                 	db	0
  1886  003924  00                 	db	0
  1887  003925  FE                 	db	254
  1888  003926  92                 	db	146
  1889  003927  92                 	db	146
  1890  003928  92                 	db	146
  1891  003929  92                 	db	146
  1892  00392A  92                 	db	146
  1893  00392B  FE                 	db	254
  1894  00392C  00                 	db	0
  1895  00392D  00                 	db	0
  1896  00392E  00                 	db	0
  1897  00392F  04                 	db	4
  1898  003930  04                 	db	4
  1899  003931  7E                 	db	126
  1900  003932  01                 	db	1
  1901  003933  40                 	db	64
  1902  003934  7E                 	db	126
  1903  003935  42                 	db	66
  1904  003936  42                 	db	66
  1905  003937  7E                 	db	126
  1906  003938  42                 	db	66
  1907  003939  7E                 	db	126
  1908  00393A  42                 	db	66
  1909  00393B  42                 	db	66
  1910  00393C  7E                 	db	126
  1911  00393D  40                 	db	64
  1912  00393E  00                 	db	0
  1913  00393F  00                 	db	0
  1914  003940  00                 	db	0
  1915  003941  FC                 	db	252
  1916  003942  24                 	db	36
  1917  003943  24                 	db	36
  1918  003944  24                 	db	36
  1919  003945  FC                 	db	252
  1920  003946  25                 	db	37
  1921  003947  26                 	db	38
  1922  003948  24                 	db	36
  1923  003949  FC                 	db	252
  1924  00394A  24                 	db	36
  1925  00394B  24                 	db	36
  1926  00394C  24                 	db	36
  1927  00394D  04                 	db	4
  1928  00394E  00                 	db	0
  1929  00394F  40                 	db	64
  1930  003950  30                 	db	48
  1931  003951  8F                 	db	143
  1932  003952  80                 	db	128
  1933  003953  84                 	db	132
  1934  003954  4C                 	db	76
  1935  003955  55                 	db	85
  1936  003956  25                 	db	37
  1937  003957  25                 	db	37
  1938  003958  25                 	db	37
  1939  003959  55                 	db	85
  1940  00395A  4C                 	db	76
  1941  00395B  80                 	db	128
  1942  00395C  80                 	db	128
  1943  00395D  80                 	db	128
  1944  00395E  00                 	db	0
  1945  00395F  00                 	db	0
  1946  003960  00                 	db	0
  1947  003961  00                 	db	0
  1948  003962  FE                 	db	254
  1949  003963  82                 	db	130
  1950  003964  82                 	db	130
  1951  003965  82                 	db	130
  1952  003966  82                 	db	130
  1953  003967  82                 	db	130
  1954  003968  82                 	db	130
  1955  003969  82                 	db	130
  1956  00396A  FE                 	db	254
  1957  00396B  00                 	db	0
  1958  00396C  00                 	db	0
  1959  00396D  00                 	db	0
  1960  00396E  00                 	db	0
  1961  00396F  00                 	db	0
  1962  003970  00                 	db	0
  1963  003971  00                 	db	0
  1964  003972  FF                 	db	255
  1965  003973  40                 	db	64
  1966  003974  40                 	db	64
  1967  003975  40                 	db	64
  1968  003976  40                 	db	64
  1969  003977  40                 	db	64
  1970  003978  40                 	db	64
  1971  003979  40                 	db	64
  1972  00397A  FF                 	db	255
  1973  00397B  00                 	db	0
  1974  00397C  00                 	db	0
  1975  00397D  00                 	db	0
  1976  00397E  00                 	db	0
  1977  00397F  00                 	db	0
  1978  003980  04                 	db	4
  1979  003981  FF                 	db	255
  1980  003982  24                 	db	36
  1981  003983  24                 	db	36
  1982  003984  24                 	db	36
  1983  003985  FF                 	db	255
  1984  003986  04                 	db	4
  1985  003987  00                 	db	0
  1986  003988  FE                 	db	254
  1987  003989  22                 	db	34
  1988  00398A  22                 	db	34
  1989  00398B  22                 	db	34
  1990  00398C  FE                 	db	254
  1991  00398D  00                 	db	0
  1992  00398E  00                 	db	0
  1993  00398F  88                 	db	136
  1994  003990  48                 	db	72
  1995  003991  2F                 	db	47
  1996  003992  09                 	db	9
  1997  003993  09                 	db	9
  1998  003994  19                 	db	25
  1999  003995  AF                 	db	175
  2000  003996  48                 	db	72
  2001  003997  30                 	db	48
  2002  003998  0F                 	db	15
  2003  003999  02                 	db	2
  2004  00399A  42                 	db	66
  2005  00399B  82                 	db	130
  2006  00399C  7F                 	db	127
  2007  00399D  00                 	db	0
  2008  00399E  00                 	db	0
  2009  00399F  00                 	db	0
  2010  0039A0  FC                 	db	252
  2011  0039A1  84                 	db	132
  2012  0039A2  84                 	db	132
  2013  0039A3  84                 	db	132
  2014  0039A4  FC                 	db	252
  2015  0039A5  00                 	db	0
  2016  0039A6  10                 	db	16
  2017  0039A7  10                 	db	16
  2018  0039A8  10                 	db	16
  2019  0039A9  10                 	db	16
  2020  0039AA  10                 	db	16
  2021  0039AB  FF                 	db	255
  2022  0039AC  10                 	db	16
  2023  0039AD  10                 	db	16
  2024  0039AE  00                 	db	0
  2025  0039AF  00                 	db	0
  2026  0039B0  3F                 	db	63
  2027  0039B1  10                 	db	16
  2028  0039B2  10                 	db	16
  2029  0039B3  10                 	db	16
  2030  0039B4  3F                 	db	63
  2031  0039B5  00                 	db	0
  2032  0039B6  00                 	db	0
  2033  0039B7  01                 	db	1
  2034  0039B8  06                 	db	6
  2035  0039B9  40                 	db	64
  2036  0039BA  80                 	db	128
  2037  0039BB  7F                 	db	127
  2038  0039BC  00                 	db	0
  2039  0039BD  00                 	db	0
  2040  0039BE  00                 	db	0
  2041  0039BF  00                 	db	0
  2042  0039C0  F8                 	db	248
  2043  0039C1  01                 	db	1
  2044  0039C2  06                 	db	6
  2045  0039C3  00                 	db	0
  2046  0039C4  F0                 	db	240
  2047  0039C5  12                 	db	18
  2048  0039C6  12                 	db	18
  2049  0039C7  12                 	db	18
  2050  0039C8  F2                 	db	242
  2051  0039C9  02                 	db	2
  2052  0039CA  02                 	db	2
  2053  0039CB  02                 	db	2
  2054  0039CC  FE                 	db	254
  2055  0039CD  00                 	db	0
  2056  0039CE  00                 	db	0
  2057  0039CF  00                 	db	0
  2058  0039D0  FF                 	db	255
  2059  0039D1  00                 	db	0
  2060  0039D2  00                 	db	0
  2061  0039D3  00                 	db	0
  2062  0039D4  1F                 	db	31
  2063  0039D5  11                 	db	17
  2064  0039D6  11                 	db	17
  2065  0039D7  11                 	db	17
  2066  0039D8  1F                 	db	31
  2067  0039D9  00                 	db	0
  2068  0039DA  40                 	db	64
  2069  0039DB  80                 	db	128
  2070  0039DC  7F                 	db	127
  2071  0039DD  00                 	db	0
  2072  0039DE  00                 	db	0
  2073  0039DF  00                 	db	0
  2074  0039E0  E0                 	db	224
  2075  0039E1  00                 	db	0
  2076  0039E2  FF                 	db	255
  2077  0039E3  10                 	db	16
  2078  0039E4  20                 	db	32
  2079  0039E5  08                 	db	8
  2080  0039E6  88                 	db	136
  2081  0039E7  78                 	db	120
  2082  0039E8  0F                 	db	15
  2083  0039E9  08                 	db	8
  2084  0039EA  E8                 	db	232
  2085  0039EB  08                 	db	8
  2086  0039EC  08                 	db	8
  2087  0039ED  88                 	db	136
  2088  0039EE  00                 	db	0
  2089  0039EF  01                 	db	1
  2090  0039F0  00                 	db	0
  2091  0039F1  00                 	db	0
  2092  0039F2  FF                 	db	255
  2093  0039F3  00                 	db	0
  2094  0039F4  10                 	db	16
  2095  0039F5  0C                 	db	12
  2096  0039F6  83                 	db	131
  2097  0039F7  44                 	db	68
  2098  0039F8  23                 	db	35
  2099  0039F9  18                 	db	24
  2100  0039FA  07                 	db	7
  2101  0039FB  18                 	db	24
  2102  0039FC  62                 	db	98
  2103  0039FD  81                 	db	129
  2104  0039FE  00                 	db	0
  2105  0039FF  20                 	db	32
  2106  003A00  10                 	db	16
  2107  003A01  08                 	db	8
  2108  003A02  F7                 	db	247
  2109  003A03  54                 	db	84
  2110  003A04  54                 	db	84
  2111  003A05  54                 	db	84
  2112  003A06  54                 	db	84
  2113  003A07  54                 	db	84
  2114  003A08  54                 	db	84
  2115  003A09  54                 	db	84
  2116  003A0A  F4                 	db	244
  2117  003A0B  04                 	db	4
  2118  003A0C  04                 	db	4
  2119  003A0D  00                 	db	0
  2120  003A0E  00                 	db	0
  2121  003A0F  80                 	db	128
  2122  003A10  90                 	db	144
  2123  003A11  90                 	db	144
  2124  003A12  49                 	db	73
  2125  003A13  4D                 	db	77
  2126  003A14  57                 	db	87
  2127  003A15  25                 	db	37
  2128  003A16  25                 	db	37
  2129  003A17  25                 	db	37
  2130  003A18  55                 	db	85
  2131  003A19  4D                 	db	77
  2132  003A1A  45                 	db	69
  2133  003A1B  80                 	db	128
  2134  003A1C  80                 	db	128
  2135  003A1D  80                 	db	128
  2136  003A1E  00                 	db	0
  2137  003A1F  00                 	db	0
  2138  003A20  00                 	db	0
  2139  003A21  7C                 	db	124
  2140  003A22  40                 	db	64
  2141  003A23  40                 	db	64
  2142  003A24  40                 	db	64
  2143  003A25  40                 	db	64
  2144  003A26  FF                 	db	255
  2145  003A27  40                 	db	64
  2146  003A28  40                 	db	64
  2147  003A29  40                 	db	64
  2148  003A2A  40                 	db	64
  2149  003A2B  FC                 	db	252
  2150  003A2C  00                 	db	0
  2151  003A2D  00                 	db	0
  2152  003A2E  00                 	db	0
  2153  003A2F  00                 	db	0
  2154  003A30  7C                 	db	124
  2155  003A31  40                 	db	64
  2156  003A32  40                 	db	64
  2157  003A33  40                 	db	64
  2158  003A34  40                 	db	64
  2159  003A35  40                 	db	64
  2160  003A36  7F                 	db	127
  2161  003A37  40                 	db	64
  2162  003A38  40                 	db	64
  2163  003A39  40                 	db	64
  2164  003A3A  40                 	db	64
  2165  003A3B  40                 	db	64
  2166  003A3C  FC                 	db	252
  2167  003A3D  00                 	db	0
  2168  003A3E  00                 	db	0
  2169  003A3F  00                 	db	0
  2170  003A40  00                 	db	0
  2171  003A41  FE                 	db	254
  2172  003A42  02                 	db	2
  2173  003A43  02                 	db	2
  2174  003A44  02                 	db	2
  2175  003A45  02                 	db	2
  2176  003A46  02                 	db	2
  2177  003A47  02                 	db	2
  2178  003A48  02                 	db	2
  2179  003A49  02                 	db	2
  2180  003A4A  02                 	db	2
  2181  003A4B  02                 	db	2
  2182  003A4C  02                 	db	2
  2183  003A4D  02                 	db	2
  2184  003A4E  00                 	db	0
  2185  003A4F  80                 	db	128
  2186  003A50  60                 	db	96
  2187  003A51  1F                 	db	31
  2188  003A52  00                 	db	0
  2189  003A53  00                 	db	0
  2190  003A54  00                 	db	0
  2191  003A55  00                 	db	0
  2192  003A56  00                 	db	0
  2193  003A57  00                 	db	0
  2194  003A58  00                 	db	0
  2195  003A59  00                 	db	0
  2196  003A5A  00                 	db	0
  2197  003A5B  00                 	db	0
  2198  003A5C  00                 	db	0
  2199  003A5D  00                 	db	0
  2200  003A5E  00                 	db	0
  2201  003A5F  40                 	db	64
  2202  003A60  40                 	db	64
  2203  003A61  42                 	db	66
  2204  003A62  CC                 	db	204
  2205  003A63  00                 	db	0
  2206  003A64  40                 	db	64
  2207  003A65  A0                 	db	160
  2208  003A66  9E                 	db	158
  2209  003A67  82                 	db	130
  2210  003A68  82                 	db	130
  2211  003A69  82                 	db	130
  2212  003A6A  9E                 	db	158
  2213  003A6B  A0                 	db	160
  2214  003A6C  20                 	db	32
  2215  003A6D  20                 	db	32
  2216  003A6E  00                 	db	0
  2217  003A6F  00                 	db	0
  2218  003A70  00                 	db	0
  2219  003A71  00                 	db	0
  2220  003A72  3F                 	db	63
  2221  003A73  90                 	db	144
  2222  003A74  88                 	db	136
  2223  003A75  40                 	db	64
  2224  003A76  43                 	db	67
  2225  003A77  2C                 	db	44
  2226  003A78  10                 	db	16
  2227  003A79  28                 	db	40
  2228  003A7A  46                 	db	70
  2229  003A7B  41                 	db	65
  2230  003A7C  80                 	db	128
  2231  003A7D  80                 	db	128
  2232  003A7E  00                 	db	0
  2233  003A7F  00                 	db	0
  2234  003A80  17                 	db	23
  2235  003A81  15                 	db	21
  2236  003A82  D5                 	db	213
  2237  003A83  55                 	db	85
  2238  003A84  57                 	db	87
  2239  003A85  55                 	db	85
  2240  003A86  7D                 	db	125
  2241  003A87  55                 	db	85
  2242  003A88  57                 	db	87
  2243  003A89  55                 	db	85
  2244  003A8A  D5                 	db	213
  2245  003A8B  15                 	db	21
  2246  003A8C  17                 	db	23
  2247  003A8D  00                 	db	0
  2248  003A8E  00                 	db	0
  2249  003A8F  40                 	db	64
  2250  003A90  40                 	db	64
  2251  003A91  40                 	db	64
  2252  003A92  7F                 	db	127
  2253  003A93  55                 	db	85
  2254  003A94  55                 	db	85
  2255  003A95  55                 	db	85
  2256  003A96  55                 	db	85
  2257  003A97  55                 	db	85
  2258  003A98  55                 	db	85
  2259  003A99  55                 	db	85
  2260  003A9A  7F                 	db	127
  2261  003A9B  40                 	db	64
  2262  003A9C  40                 	db	64
  2263  003A9D  40                 	db	64
  2264  003A9E  00                 	db	0
  2265  003A9F  00                 	db	0
  2266  003AA0  00                 	db	0
  2267  003AA1  00                 	db	0
  2268  003AA2  00                 	db	0
  2269  003AA3  00                 	db	0
  2270  003AA4  00                 	db	0
  2271  003AA5  00                 	db	0
  2272  003AA6  FF                 	db	255
  2273  003AA7  08                 	db	8
  2274  003AA8  08                 	db	8
  2275  003AA9  08                 	db	8
  2276  003AAA  08                 	db	8
  2277  003AAB  08                 	db	8
  2278  003AAC  08                 	db	8
  2279  003AAD  08                 	db	8
  2280  003AAE  00                 	db	0
  2281  003AAF  00                 	db	0
  2282  003AB0  00                 	db	0
  2283  003AB1  FF                 	db	255
  2284  003AB2  41                 	db	65
  2285  003AB3  41                 	db	65
  2286  003AB4  41                 	db	65
  2287  003AB5  41                 	db	65
  2288  003AB6  41                 	db	65
  2289  003AB7  41                 	db	65
  2290  003AB8  41                 	db	65
  2291  003AB9  41                 	db	65
  2292  003ABA  41                 	db	65
  2293  003ABB  FF                 	db	255
  2294  003ABC  00                 	db	0
  2295  003ABD  00                 	db	0
  2296  003ABE  00                 	db	0
  2297  003ABF  10                 	db	16
  2298  003AC0  0C                 	db	12
  2299  003AC1  44                 	db	68
  2300  003AC2  24                 	db	36
  2301  003AC3  14                 	db	20
  2302  003AC4  04                 	db	4
  2303  003AC5  05                 	db	5
  2304  003AC6  06                 	db	6
  2305  003AC7  04                 	db	4
  2306  003AC8  04                 	db	4
  2307  003AC9  14                 	db	20
  2308  003ACA  24                 	db	36
  2309  003ACB  44                 	db	68
  2310  003ACC  14                 	db	20
  2311  003ACD  0C                 	db	12
  2312  003ACE  00                 	db	0
  2313  003ACF  00                 	db	0
  2314  003AD0  40                 	db	64
  2315  003AD1  40                 	db	64
  2316  003AD2  41                 	db	65
  2317  003AD3  41                 	db	65
  2318  003AD4  41                 	db	65
  2319  003AD5  41                 	db	65
  2320  003AD6  7F                 	db	127
  2321  003AD7  41                 	db	65
  2322  003AD8  41                 	db	65
  2323  003AD9  41                 	db	65
  2324  003ADA  41                 	db	65
  2325  003ADB  40                 	db	64
  2326  003ADC  40                 	db	64
  2327  003ADD  00                 	db	0
  2328  003ADE  00                 	db	0
  2329  003ADF  00                 	db	0
  2330  003AE0  00                 	db	0
  2331  003AE1  FE                 	db	254
  2332  003AE2  40                 	db	64
  2333  003AE3  40                 	db	64
  2334  003AE4  40                 	db	64
  2335  003AE5  40                 	db	64
  2336  003AE6  00                 	db	0
  2337  003AE7  FF                 	db	255
  2338  003AE8  80                 	db	128
  2339  003AE9  40                 	db	64
  2340  003AEA  20                 	db	32
  2341  003AEB  10                 	db	16
  2342  003AEC  08                 	db	8
  2343  003AED  00                 	db	0
  2344  003AEE  00                 	db	0
  2345  003AEF  00                 	db	0
  2346  003AF0  00                 	db	0
  2347  003AF1  7F                 	db	127
  2348  003AF2  20                 	db	32
  2349  003AF3  20                 	db	32
  2350  003AF4  10                 	db	16
  2351  003AF5  10                 	db	16
  2352  003AF6  00                 	db	0
  2353  003AF7  3F                 	db	63
  2354  003AF8  40                 	db	64
  2355  003AF9  40                 	db	64
  2356  003AFA  40                 	db	64
  2357  003AFB  40                 	db	64
  2358  003AFC  40                 	db	64
  2359  003AFD  78                 	db	120
  2360  003AFE  00                 	db	0
  2361  003AFF  00                 	db	0
  2362  003B00  FC                 	db	252
  2363  003B01  84                 	db	132
  2364  003B02  84                 	db	132
  2365  003B03  84                 	db	132
  2366  003B04  FC                 	db	252
  2367  003B05  00                 	db	0
  2368  003B06  10                 	db	16
  2369  003B07  10                 	db	16
  2370  003B08  10                 	db	16
  2371  003B09  10                 	db	16
  2372  003B0A  10                 	db	16
  2373  003B0B  FF                 	db	255
  2374  003B0C  10                 	db	16
  2375  003B0D  10                 	db	16
  2376  003B0E  00                 	db	0
  2377  003B0F  00                 	db	0
  2378  003B10  3F                 	db	63
  2379  003B11  10                 	db	16
  2380  003B12  10                 	db	16
  2381  003B13  10                 	db	16
  2382  003B14  3F                 	db	63
  2383  003B15  00                 	db	0
  2384  003B16  00                 	db	0
  2385  003B17  01                 	db	1
  2386  003B18  06                 	db	6
  2387  003B19  40                 	db	64
  2388  003B1A  80                 	db	128
  2389  003B1B  7F                 	db	127
  2390  003B1C  00                 	db	0
  2391  003B1D  00                 	db	0
  2392  003B1E  00                 	db	0
  2393  003B1F  80                 	db	128
  2394  003B20  40                 	db	64
  2395  003B21  20                 	db	32
  2396  003B22  90                 	db	144
  2397  003B23  88                 	db	136
  2398  003B24  86                 	db	134
  2399  003B25  80                 	db	128
  2400  003B26  80                 	db	128
  2401  003B27  80                 	db	128
  2402  003B28  83                 	db	131
  2403  003B29  8C                 	db	140
  2404  003B2A  10                 	db	16
  2405  003B2B  20                 	db	32
  2406  003B2C  40                 	db	64
  2407  003B2D  80                 	db	128
  2408  003B2E  00                 	db	0
  2409  003B2F  00                 	db	0
  2410  003B30  80                 	db	128
  2411  003B31  40                 	db	64
  2412  003B32  20                 	db	32
  2413  003B33  18                 	db	24
  2414  003B34  07                 	db	7
  2415  003B35  00                 	db	0
  2416  003B36  40                 	db	64
  2417  003B37  80                 	db	128
  2418  003B38  40                 	db	64
  2419  003B39  3F                 	db	63
  2420  003B3A  00                 	db	0
  2421  003B3B  00                 	db	0
  2422  003B3C  00                 	db	0
  2423  003B3D  00                 	db	0
  2424  003B3E  00                 	db	0
  2425  003B3F  24                 	db	36
  2426  003B40  24                 	db	36
  2427  003B41  A4                 	db	164
  2428  003B42  FE                 	db	254
  2429  003B43  23                 	db	35
  2430  003B44  22                 	db	34
  2431  003B45  00                 	db	0
  2432  003B46  C0                 	db	192
  2433  003B47  38                 	db	56
  2434  003B48  00                 	db	0
  2435  003B49  FF                 	db	255
  2436  003B4A  00                 	db	0
  2437  003B4B  08                 	db	8
  2438  003B4C  10                 	db	16
  2439  003B4D  60                 	db	96
  2440  003B4E  00                 	db	0
  2441  003B4F  08                 	db	8
  2442  003B50  06                 	db	6
  2443  003B51  01                 	db	1
  2444  003B52  FF                 	db	255
  2445  003B53  01                 	db	1
  2446  003B54  06                 	db	6
  2447  003B55  81                 	db	129
  2448  003B56  80                 	db	128
  2449  003B57  40                 	db	64
  2450  003B58  40                 	db	64
  2451  003B59  27                 	db	39
  2452  003B5A  10                 	db	16
  2453  003B5B  0C                 	db	12
  2454  003B5C  03                 	db	3
  2455  003B5D  00                 	db	0
  2456  003B5E  00                 	db	0
  2457  003B5F  00                 	db	0
  2458  003B60  00                 	db	0
  2459  003B61  00                 	db	0
  2460  003B62  00                 	db	0
  2461  003B63  00                 	db	0
  2462  003B64  00                 	db	0
  2463  003B65  00                 	db	0
  2464  003B66  00                 	db	0
  2465  003B67  00                 	db	0
  2466  003B68  00                 	db	0
  2467  003B69  00                 	db	0
  2468  003B6A  00                 	db	0
  2469  003B6B  00                 	db	0
  2470  003B6C  00                 	db	0
  2471  003B6D  00                 	db	0
  2472  003B6E  00                 	db	0
  2473  003B6F  00                 	db	0
  2474  003B70  00                 	db	0
  2475  003B71  00                 	db	0
  2476  003B72  00                 	db	0
  2477  003B73  00                 	db	0
  2478  003B74  00                 	db	0
  2479  003B75  00                 	db	0
  2480  003B76  00                 	db	0
  2481  003B77  00                 	db	0
  2482  003B78  00                 	db	0
  2483  003B79  00                 	db	0
  2484  003B7A  00                 	db	0
  2485  003B7B  00                 	db	0
  2486  003B7C  00                 	db	0
  2487  003B7D  00                 	db	0
  2488  003B7E  00                 	db	0
  2489  003B7F  7E                 	db	126
  2490  003B80  4A                 	db	74
  2491  003B81  52                 	db	82
  2492  003B82  FE                 	db	254
  2493  003B83  52                 	db	82
  2494  003B84  4A                 	db	74
  2495  003B85  7E                 	db	126
  2496  003B86  20                 	db	32
  2497  003B87  20                 	db	32
  2498  003B88  20                 	db	32
  2499  003B89  FF                 	db	255
  2500  003B8A  20                 	db	32
  2501  003B8B  22                 	db	34
  2502  003B8C  2C                 	db	44
  2503  003B8D  20                 	db	32
  2504  003B8E  00                 	db	0
  2505  003B8F  E9                 	db	233
  2506  003B90  09                 	db	9
  2507  003B91  69                 	db	105
  2508  003B92  07                 	db	7
  2509  003B93  65                 	db	101
  2510  003B94  05                 	db	5
  2511  003B95  B5                 	db	181
  2512  003B96  40                 	db	64
  2513  003B97  30                 	db	48
  2514  003B98  0E                 	db	14
  2515  003B99  01                 	db	1
  2516  003B9A  0E                 	db	14
  2517  003B9B  30                 	db	48
  2518  003B9C  40                 	db	64
  2519  003B9D  80                 	db	128
  2520  003B9E  00                 	db	0
  2521  003B9F  40                 	db	64
  2522  003BA0  40                 	db	64
  2523  003BA1  42                 	db	66
  2524  003BA2  CC                 	db	204
  2525  003BA3  00                 	db	0
  2526  003BA4  00                 	db	0
  2527  003BA5  00                 	db	0
  2528  003BA6  00                 	db	0
  2529  003BA7  00                 	db	0
  2530  003BA8  FF                 	db	255
  2531  003BA9  00                 	db	0
  2532  003BAA  00                 	db	0
  2533  003BAB  00                 	db	0
  2534  003BAC  00                 	db	0
  2535  003BAD  00                 	db	0
  2536  003BAE  00                 	db	0
  2537  003BAF  00                 	db	0
  2538  003BB0  00                 	db	0
  2539  003BB1  00                 	db	0
  2540  003BB2  3F                 	db	63
  2541  003BB3  90                 	db	144
  2542  003BB4  48                 	db	72
  2543  003BB5  20                 	db	32
  2544  003BB6  18                 	db	24
  2545  003BB7  07                 	db	7
  2546  003BB8  00                 	db	0
  2547  003BB9  07                 	db	7
  2548  003BBA  18                 	db	24
  2549  003BBB  20                 	db	32
  2550  003BBC  40                 	db	64
  2551  003BBD  80                 	db	128
  2552  003BBE  00                 	db	0
  2553  003BBF  10                 	db	16
  2554  003BC0  60                 	db	96
  2555  003BC1  02                 	db	2
  2556  003BC2  8C                 	db	140
  2557  003BC3  00                 	db	0
  2558  003BC4  44                 	db	68
  2559  003BC5  54                 	db	84
  2560  003BC6  54                 	db	84
  2561  003BC7  54                 	db	84
  2562  003BC8  7F                 	db	127
  2563  003BC9  54                 	db	84
  2564  003BCA  54                 	db	84
  2565  003BCB  54                 	db	84
  2566  003BCC  44                 	db	68
  2567  003BCD  40                 	db	64
  2568  003BCE  00                 	db	0
  2569  003BCF  04                 	db	4
  2570  003BD0  04                 	db	4
  2571  003BD1  7E                 	db	126
  2572  003BD2  01                 	db	1
  2573  003BD3  00                 	db	0
  2574  003BD4  00                 	db	0
  2575  003BD5  FF                 	db	255
  2576  003BD6  15                 	db	21
  2577  003BD7  15                 	db	21
  2578  003BD8  15                 	db	21
  2579  003BD9  55                 	db	85
  2580  003BDA  95                 	db	149
  2581  003BDB  7F                 	db	127
  2582  003BDC  00                 	db	0
  2583  003BDD  00                 	db	0
  2584  003BDE  00                 	db	0
  2585  003BDF  10                 	db	16
  2586  003BE0  0C                 	db	12
  2587  003BE1  44                 	db	68
  2588  003BE2  24                 	db	36
  2589  003BE3  14                 	db	20
  2590  003BE4  04                 	db	4
  2591  003BE5  05                 	db	5
  2592  003BE6  06                 	db	6
  2593  003BE7  04                 	db	4
  2594  003BE8  04                 	db	4
  2595  003BE9  14                 	db	20
  2596  003BEA  24                 	db	36
  2597  003BEB  44                 	db	68
  2598  003BEC  14                 	db	20
  2599  003BED  0C                 	db	12
  2600  003BEE  00                 	db	0
  2601  003BEF  00                 	db	0
  2602  003BF0  40                 	db	64
  2603  003BF1  40                 	db	64
  2604  003BF2  41                 	db	65
  2605  003BF3  41                 	db	65
  2606  003BF4  41                 	db	65
  2607  003BF5  41                 	db	65
  2608  003BF6  7F                 	db	127
  2609  003BF7  41                 	db	65
  2610  003BF8  41                 	db	65
  2611  003BF9  41                 	db	65
  2612  003BFA  41                 	db	65
  2613  003BFB  40                 	db	64
  2614  003BFC  40                 	db	64
  2615  003BFD  00                 	db	0
  2616  003BFE  00                 	db	0
  2617  003BFF  00                 	db	0
  2618  003C00  00                 	db	0
  2619  003C01  FC                 	db	252
  2620  003C02  24                 	db	36
  2621  003C03  24                 	db	36
  2622  003C04  22                 	db	34
  2623  003C05  E3                 	db	227
  2624  003C06  02                 	db	2
  2625  003C07  FC                 	db	252
  2626  003C08  44                 	db	68
  2627  003C09  44                 	db	68
  2628  003C0A  42                 	db	66
  2629  003C0B  C3                 	db	195
  2630  003C0C  42                 	db	66
  2631  003C0D  40                 	db	64
  2632  003C0E  00                 	db	0
  2633  003C0F  40                 	db	64
  2634  003C10  30                 	db	48
  2635  003C11  0F                 	db	15
  2636  003C12  02                 	db	2
  2637  003C13  02                 	db	2
  2638  003C14  82                 	db	130
  2639  003C15  43                 	db	67
  2640  003C16  30                 	db	48
  2641  003C17  0F                 	db	15
  2642  003C18  00                 	db	0
  2643  003C19  00                 	db	0
  2644  003C1A  00                 	db	0
  2645  003C1B  FF                 	db	255
  2646  003C1C  00                 	db	0
  2647  003C1D  00                 	db	0
  2648  003C1E  00                 	db	0
  2649  003C1F  04                 	db	4
  2650  003C20  04                 	db	4
  2651  003C21  04                 	db	4
  2652  003C22  84                 	db	132
  2653  003C23  E4                 	db	228
  2654  003C24  3C                 	db	60
  2655  003C25  27                 	db	39
  2656  003C26  24                 	db	36
  2657  003C27  24                 	db	36
  2658  003C28  24                 	db	36
  2659  003C29  24                 	db	36
  2660  003C2A  E4                 	db	228
  2661  003C2B  04                 	db	4
  2662  003C2C  04                 	db	4
  2663  003C2D  04                 	db	4
  2664  003C2E  00                 	db	0
  2665  003C2F  04                 	db	4
  2666  003C30  02                 	db	2
  2667  003C31  01                 	db	1
  2668  003C32  00                 	db	0
  2669  003C33  FF                 	db	255
  2670  003C34  09                 	db	9
  2671  003C35  09                 	db	9
  2672  003C36  09                 	db	9
  2673  003C37  09                 	db	9
  2674  003C38  49                 	db	73
  2675  003C39  89                 	db	137
  2676  003C3A  7F                 	db	127
  2677  003C3B  00                 	db	0
  2678  003C3C  00                 	db	0
  2679  003C3D  00                 	db	0
  2680  003C3E  00                 	db	0
  2681  003C3F  90                 	db	144
  2682  003C40  52                 	db	82
  2683  003C41  34                 	db	52
  2684  003C42  10                 	db	16
  2685  003C43  FF                 	db	255
  2686  003C44  10                 	db	16
  2687  003C45  34                 	db	52
  2688  003C46  52                 	db	82
  2689  003C47  80                 	db	128
  2690  003C48  70                 	db	112
  2691  003C49  8F                 	db	143
  2692  003C4A  08                 	db	8
  2693  003C4B  08                 	db	8
  2694  003C4C  F8                 	db	248
  2695  003C4D  08                 	db	8
  2696  003C4E  00                 	db	0
  2697  003C4F  82                 	db	130
  2698  003C50  9A                 	db	154
  2699  003C51  56                 	db	86
  2700  003C52  63                 	db	99
  2701  003C53  22                 	db	34
  2702  003C54  52                 	db	82
  2703  003C55  8E                 	db	142
  2704  003C56  00                 	db	0
  2705  003C57  80                 	db	128
  2706  003C58  40                 	db	64
  2707  003C59  33                 	db	51
  2708  003C5A  0C                 	db	12
  2709  003C5B  33                 	db	51
  2710  003C5C  40                 	db	64
  2711  003C5D  80                 	db	128
  2712  003C5E  00                 	db	0
  2713  003C5F  10                 	db	16
  2714  003C60  10                 	db	16
  2715  003C61  FF                 	db	255
  2716  003C62  10                 	db	16
  2717  003C63  90                 	db	144
  2718  003C64  00                 	db	0
  2719  003C65  FE                 	db	254
  2720  003C66  92                 	db	146
  2721  003C67  92                 	db	146
  2722  003C68  92                 	db	146
  2723  003C69  F2                 	db	242
  2724  003C6A  92                 	db	146
  2725  003C6B  92                 	db	146
  2726  003C6C  9E                 	db	158
  2727  003C6D  80                 	db	128
  2728  003C6E  00                 	db	0
  2729  003C6F  42                 	db	66
  2730  003C70  82                 	db	130
  2731  003C71  7F                 	db	127
  2732  003C72  01                 	db	1
  2733  003C73  80                 	db	128
  2734  003C74  60                 	db	96
  2735  003C75  1F                 	db	31
  2736  003C76  00                 	db	0
  2737  003C77  FC                 	db	252
  2738  003C78  44                 	db	68
  2739  003C79  47                 	db	71
  2740  003C7A  44                 	db	68
  2741  003C7B  44                 	db	68
  2742  003C7C  FC                 	db	252
  2743  003C7D  00                 	db	0
  2744  003C7E  00                 	db	0
  2745  003C7F  00                 	db	0
  2746  003C80  02                 	db	2
  2747  003C81  02                 	db	2
  2748  003C82  C2                 	db	194
  2749  003C83  02                 	db	2
  2750  003C84  02                 	db	2
  2751  003C85  02                 	db	2
  2752  003C86  FE                 	db	254
  2753  003C87  82                 	db	130
  2754  003C88  82                 	db	130
  2755  003C89  82                 	db	130
  2756  003C8A  82                 	db	130
  2757  003C8B  82                 	db	130
  2758  003C8C  02                 	db	2
  2759  003C8D  00                 	db	0
  2760  003C8E  00                 	db	0
  2761  003C8F  40                 	db	64
  2762  003C90  40                 	db	64
  2763  003C91  40                 	db	64
  2764  003C92  7F                 	db	127
  2765  003C93  40                 	db	64
  2766  003C94  40                 	db	64
  2767  003C95  40                 	db	64
  2768  003C96  7F                 	db	127
  2769  003C97  40                 	db	64
  2770  003C98  40                 	db	64
  2771  003C99  40                 	db	64
  2772  003C9A  40                 	db	64
  2773  003C9B  40                 	db	64
  2774  003C9C  40                 	db	64
  2775  003C9D  40                 	db	64
  2776  003C9E  00                 	db	0
  2777  003C9F  00                 	db	0
  2778  003CA0  00                 	db	0
  2779  003CA1  FC                 	db	252
  2780  003CA2  24                 	db	36
  2781  003CA3  24                 	db	36
  2782  003CA4  E4                 	db	228
  2783  003CA5  24                 	db	36
  2784  003CA6  24                 	db	36
  2785  003CA7  22                 	db	34
  2786  003CA8  22                 	db	34
  2787  003CA9  22                 	db	34
  2788  003CAA  A3                 	db	163
  2789  003CAB  62                 	db	98
  2790  003CAC  00                 	db	0
  2791  003CAD  00                 	db	0
  2792  003CAE  00                 	db	0
  2793  003CAF  40                 	db	64
  2794  003CB0  30                 	db	48
  2795  003CB1  8F                 	db	143
  2796  003CB2  80                 	db	128
  2797  003CB3  40                 	db	64
  2798  003CB4  40                 	db	64
  2799  003CB5  23                 	db	35
  2800  003CB6  14                 	db	20
  2801  003CB7  08                 	db	8
  2802  003CB8  14                 	db	20
  2803  003CB9  22                 	db	34
  2804  003CBA  41                 	db	65
  2805  003CBB  40                 	db	64
  2806  003CBC  80                 	db	128
  2807  003CBD  80                 	db	128
  2808  003CBE  00                 	db	0
  2809  003CBF  40                 	db	64
  2810  003CC0  44                 	db	68
  2811  003CC1  C4                 	db	196
  2812  003CC2  44                 	db	68
  2813  003CC3  44                 	db	68
  2814  003CC4  44                 	db	68
  2815  003CC5  40                 	db	64
  2816  003CC6  10                 	db	16
  2817  003CC7  10                 	db	16
  2818  003CC8  FF                 	db	255
  2819  003CC9  10                 	db	16
  2820  003CCA  10                 	db	16
  2821  003CCB  10                 	db	16
  2822  003CCC  F0                 	db	240
  2823  003CCD  00                 	db	0
  2824  003CCE  00                 	db	0
  2825  003CCF  10                 	db	16
  2826  003CD0  3C                 	db	60
  2827  003CD1  13                 	db	19
  2828  003CD2  10                 	db	16
  2829  003CD3  14                 	db	20
  2830  003CD4  B8                 	db	184
  2831  003CD5  40                 	db	64
  2832  003CD6  30                 	db	48
  2833  003CD7  0E                 	db	14
  2834  003CD8  01                 	db	1
  2835  003CD9  40                 	db	64
  2836  003CDA  80                 	db	128
  2837  003CDB  40                 	db	64
  2838  003CDC  3F                 	db	63
  2839  003CDD  00                 	db	0
  2840  003CDE  00                 	db	0
  2841  003CDF  10                 	db	16
  2842  003CE0  10                 	db	16
  2843  003CE1  10                 	db	16
  2844  003CE2  FF                 	db	255
  2845  003CE3  10                 	db	16
  2846  003CE4  90                 	db	144
  2847  003CE5  00                 	db	0
  2848  003CE6  FC                 	db	252
  2849  003CE7  24                 	db	36
  2850  003CE8  E4                 	db	228
  2851  003CE9  24                 	db	36
  2852  003CEA  22                 	db	34
  2853  003CEB  23                 	db	35
  2854  003CEC  E2                 	db	226
  2855  003CED  00                 	db	0
  2856  003CEE  00                 	db	0
  2857  003CEF  04                 	db	4
  2858  003CF0  44                 	db	68
  2859  003CF1  82                 	db	130
  2860  003CF2  7F                 	db	127
  2861  003CF3  01                 	db	1
  2862  003CF4  80                 	db	128
  2863  003CF5  60                 	db	96
  2864  003CF6  1F                 	db	31
  2865  003CF7  80                 	db	128
  2866  003CF8  41                 	db	65
  2867  003CF9  26                 	db	38
  2868  003CFA  18                 	db	24
  2869  003CFB  26                 	db	38
  2870  003CFC  41                 	db	65
  2871  003CFD  80                 	db	128
  2872  003CFE  00                 	db	0
  2873  003CFF  00                 	db	0
  2874  003D00  00                 	db	0
  2875  003D01  24                 	db	36
  2876  003D02  24                 	db	36
  2877  003D03  24                 	db	36
  2878  003D04  24                 	db	36
  2879  003D05  24                 	db	36
  2880  003D06  FC                 	db	252
  2881  003D07  22                 	db	34
  2882  003D08  22                 	db	34
  2883  003D09  22                 	db	34
  2884  003D0A  23                 	db	35
  2885  003D0B  22                 	db	34
  2886  003D0C  00                 	db	0
  2887  003D0D  00                 	db	0
  2888  003D0E  00                 	db	0
  2889  003D0F  02                 	db	2
  2890  003D10  02                 	db	2
  2891  003D11  02                 	db	2
  2892  003D12  02                 	db	2
  2893  003D13  02                 	db	2
  2894  003D14  42                 	db	66
  2895  003D15  82                 	db	130
  2896  003D16  7F                 	db	127
  2897  003D17  02                 	db	2
  2898  003D18  02                 	db	2
  2899  003D19  02                 	db	2
  2900  003D1A  02                 	db	2
  2901  003D1B  02                 	db	2
  2902  003D1C  02                 	db	2
  2903  003D1D  02                 	db	2
  2904  003D1E  00                 	db	0
  2905  003D1F  04                 	db	4
  2906  003D20  04                 	db	4
  2907  003D21  04                 	db	4
  2908  003D22  04                 	db	4
  2909  003D23  F4                 	db	244
  2910  003D24  94                 	db	148
  2911  003D25  95                 	db	149
  2912  003D26  96                 	db	150
  2913  003D27  94                 	db	148
  2914  003D28  94                 	db	148
  2915  003D29  F4                 	db	244
  2916  003D2A  04                 	db	4
  2917  003D2B  04                 	db	4
  2918  003D2C  04                 	db	4
  2919  003D2D  04                 	db	4
  2920  003D2E  00                 	db	0
  2921  003D2F  00                 	db	0
  2922  003D30  FE                 	db	254
  2923  003D31  02                 	db	2
  2924  003D32  02                 	db	2
  2925  003D33  7A                 	db	122
  2926  003D34  4A                 	db	74
  2927  003D35  4A                 	db	74
  2928  003D36  4A                 	db	74
  2929  003D37  4A                 	db	74
  2930  003D38  4A                 	db	74
  2931  003D39  7A                 	db	122
  2932  003D3A  02                 	db	2
  2933  003D3B  82                 	db	130
  2934  003D3C  FE                 	db	254
  2935  003D3D  00                 	db	0
  2936  003D3E  00                 	db	0
  2937  003D3F                     __end_of_F16x16_HZ:
  2938                           	opt stack 0
  2939  003D3F                     _Logo:
  2940                           	opt stack 0
  2941  003D3F  00                 	db	0
  2942  003D40  00                 	db	0
  2943  003D41  00                 	db	0
  2944  003D42  00                 	db	0
  2945  003D43  00                 	db	0
  2946  003D44  00                 	db	0
  2947  003D45  00                 	db	0
  2948  003D46  00                 	db	0
  2949  003D47  00                 	db	0
  2950  003D48  00                 	db	0
  2951  003D49  00                 	db	0
  2952  003D4A  00                 	db	0
  2953  003D4B  00                 	db	0
  2954  003D4C  00                 	db	0
  2955  003D4D  00                 	db	0
  2956  003D4E  00                 	db	0
  2957  003D4F  00                 	db	0
  2958  003D50  00                 	db	0
  2959  003D51  80                 	db	128
  2960  003D52  C0                 	db	192
  2961  003D53  C0                 	db	192
  2962  003D54  E0                 	db	224
  2963  003D55  E0                 	db	224
  2964  003D56  F0                 	db	240
  2965  003D57  E0                 	db	224
  2966  003D58  E0                 	db	224
  2967  003D59  C0                 	db	192
  2968  003D5A  C0                 	db	192
  2969  003D5B  80                 	db	128
  2970  003D5C  00                 	db	0
  2971  003D5D  00                 	db	0
  2972  003D5E  00                 	db	0
  2973  003D5F  00                 	db	0
  2974  003D60  00                 	db	0
  2975  003D61  00                 	db	0
  2976  003D62  00                 	db	0
  2977  003D63  00                 	db	0
  2978  003D64  00                 	db	0
  2979  003D65  00                 	db	0
  2980  003D66  00                 	db	0
  2981  003D67  00                 	db	0
  2982  003D68  00                 	db	0
  2983  003D69  00                 	db	0
  2984  003D6A  00                 	db	0
  2985  003D6B  00                 	db	0
  2986  003D6C  E0                 	db	224
  2987  003D6D  E0                 	db	224
  2988  003D6E  00                 	db	0
  2989  003D6F  00                 	db	0
  2990  003D70  00                 	db	0
  2991  003D71  00                 	db	0
  2992  003D72  00                 	db	0
  2993  003D73  E0                 	db	224
  2994  003D74  E0                 	db	224
  2995  003D75  00                 	db	0
  2996  003D76  00                 	db	0
  2997  003D77  00                 	db	0
  2998  003D78  00                 	db	0
  2999  003D79  00                 	db	0
  3000  003D7A  00                 	db	0
  3001  003D7B  00                 	db	0
  3002  003D7C  80                 	db	128
  3003  003D7D  80                 	db	128
  3004  003D7E  80                 	db	128
  3005  003D7F  C0                 	db	192
  3006  003D80  80                 	db	128
  3007  003D81  00                 	db	0
  3008  003D82  00                 	db	0
  3009  003D83  00                 	db	0
  3010  003D84  80                 	db	128
  3011  003D85  00                 	db	0
  3012  003D86  00                 	db	0
  3013  003D87  E0                 	db	224
  3014  003D88  00                 	db	0
  3015  003D89  00                 	db	0
  3016  003D8A  00                 	db	0
  3017  003D8B  00                 	db	0
  3018  003D8C  00                 	db	0
  3019  003D8D  00                 	db	0
  3020  003D8E  00                 	db	0
  3021  003D8F  00                 	db	0
  3022  003D90  00                 	db	0
  3023  003D91  E0                 	db	224
  3024  003D92  E0                 	db	224
  3025  003D93  00                 	db	0
  3026  003D94  00                 	db	0
  3027  003D95  00                 	db	0
  3028  003D96  00                 	db	0
  3029  003D97  00                 	db	0
  3030  003D98  00                 	db	0
  3031  003D99  00                 	db	0
  3032  003D9A  00                 	db	0
  3033  003D9B  00                 	db	0
  3034  003D9C  00                 	db	0
  3035  003D9D  00                 	db	0
  3036  003D9E  00                 	db	0
  3037  003D9F  00                 	db	0
  3038  003DA0  00                 	db	0
  3039  003DA1  C0                 	db	192
  3040  003DA2  00                 	db	0
  3041  003DA3  00                 	db	0
  3042  003DA4  00                 	db	0
  3043  003DA5  00                 	db	0
  3044  003DA6  00                 	db	0
  3045  003DA7  00                 	db	0
  3046  003DA8  00                 	db	0
  3047  003DA9  00                 	db	0
  3048  003DAA  00                 	db	0
  3049  003DAB  00                 	db	0
  3050  003DAC  00                 	db	0
  3051  003DAD  00                 	db	0
  3052  003DAE  00                 	db	0
  3053  003DAF  00                 	db	0
  3054  003DB0  00                 	db	0
  3055  003DB1  00                 	db	0
  3056  003DB2  00                 	db	0
  3057  003DB3  00                 	db	0
  3058  003DB4  00                 	db	0
  3059  003DB5  00                 	db	0
  3060  003DB6  00                 	db	0
  3061  003DB7  00                 	db	0
  3062  003DB8  00                 	db	0
  3063  003DB9  00                 	db	0
  3064  003DBA  00                 	db	0
  3065  003DBB  00                 	db	0
  3066  003DBC  00                 	db	0
  3067  003DBD  00                 	db	0
  3068  003DBE  00                 	db	0
  3069  003DBF  00                 	db	0
  3070  003DC0  00                 	db	0
  3071  003DC1  00                 	db	0
  3072  003DC2  00                 	db	0
  3073  003DC3  00                 	db	0
  3074  003DC4  00                 	db	0
  3075  003DC5  00                 	db	0
  3076  003DC6  00                 	db	0
  3077  003DC7  00                 	db	0
  3078  003DC8  00                 	db	0
  3079  003DC9  00                 	db	0
  3080  003DCA  00                 	db	0
  3081  003DCB  00                 	db	0
  3082  003DCC  00                 	db	0
  3083  003DCD  FE                 	db	254
  3084  003DCE  FE                 	db	254
  3085  003DCF  FF                 	db	255
  3086  003DD0  FF                 	db	255
  3087  003DD1  11                 	db	17
  3088  003DD2  11                 	db	17
  3089  003DD3  31                 	db	49
  3090  003DD4  31                 	db	49
  3091  003DD5  31                 	db	49
  3092  003DD6  31                 	db	49
  3093  003DD7  31                 	db	49
  3094  003DD8  31                 	db	49
  3095  003DD9  31                 	db	49
  3096  003DDA  31                 	db	49
  3097  003DDB  31                 	db	49
  3098  003DDC  F3                 	db	243
  3099  003DDD  FF                 	db	255
  3100  003DDE  FE                 	db	254
  3101  003DDF  FC                 	db	252
  3102  003DE0  00                 	db	0
  3103  003DE1  00                 	db	0
  3104  003DE2  00                 	db	0
  3105  003DE3  00                 	db	0
  3106  003DE4  00                 	db	0
  3107  003DE5  00                 	db	0
  3108  003DE6  00                 	db	0
  3109  003DE7  00                 	db	0
  3110  003DE8  00                 	db	0
  3111  003DE9  00                 	db	0
  3112  003DEA  00                 	db	0
  3113  003DEB  03                 	db	3
  3114  003DEC  FF                 	db	255
  3115  003DED  FF                 	db	255
  3116  003DEE  33                 	db	51
  3117  003DEF  33                 	db	51
  3118  003DF0  33                 	db	51
  3119  003DF1  33                 	db	51
  3120  003DF2  33                 	db	51
  3121  003DF3  FF                 	db	255
  3122  003DF4  FF                 	db	255
  3123  003DF5  03                 	db	3
  3124  003DF6  00                 	db	0
  3125  003DF7  00                 	db	0
  3126  003DF8  FF                 	db	255
  3127  003DF9  C3                 	db	195
  3128  003DFA  C3                 	db	195
  3129  003DFB  C1                 	db	193
  3130  003DFC  C1                 	db	193
  3131  003DFD  C1                 	db	193
  3132  003DFE  C1                 	db	193
  3133  003DFF  C0                 	db	192
  3134  003E00  C0                 	db	192
  3135  003E01  00                 	db	0
  3136  003E02  40                 	db	64
  3137  003E03  7C                 	db	124
  3138  003E04  0F                 	db	15
  3139  003E05  0C                 	db	12
  3140  003E06  0C                 	db	12
  3141  003E07  FF                 	db	255
  3142  003E08  0C                 	db	12
  3143  003E09  0C                 	db	12
  3144  003E0A  0C                 	db	12
  3145  003E0B  60                 	db	96
  3146  003E0C  63                 	db	99
  3147  003E0D  63                 	db	99
  3148  003E0E  63                 	db	99
  3149  003E0F  63                 	db	99
  3150  003E10  63                 	db	99
  3151  003E11  7F                 	db	127
  3152  003E12  7F                 	db	127
  3153  003E13  63                 	db	99
  3154  003E14  63                 	db	99
  3155  003E15  63                 	db	99
  3156  003E16  63                 	db	99
  3157  003E17  63                 	db	99
  3158  003E18  60                 	db	96
  3159  003E19  00                 	db	0
  3160  003E1A  00                 	db	0
  3161  003E1B  C0                 	db	192
  3162  003E1C  60                 	db	96
  3163  003E1D  30                 	db	48
  3164  003E1E  18                 	db	24
  3165  003E1F  06                 	db	6
  3166  003E20  03                 	db	3
  3167  003E21  03                 	db	3
  3168  003E22  03                 	db	3
  3169  003E23  03                 	db	3
  3170  003E24  03                 	db	3
  3171  003E25  03                 	db	3
  3172  003E26  FB                 	db	251
  3173  003E27  03                 	db	3
  3174  003E28  03                 	db	3
  3175  003E29  03                 	db	3
  3176  003E2A  03                 	db	3
  3177  003E2B  03                 	db	3
  3178  003E2C  03                 	db	3
  3179  003E2D  23                 	db	35
  3180  003E2E  7B                 	db	123
  3181  003E2F  1F                 	db	31
  3182  003E30  07                 	db	7
  3183  003E31  00                 	db	0
  3184  003E32  00                 	db	0
  3185  003E33  00                 	db	0
  3186  003E34  00                 	db	0
  3187  003E35  00                 	db	0
  3188  003E36  00                 	db	0
  3189  003E37  00                 	db	0
  3190  003E38  00                 	db	0
  3191  003E39  00                 	db	0
  3192  003E3A  00                 	db	0
  3193  003E3B  00                 	db	0
  3194  003E3C  00                 	db	0
  3195  003E3D  00                 	db	0
  3196  003E3E  00                 	db	0
  3197  003E3F  00                 	db	0
  3198  003E40  00                 	db	0
  3199  003E41  00                 	db	0
  3200  003E42  00                 	db	0
  3201  003E43  00                 	db	0
  3202  003E44  00                 	db	0
  3203  003E45  00                 	db	0
  3204  003E46  00                 	db	0
  3205  003E47  00                 	db	0
  3206  003E48  00                 	db	0
  3207  003E49  00                 	db	0
  3208  003E4A  00                 	db	0
  3209  003E4B  00                 	db	0
  3210  003E4C  00                 	db	0
  3211  003E4D  3F                 	db	63
  3212  003E4E  3F                 	db	63
  3213  003E4F  7F                 	db	127
  3214  003E50  7F                 	db	127
  3215  003E51  E3                 	db	227
  3216  003E52  E2                 	db	226
  3217  003E53  E2                 	db	226
  3218  003E54  E2                 	db	226
  3219  003E55  E2                 	db	226
  3220  003E56  E2                 	db	226
  3221  003E57  E2                 	db	226
  3222  003E58  E2                 	db	226
  3223  003E59  E2                 	db	226
  3224  003E5A  E2                 	db	226
  3225  003E5B  E2                 	db	226
  3226  003E5C  66                 	db	102
  3227  003E5D  7F                 	db	127
  3228  003E5E  3F                 	db	63
  3229  003E5F  1F                 	db	31
  3230  003E60  00                 	db	0
  3231  003E61  00                 	db	0
  3232  003E62  00                 	db	0
  3233  003E63  00                 	db	0
  3234  003E64  00                 	db	0
  3235  003E65  00                 	db	0
  3236  003E66  00                 	db	0
  3237  003E67  00                 	db	0
  3238  003E68  00                 	db	0
  3239  003E69  00                 	db	0
  3240  003E6A  00                 	db	0
  3241  003E6B  30                 	db	48
  3242  003E6C  3F                 	db	63
  3243  003E6D  BF                 	db	191
  3244  003E6E  F3                 	db	243
  3245  003E6F  33                 	db	51
  3246  003E70  33                 	db	51
  3247  003E71  33                 	db	51
  3248  003E72  F3                 	db	243
  3249  003E73  BF                 	db	191
  3250  003E74  3F                 	db	63
  3251  003E75  30                 	db	48
  3252  003E76  00                 	db	0
  3253  003E77  F0                 	db	240
  3254  003E78  3F                 	db	63
  3255  003E79  00                 	db	0
  3256  003E7A  00                 	db	0
  3257  003E7B  00                 	db	0
  3258  003E7C  00                 	db	0
  3259  003E7D  FF                 	db	255
  3260  003E7E  FF                 	db	255
  3261  003E7F  00                 	db	0
  3262  003E80  00                 	db	0
  3263  003E81  00                 	db	0
  3264  003E82  08                 	db	8
  3265  003E83  18                 	db	24
  3266  003E84  0C                 	db	12
  3267  003E85  0C                 	db	12
  3268  003E86  0E                 	db	14
  3269  003E87  FF                 	db	255
  3270  003E88  06                 	db	6
  3271  003E89  02                 	db	2
  3272  003E8A  03                 	db	3
  3273  003E8B  0C                 	db	12
  3274  003E8C  0C                 	db	12
  3275  003E8D  6C                 	db	108
  3276  003E8E  CC                 	db	204
  3277  003E8F  8C                 	db	140
  3278  003E90  0C                 	db	12
  3279  003E91  0C                 	db	12
  3280  003E92  0C                 	db	12
  3281  003E93  0C                 	db	12
  3282  003E94  0C                 	db	12
  3283  003E95  FF                 	db	255
  3284  003E96  0C                 	db	12
  3285  003E97  0C                 	db	12
  3286  003E98  0C                 	db	12
  3287  003E99  00                 	db	0
  3288  003E9A  00                 	db	0
  3289  003E9B  80                 	db	128
  3290  003E9C  C0                 	db	192
  3291  003E9D  60                 	db	96
  3292  003E9E  38                 	db	56
  3293  003E9F  1C                 	db	28
  3294  003EA0  07                 	db	7
  3295  003EA1  01                 	db	1
  3296  003EA2  00                 	db	0
  3297  003EA3  00                 	db	0
  3298  003EA4  00                 	db	0
  3299  003EA5  00                 	db	0
  3300  003EA6  FF                 	db	255
  3301  003EA7  00                 	db	0
  3302  003EA8  00                 	db	0
  3303  003EA9  00                 	db	0
  3304  003EAA  01                 	db	1
  3305  003EAB  03                 	db	3
  3306  003EAC  0E                 	db	14
  3307  003EAD  1C                 	db	28
  3308  003EAE  70                 	db	112
  3309  003EAF  E0                 	db	224
  3310  003EB0  80                 	db	128
  3311  003EB1  00                 	db	0
  3312  003EB2  00                 	db	0
  3313  003EB3  00                 	db	0
  3314  003EB4  00                 	db	0
  3315  003EB5  00                 	db	0
  3316  003EB6  00                 	db	0
  3317  003EB7  00                 	db	0
  3318  003EB8  00                 	db	0
  3319  003EB9  00                 	db	0
  3320  003EBA  00                 	db	0
  3321  003EBB  00                 	db	0
  3322  003EBC  00                 	db	0
  3323  003EBD  00                 	db	0
  3324  003EBE  00                 	db	0
  3325  003EBF  00                 	db	0
  3326  003EC0  00                 	db	0
  3327  003EC1  00                 	db	0
  3328  003EC2  00                 	db	0
  3329  003EC3  00                 	db	0
  3330  003EC4  00                 	db	0
  3331  003EC5  00                 	db	0
  3332  003EC6  00                 	db	0
  3333  003EC7  00                 	db	0
  3334  003EC8  00                 	db	0
  3335  003EC9  00                 	db	0
  3336  003ECA  00                 	db	0
  3337  003ECB  00                 	db	0
  3338  003ECC  00                 	db	0
  3339  003ECD  00                 	db	0
  3340  003ECE  00                 	db	0
  3341  003ECF  00                 	db	0
  3342  003ED0  00                 	db	0
  3343  003ED1  00                 	db	0
  3344  003ED2  01                 	db	1
  3345  003ED3  01                 	db	1
  3346  003ED4  03                 	db	3
  3347  003ED5  03                 	db	3
  3348  003ED6  03                 	db	3
  3349  003ED7  03                 	db	3
  3350  003ED8  01                 	db	1
  3351  003ED9  01                 	db	1
  3352  003EDA  01                 	db	1
  3353  003EDB  00                 	db	0
  3354  003EDC  00                 	db	0
  3355  003EDD  00                 	db	0
  3356  003EDE  00                 	db	0
  3357  003EDF  00                 	db	0
  3358  003EE0  00                 	db	0
  3359  003EE1  00                 	db	0
  3360  003EE2  00                 	db	0
  3361  003EE3  00                 	db	0
  3362  003EE4  00                 	db	0
  3363  003EE5  00                 	db	0
  3364  003EE6  00                 	db	0
  3365  003EE7  00                 	db	0
  3366  003EE8  00                 	db	0
  3367  003EE9  00                 	db	0
  3368  003EEA  00                 	db	0
  3369  003EEB  06                 	db	6
  3370  003EEC  03                 	db	3
  3371  003EED  01                 	db	1
  3372  003EEE  00                 	db	0
  3373  003EEF  00                 	db	0
  3374  003EF0  00                 	db	0
  3375  003EF1  00                 	db	0
  3376  003EF2  00                 	db	0
  3377  003EF3  01                 	db	1
  3378  003EF4  01                 	db	1
  3379  003EF5  02                 	db	2
  3380  003EF6  03                 	db	3
  3381  003EF7  01                 	db	1
  3382  003EF8  00                 	db	0
  3383  003EF9  00                 	db	0
  3384  003EFA  00                 	db	0
  3385  003EFB  00                 	db	0
  3386  003EFC  00                 	db	0
  3387  003EFD  07                 	db	7
  3388  003EFE  07                 	db	7
  3389  003EFF  00                 	db	0
  3390  003F00  00                 	db	0
  3391  003F01  00                 	db	0
  3392  003F02  00                 	db	0
  3393  003F03  00                 	db	0
  3394  003F04  00                 	db	0
  3395  003F05  00                 	db	0
  3396  003F06  00                 	db	0
  3397  003F07  0F                 	db	15
  3398  003F08  00                 	db	0
  3399  003F09  00                 	db	0
  3400  003F0A  00                 	db	0
  3401  003F0B  00                 	db	0
  3402  003F0C  00                 	db	0
  3403  003F0D  00                 	db	0
  3404  003F0E  00                 	db	0
  3405  003F0F  01                 	db	1
  3406  003F10  0C                 	db	12
  3407  003F11  0C                 	db	12
  3408  003F12  0C                 	db	12
  3409  003F13  0C                 	db	12
  3410  003F14  0E                 	db	14
  3411  003F15  07                 	db	7
  3412  003F16  00                 	db	0
  3413  003F17  00                 	db	0
  3414  003F18  00                 	db	0
  3415  003F19  00                 	db	0
  3416  003F1A  00                 	db	0
  3417  003F1B  00                 	db	0
  3418  003F1C  01                 	db	1
  3419  003F1D  00                 	db	0
  3420  003F1E  00                 	db	0
  3421  003F1F  00                 	db	0
  3422  003F20  00                 	db	0
  3423  003F21  0C                 	db	12
  3424  003F22  0C                 	db	12
  3425  003F23  0C                 	db	12
  3426  003F24  0C                 	db	12
  3427  003F25  0E                 	db	14
  3428  003F26  07                 	db	7
  3429  003F27  00                 	db	0
  3430  003F28  00                 	db	0
  3431  003F29  00                 	db	0
  3432  003F2A  00                 	db	0
  3433  003F2B  00                 	db	0
  3434  003F2C  00                 	db	0
  3435  003F2D  00                 	db	0
  3436  003F2E  00                 	db	0
  3437  003F2F  00                 	db	0
  3438  003F30  00                 	db	0
  3439  003F31  00                 	db	0
  3440  003F32  00                 	db	0
  3441  003F33  00                 	db	0
  3442  003F34  00                 	db	0
  3443  003F35  00                 	db	0
  3444  003F36  00                 	db	0
  3445  003F37  00                 	db	0
  3446  003F38  00                 	db	0
  3447  003F39  00                 	db	0
  3448  003F3A  00                 	db	0
  3449  003F3B  00                 	db	0
  3450  003F3C  00                 	db	0
  3451  003F3D  00                 	db	0
  3452  003F3E  00                 	db	0
  3453  003F3F                     __end_of_Logo:
  3454                           	opt stack 0
  3455  0000                     _ADCON0	set	4034
  3456  0000                     _ADCON1	set	4033
  3457  0000                     _ADCON2	set	4032
  3458  0000                     _ADRESL	set	4035
  3459  0000                     _ANSEL0	set	4024
  3460  0000                     _ANSEL1	set	4025
  3461  0000                     _CAP1BUFH	set	3945
  3462  0000                     _CAP1BUFL	set	3944
  3463  0000                     _CAP1CON	set	3939
  3464  0000                     _CAP2CON	set	3938
  3465  0000                     _CAP3CON	set	3937
  3466  0000                     _OVDCOND	set	3947
  3467  0000                     _PDC0H	set	3960
  3468  0000                     _PDC0L	set	3961
  3469  0000                     _PDC1H	set	3958
  3470  0000                     _PDC1L	set	3959
  3471  0000                     _PDC2H	set	3956
  3472  0000                     _PDC2L	set	3957
  3473  0000                     _PORTA	set	3968
  3474  0000                     _PTCON0	set	3967
  3475  0000                     _PTMRH	set	3964
  3476  0000                     _PTMRL	set	3965
  3477  0000                     _PTPERH	set	3962
  3478  0000                     _PTPERL	set	3963
  3479  0000                     _PWMCON0	set	3951
  3480  0000                     _PWMCON1	set	3950
  3481  0000                     _RCREG	set	4014
  3482  0000                     _RCSTA	set	4011
  3483  0000                     _SPBRG	set	4015
  3484  0000                     _SSPBUF	set	4041
  3485  0000                     _SSPCON	set	4038
  3486  0000                     _SSPSTAT	set	4039
  3487  0000                     _T5CON	set	4023
  3488  0000                     _TXREG	set	4013
  3489  0000                     _TXSTA	set	4012
  3490  0000                     _ADRESH	set	4036
  3491  0000                     _ADIF	set	31990
  3492  0000                     _ADON	set	32272
  3493  0000                     _BRG16	set	32083
  3494  0000                     _BRGH	set	32098
  3495  0000                     _CKE	set	32318
  3496  0000                     _CKP	set	32308
  3497  0000                     _CREN	set	32092
  3498  0000                     _GIE	set	32663
  3499  0000                     _GODONE	set	32273
  3500  0000                     _IC1IE	set	32025
  3501  0000                     _IC1IF	set	32033
  3502  0000                     _IC2QEIE	set	32026
  3503  0000                     _IC2QEIF	set	32034
  3504  0000                     _IC3DRIE	set	32027
  3505  0000                     _IC3DRIF	set	32035
  3506  0000                     _PEIE	set	32662
  3507  0000                     _PTEN	set	31735
  3508  0000                     _RB6	set	31758
  3509  0000                     _RB7	set	31759
  3510  0000                     _RC1	set	31761
  3511  0000                     _RC2	set	31762
  3512  0000                     _RC3	set	31763
  3513  0000                     _RC5	set	31765
  3514  0000                     _RCIE	set	31981
  3515  0000                     _RCIF	set	31989
  3516  0000                     _RD0	set	31768
  3517  0000                     _RD1	set	31769
  3518  0000                     _RD2	set	31770
  3519  0000                     _RD3	set	31771
  3520  0000                     _RD4	set	31772
  3521  0000                     _RD6	set	31774
  3522  0000                     _RD7	set	31775
  3523  0000                     _RE0	set	31776
  3524  0000                     _RE1	set	31777
  3525  0000                     _RE2	set	31778
  3526  0000                     _RESEN	set	32190
  3527  0000                     _SMP	set	32319
  3528  0000                     _SPEN	set	32095
  3529  0000                     _SSPEN	set	32309
  3530  0000                     _SSPIF	set	31987
  3531  0000                     _SYNC	set	32100
  3532  0000                     _TMR5IE	set	32024
  3533  0000                     _TMR5IF	set	32032
  3534  0000                     _TRISA0	set	31888
  3535  0000                     _TRISA1	set	31889
  3536  0000                     _TRISA2	set	31890
  3537  0000                     _TRISA3	set	31891
  3538  0000                     _TRISA4	set	31892
  3539  0000                     _TRISB0	set	31896
  3540  0000                     _TRISB1	set	31897
  3541  0000                     _TRISB2	set	31898
  3542  0000                     _TRISB3	set	31899
  3543  0000                     _TRISB4	set	31900
  3544  0000                     _TRISB6	set	31902
  3545  0000                     _TRISB7	set	31903
  3546  0000                     _TRISC1	set	31905
  3547  0000                     _TRISC2	set	31906
  3548  0000                     _TRISC3	set	31907
  3549  0000                     _TRISC4	set	31908
  3550  0000                     _TRISC5	set	31909
  3551  0000                     _TRISC6	set	31910
  3552  0000                     _TRISC7	set	31911
  3553  0000                     _TRISD0	set	31912
  3554  0000                     _TRISD1	set	31913
  3555  0000                     _TRISD2	set	31914
  3556  0000                     _TRISD3	set	31915
  3557  0000                     _TRISD4	set	31916
  3558  0000                     _TRISD5	set	31917
  3559  0000                     _TRISD6	set	31918
  3560  0000                     _TRISD7	set	31919
  3561  0000                     _TRISE0	set	31920
  3562  0000                     _TRISE1	set	31921
  3563  0000                     _TRISE2	set	31922
  3564  0000                     _TRMT	set	32097
  3565  003F3F                     STR_37:
  3566  003F3F  2A                 	db	42
  3567  003F40  2D                 	db	45
  3568  003F41  2D                 	db	45
  3569  003F42  20                 	db	32
  3570  003F43  61                 	db	97	;'a'
  3571  003F44  6E                 	db	110	;'n'
  3572  003F45  79                 	db	121	;'y'
  3573  003F46  20                 	db	32
  3574  003F47  6F                 	db	111	;'o'
  3575  003F48  74                 	db	116	;'t'
  3576  003F49  68                 	db	104	;'h'
  3577  003F4A  65                 	db	101	;'e'
  3578  003F4B  72                 	db	114	;'r'
  3579  003F4C  20                 	db	32
  3580  003F4D  6B                 	db	107	;'k'
  3581  003F4E  65                 	db	101	;'e'
  3582  003F4F  79                 	db	121	;'y'
  3583  003F50  20                 	db	32
  3584  003F51  74                 	db	116	;'t'
  3585  003F52  6F                 	db	111	;'o'
  3586  003F53  20                 	db	32
  3587  003F54  72                 	db	114	;'r'
  3588  003F55  65                 	db	101	;'e'
  3589  003F56  64                 	db	100	;'d'
  3590  003F57  69                 	db	105	;'i'
  3591  003F58  73                 	db	115	;'s'
  3592  003F59  70                 	db	112	;'p'
  3593  003F5A  61                 	db	97	;'a'
  3594  003F5B  6C                 	db	108	;'l'
  3595  003F5C  79                 	db	121	;'y'
  3596  003F5D  20                 	db	32
  3597  003F5E  74                 	db	116	;'t'
  3598  003F5F  68                 	db	104	;'h'
  3599  003F60  65                 	db	101	;'e'
  3600  003F61  20                 	db	32
  3601  003F62  6D                 	db	109	;'m'
  3602  003F63  65                 	db	101	;'e'
  3603  003F64  6E                 	db	110	;'n'
  3604  003F65  75                 	db	117	;'u'
  3605  003F66  2E                 	db	46
  3606  003F67  0D                 	db	13
  3607  003F68  0A                 	db	10
  3608  003F69  00                 	db	0
  3609  003F6A                     STR_35:
  3610  003F6A  53                 	db	83	;'S'
  3611  003F6B  2D                 	db	45
  3612  003F6C  2D                 	db	45
  3613  003F6D  20                 	db	32
  3614  003F6E  53                 	db	83	;'S'
  3615  003F6F  65                 	db	101	;'e'
  3616  003F70  74                 	db	116	;'t'
  3617  003F71  20                 	db	32
  3618  003F72  44                 	db	68	;'D'
  3619  003F73  65                 	db	101	;'e'
  3620  003F74  66                 	db	102	;'f'
  3621  003F75  61                 	db	97	;'a'
  3622  003F76  75                 	db	117	;'u'
  3623  003F77  6C                 	db	108	;'l'
  3624  003F78  74                 	db	116	;'t'
  3625  003F79  20                 	db	32
  3626  003F7A  50                 	db	80	;'P'
  3627  003F7B  61                 	db	97	;'a'
  3628  003F7C  72                 	db	114	;'r'
  3629  003F7D  61                 	db	97	;'a'
  3630  003F7E  6D                 	db	109	;'m'
  3631  003F7F  65                 	db	101	;'e'
  3632  003F80  74                 	db	116	;'t'
  3633  003F81  65                 	db	101	;'e'
  3634  003F82  72                 	db	114	;'r'
  3635  003F83  73                 	db	115	;'s'
  3636  003F84  2E                 	db	46
  3637  003F85  0D                 	db	13
  3638  003F86  0A                 	db	10
  3639  003F87  00                 	db	0
  3640  003F88                     STR_33:
  3641  003F88  52                 	db	82	;'R'
  3642  003F89  2D                 	db	45
  3643  003F8A  2D                 	db	45
  3644  003F8B  20                 	db	32
  3645  003F8C  52                 	db	82	;'R'
  3646  003F8D  65                 	db	101	;'e'
  3647  003F8E  61                 	db	97	;'a'
  3648  003F8F  64                 	db	100	;'d'
  3649  003F90  20                 	db	32
  3650  003F91  74                 	db	116	;'t'
  3651  003F92  68                 	db	104	;'h'
  3652  003F93  65                 	db	101	;'e'
  3653  003F94  20                 	db	32
  3654  003F95  50                 	db	80	;'P'
  3655  003F96  61                 	db	97	;'a'
  3656  003F97  72                 	db	114	;'r'
  3657  003F98  61                 	db	97	;'a'
  3658  003F99  6D                 	db	109	;'m'
  3659  003F9A  65                 	db	101	;'e'
  3660  003F9B  74                 	db	116	;'t'
  3661  003F9C  65                 	db	101	;'e'
  3662  003F9D  72                 	db	114	;'r'
  3663  003F9E  73                 	db	115	;'s'
  3664  003F9F  2E                 	db	46
  3665  003FA0  0D                 	db	13
  3666  003FA1  0A                 	db	10
  3667  003FA2  00                 	db	0
  3668  003FA3                     STR_36:
  3669  003FA3  46                 	db	70	;'F'
  3670  003FA4  2D                 	db	45
  3671  003FA5  2D                 	db	45
  3672  003FA6  20                 	db	32
  3673  003FA7  53                 	db	83	;'S'
  3674  003FA8  65                 	db	101	;'e'
  3675  003FA9  74                 	db	116	;'t'
  3676  003FAA  20                 	db	32
  3677  003FAB  41                 	db	65	;'A'
  3678  003FAC  4C                 	db	76	;'L'
  3679  003FAD  4C                 	db	76	;'L'
  3680  003FAE  20                 	db	32
  3681  003FAF  44                 	db	68	;'D'
  3682  003FB0  61                 	db	97	;'a'
  3683  003FB1  74                 	db	116	;'t'
  3684  003FB2  61                 	db	97	;'a'
  3685  003FB3  3D                 	db	61	;'='
  3686  003FB4  30                 	db	48	;'0'
  3687  003FB5  78                 	db	120	;'x'
  3688  003FB6  30                 	db	48	;'0'
  3689  003FB7  30                 	db	48	;'0'
  3690  003FB8  0D                 	db	13
  3691  003FB9  0A                 	db	10
  3692  003FBA  00                 	db	0
  3693  003FBB                     STR_34:
  3694  003FBB  4F                 	db	79	;'O'
  3695  003FBC  2D                 	db	45
  3696  003FBD  2D                 	db	45
  3697  003FBE  20                 	db	32
  3698  003FBF  52                 	db	82	;'R'
  3699  003FC0  65                 	db	101	;'e'
  3700  003FC1  61                 	db	97	;'a'
  3701  003FC2  64                 	db	100	;'d'
  3702  003FC3  20                 	db	32
  3703  003FC4  41                 	db	65	;'A'
  3704  003FC5  6C                 	db	108	;'l'
  3705  003FC6  6C                 	db	108	;'l'
  3706  003FC7  20                 	db	32
  3707  003FC8  44                 	db	68	;'D'
  3708  003FC9  61                 	db	97	;'a'
  3709  003FCA  74                 	db	116	;'t'
  3710  003FCB  61                 	db	97	;'a'
  3711  003FCC  2E                 	db	46
  3712  003FCD  0D                 	db	13
  3713  003FCE  0A                 	db	10
  3714  003FCF  00                 	db	0
  3715  003FD0                     STR_32:
  3716  003FD0  50                 	db	80	;'P'
  3717  003FD1  6C                 	db	108	;'l'
  3718  003FD2  65                 	db	101	;'e'
  3719  003FD3  61                 	db	97	;'a'
  3720  003FD4  73                 	db	115	;'s'
  3721  003FD5  65                 	db	101	;'e'
  3722  003FD6  20                 	db	32
  3723  003FD7  73                 	db	115	;'s'
  3724  003FD8  65                 	db	101	;'e'
  3725  003FD9  6C                 	db	108	;'l'
  3726  003FDA  65                 	db	101	;'e'
  3727  003FDB  63                 	db	99	;'c'
  3728  003FDC  74                 	db	116	;'t'
  3729  003FDD  3A                 	db	58	;':'
  3730  003FDE  0D                 	db	13
  3731  003FDF  0A                 	db	10
  3732  003FE0  00                 	db	0
  3733  003FE1                     STR_31:
  3734  003FE1  57                 	db	87	;'W'
  3735  003FE2  65                 	db	101	;'e'
  3736  003FE3  6C                 	db	108	;'l'
  3737  003FE4  63                 	db	99	;'c'
  3738  003FE5  6F                 	db	111	;'o'
  3739  003FE6  6D                 	db	109	;'m'
  3740  003FE7  65                 	db	101	;'e'
  3741  003FE8  21                 	db	33
  3742  003FE9  0D                 	db	13
  3743  003FEA  0A                 	db	10
  3744  003FEB  00                 	db	0
  3745  003FEC                     STR_24:
  3746  003FEC  20                 	db	32
  3747  003FED  20                 	db	32
  3748  003FEE  20                 	db	32
  3749  003FEF  20                 	db	32
  3750  003FF0  00                 	db	0
  3751  003FF1                     STR_12:
  3752  003FF1  32                 	db	50	;'2'
  3753  003FF2  30                 	db	48	;'0'
  3754  003FF3  00                 	db	0
  3755  003FF4                     STR_4:
  3756  003FF4  2D                 	db	45
  3757  003FF5  3E                 	db	62	;'>'
  3758  003FF6  00                 	db	0
  3759  003FF7                     STR_22:
  3760  003FF7  25                 	db	37
  3761  003FF8  00                 	db	0
  3762  003FF9                     STR_26:
  3763  003FF9  2E                 	db	46
  3764  003FFA  00                 	db	0
  3765  003FFB                     STR_25:
  3766  003FFB  2F                 	db	47
  3767  003FFC  00                 	db	0
  3768  003FFD                     STR_5:
  3769  003FFD  3A                 	db	58	;':'
  3770  003FFE  00                 	db	0
  3771  0000                     
  3772                           ; #config settings
  3773  003FFF  00                 	db	0	; dummy byte at the end
  3774  0000                     
  3775                           	psect	cinit
  3776  0027AE                     __pcinit:
  3777                           	opt stack 0
  3778  0027AE                     start_initialization:
  3779                           	opt stack 0
  3780  0027AE                     __initialization:
  3781                           	opt stack 0
  3782                           
  3783                           ; Clear objects allocated to BANK0 (41 bytes)
  3784  0027AE  EE00  F0A9         	lfsr	0,__pbssBANK0
  3785  0027B2  0E29               	movlw	41
  3786  0027B4                     clear_0:
  3787  0027B4  6AEE               	clrf	postinc0,c
  3788  0027B6  06E8               	decf	wreg,f,c
  3789  0027B8  E1FD               	bnz	clear_0
  3790                           
  3791                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3792  0027BA  6A52               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3793                           
  3794                           ; Clear objects allocated to COMRAM (9 bytes)
  3795  0027BC  EE00  F041         	lfsr	0,__pbssCOMRAM
  3796  0027C0  0E09               	movlw	9
  3797  0027C2                     clear_1:
  3798  0027C2  6AEE               	clrf	postinc0,c
  3799  0027C4  06E8               	decf	wreg,f,c
  3800  0027C6  E1FD               	bnz	clear_1
  3801                           
  3802                           ; Initialize objects allocated to BANK0 (20 bytes)
  3803                           ; load TBLPTR registers with __pidataBANK0
  3804  0027C8  0E32               	movlw	low __pidataBANK0
  3805  0027CA  6EF6               	movwf	tblptrl,c
  3806  0027CC  0E30               	movlw	high __pidataBANK0
  3807  0027CE  6EF7               	movwf	tblptrh,c
  3808  0027D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3809  0027D2  6EF8               	movwf	tblptru,c
  3810  0027D4  EE00  F0D2         	lfsr	0,__pdataBANK0
  3811  0027D8  EE10 F014          	lfsr	1,20
  3812  0027DC                     copy_data0:
  3813  0027DC  0009               	tblrd		*+
  3814  0027DE  CFF5 FFEE          	movff	tablat,postinc0
  3815  0027E2  50E5               	movf	postdec1,w,c
  3816  0027E4  50E1               	movf	fsr1l,w,c
  3817  0027E6  E1FA               	bnz	copy_data0
  3818                           
  3819                           ; Initialize objects allocated to COMRAM (8 bytes)
  3820                           ; load TBLPTR registers with __pidataCOMRAM
  3821  0027E8  0E04               	movlw	low __pidataCOMRAM
  3822  0027EA  6EF6               	movwf	tblptrl,c
  3823  0027EC  0E31               	movlw	high __pidataCOMRAM
  3824  0027EE  6EF7               	movwf	tblptrh,c
  3825  0027F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3826  0027F2  6EF8               	movwf	tblptru,c
  3827  0027F4  EE00  F04A         	lfsr	0,__pdataCOMRAM
  3828  0027F8  EE10 F008          	lfsr	1,8
  3829  0027FC                     copy_data1:
  3830  0027FC  0009               	tblrd		*+
  3831  0027FE  CFF5 FFEE          	movff	tablat,postinc0
  3832  002802  50E5               	movf	postdec1,w,c
  3833  002804  50E1               	movf	fsr1l,w,c
  3834  002806  E1FA               	bnz	copy_data1
  3835  002808                     end_of_initialization:
  3836                           	opt stack 0
  3837  002808                     __end_of__initialization:
  3838                           	opt stack 0
  3839  002808  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3840  00280A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3841  00280C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3842  00280E  6EF8               	movwf	tblptru,c
  3843  002810  0100               	movlb	0
  3844  002812  EFA3  F001         	goto	_main	;jump to C main() function
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           postinc0	equ	0xFEE
  3850                           wreg	equ	0xFE8
  3851                           postdec1	equ	0xFE5
  3852                           fsr1l	equ	0xFE1
  3853                           
  3854                           	psect	bitbssCOMRAM
  3855  000290                     __pbitbssCOMRAM:
  3856                           	opt stack 0
  3857  000290                     _MOTOR_BUTTON:
  3858                           	opt stack 0
  3859  000290                     	ds	1
  3860  000291                     _MOTOR_DIR:
  3861                           	opt stack 0
  3862  000291                     	ds	1
  3863  000292                     _OverTEMP:
  3864                           	opt stack 0
  3865  000292                     	ds	1
  3866  000293                     read_time@temp:
  3867                           	opt stack 0
  3868  000293                     	ds	1
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           postdec1	equ	0xFE5
  3876                           fsr1l	equ	0xFE1
  3877                           
  3878                           	psect	bssCOMRAM
  3879  000041                     __pbssCOMRAM:
  3880                           	opt stack 0
  3881  000041                     _AllData:
  3882                           	opt stack 0
  3883  000041                     	ds	8
  3884  000049                     _UseNum:
  3885                           	opt stack 0
  3886  000049                     	ds	1
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           postdec1	equ	0xFE5
  3894                           fsr1l	equ	0xFE1
  3895                           
  3896                           	psect	dataCOMRAM
  3897  00004A                     __pdataCOMRAM:
  3898                           	opt stack 0
  3899  00004A                     _OperatorID:
  3900                           	opt stack 0
  3901  00004A                     	ds	1
  3902  00004B                     _table:
  3903                           	opt stack 0
  3904  00004B                     	ds	7
  3905                           tblptru	equ	0xFF8
  3906                           tblptrh	equ	0xFF7
  3907                           tblptrl	equ	0xFF6
  3908                           tablat	equ	0xFF5
  3909                           postinc0	equ	0xFEE
  3910                           wreg	equ	0xFE8
  3911                           postdec1	equ	0xFE5
  3912                           fsr1l	equ	0xFE1
  3913                           
  3914                           	psect	bssBANK0
  3915  0000A9                     __pbssBANK0:
  3916                           	opt stack 0
  3917  0000A9                     _Lev:
  3918                           	opt stack 0
  3919  0000A9                     	ds	10
  3920  0000B3                     _SetPara:
  3921                           	opt stack 0
  3922  0000B3                     	ds	10
  3923  0000BD                     _AD_RES:
  3924                           	opt stack 0
  3925  0000BD                     	ds	3
  3926  0000C0                     _TEMP_VALUE:
  3927                           	opt stack 0
  3928  0000C0                     	ds	3
  3929  0000C3                     _LastSpeed:
  3930                           	opt stack 0
  3931  0000C3                     	ds	2
  3932  0000C5                     _Speed:
  3933                           	opt stack 0
  3934  0000C5                     	ds	2
  3935  0000C7                     _time:
  3936                           	opt stack 0
  3937  0000C7                     	ds	2
  3938  0000C9                     _OpenTimes:
  3939                           	opt stack 0
  3940  0000C9                     	ds	1
  3941  0000CA                     _OpenTimes_tmp:
  3942                           	opt stack 0
  3943  0000CA                     	ds	1
  3944  0000CB                     _SH:
  3945                           	opt stack 0
  3946  0000CB                     	ds	1
  3947  0000CC                     _dutyH:
  3948                           	opt stack 0
  3949  0000CC                     	ds	1
  3950  0000CD                     _dutyL:
  3951                           	opt stack 0
  3952  0000CD                     	ds	1
  3953  0000CE                     _hits:
  3954                           	opt stack 0
  3955  0000CE                     	ds	1
  3956  0000CF                     _address:
  3957                           	opt stack 0
  3958  0000CF                     	ds	2
  3959  0000D1                     _SL:
  3960                           	opt stack 0
  3961  0000D1                     	ds	1
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           postinc0	equ	0xFEE
  3967                           wreg	equ	0xFE8
  3968                           postdec1	equ	0xFE5
  3969                           fsr1l	equ	0xFE1
  3970                           
  3971                           	psect	dataBANK0
  3972  0000D2                     __pdataBANK0:
  3973                           	opt stack 0
  3974  0000D2                     _STATE_HALL:
  3975                           	opt stack 0
  3976  0000D2                     	ds	6
  3977  0000D8                     _STATE_HALL_BACK:
  3978                           	opt stack 0
  3979  0000D8                     	ds	6
  3980  0000DE                     _Page:
  3981                           	opt stack 0
  3982  0000DE                     	ds	1
  3983  0000DF                     _start:
  3984                           	opt stack 0
  3985  0000DF                     	ds	7
  3986                           tblptru	equ	0xFF8
  3987                           tblptrh	equ	0xFF7
  3988                           tblptrl	equ	0xFF6
  3989                           tablat	equ	0xFF5
  3990                           postinc0	equ	0xFEE
  3991                           wreg	equ	0xFE8
  3992                           postdec1	equ	0xFE5
  3993                           fsr1l	equ	0xFE1
  3994                           
  3995                           	psect	cstackBANK0
  3996  000060                     __pcstackBANK0:
  3997                           	opt stack 0
  3998  000060                     ___ftadd@sign:
  3999                           	opt stack 0
  4000                           
  4001                           ; 1 bytes @ 0x0
  4002  000060                     	ds	1
  4003  000061                     ___ftadd@exp2:
  4004                           	opt stack 0
  4005                           
  4006                           ; 1 bytes @ 0x1
  4007  000061                     	ds	1
  4008  000062                     ___ftadd@exp1:
  4009                           	opt stack 0
  4010                           
  4011                           ; 1 bytes @ 0x2
  4012  000062                     	ds	1
  4013  000063                     ?___ftdiv:
  4014                           	opt stack 0
  4015  000063                     ?___ftsub:
  4016                           	opt stack 0
  4017  000063                     ___ftdiv@f1:
  4018                           	opt stack 0
  4019  000063                     ___ftsub@f1:
  4020                           	opt stack 0
  4021                           
  4022                           ; 3 bytes @ 0x3
  4023  000063                     	ds	3
  4024  000066                     ___ftdiv@f2:
  4025                           	opt stack 0
  4026  000066                     ___ftsub@f2:
  4027                           	opt stack 0
  4028                           
  4029                           ; 3 bytes @ 0x6
  4030  000066                     	ds	3
  4031  000069                     ??___ftdiv:
  4032  000069                     readAD@tmp:
  4033                           	opt stack 0
  4034                           
  4035                           ; 3 bytes @ 0x9
  4036  000069                     	ds	3
  4037  00006C                     ___ftdiv@cntr:
  4038                           	opt stack 0
  4039                           
  4040                           ; 1 bytes @ 0xC
  4041  00006C                     	ds	1
  4042  00006D                     ___ftdiv@f3:
  4043                           	opt stack 0
  4044                           
  4045                           ; 3 bytes @ 0xD
  4046  00006D                     	ds	3
  4047  000070                     ___ftdiv@exp:
  4048                           	opt stack 0
  4049                           
  4050                           ; 1 bytes @ 0x10
  4051  000070                     	ds	1
  4052  000071                     ___ftdiv@sign:
  4053                           	opt stack 0
  4054                           
  4055                           ; 1 bytes @ 0x11
  4056  000071                     	ds	1
  4057  000072                     ?___fttol:
  4058                           	opt stack 0
  4059  000072                     ___fttol@f1:
  4060                           	opt stack 0
  4061                           
  4062                           ; 3 bytes @ 0x12
  4063  000072                     	ds	4
  4064  000076                     ??___fttol:
  4065                           
  4066                           ; 1 bytes @ 0x16
  4067  000076                     	ds	5
  4068  00007B                     ___fttol@sign1:
  4069                           	opt stack 0
  4070                           
  4071                           ; 1 bytes @ 0x1B
  4072  00007B                     	ds	1
  4073  00007C                     ___fttol@lval:
  4074                           	opt stack 0
  4075                           
  4076                           ; 4 bytes @ 0x1C
  4077  00007C                     	ds	4
  4078  000080                     ___fttol@exp1:
  4079                           	opt stack 0
  4080                           
  4081                           ; 1 bytes @ 0x20
  4082  000080                     	ds	1
  4083  000081                     ?___awmod:
  4084                           	opt stack 0
  4085  000081                     SET_DUTY@n:
  4086                           	opt stack 0
  4087  000081                     ___awmod@dividend:
  4088                           	opt stack 0
  4089                           
  4090                           ; 2 bytes @ 0x21
  4091  000081                     	ds	1
  4092  000082                     SET_DUTY@temp:
  4093                           	opt stack 0
  4094                           
  4095                           ; 2 bytes @ 0x22
  4096  000082                     	ds	1
  4097  000083                     ___awmod@divisor:
  4098                           	opt stack 0
  4099                           
  4100                           ; 2 bytes @ 0x23
  4101  000083                     	ds	2
  4102  000085                     ___awmod@counter:
  4103                           	opt stack 0
  4104                           
  4105                           ; 1 bytes @ 0x25
  4106  000085                     	ds	1
  4107  000086                     ___awmod@sign:
  4108                           	opt stack 0
  4109                           
  4110                           ; 1 bytes @ 0x26
  4111  000086                     	ds	1
  4112  000087                     itoa@val:
  4113                           	opt stack 0
  4114                           
  4115                           ; 2 bytes @ 0x27
  4116  000087                     	ds	2
  4117  000089                     itoa@base:
  4118                           	opt stack 0
  4119                           
  4120                           ; 2 bytes @ 0x29
  4121  000089                     	ds	3
  4122  00008C                     itoa@buf:
  4123                           	opt stack 0
  4124                           
  4125                           ; 1 bytes @ 0x2C
  4126  00008C                     	ds	1
  4127  00008D                     SetPage@mp:
  4128                           	opt stack 0
  4129  00008D                     DispPage1@mp:
  4130                           	opt stack 0
  4131  00008D                     IDPage@buf:
  4132                           	opt stack 0
  4133                           
  4134                           ; 4 bytes @ 0x2D
  4135  00008D                     	ds	2
  4136  00008F                     SetPage@lev:
  4137                           	opt stack 0
  4138  00008F                     DispPage1@lev:
  4139                           	opt stack 0
  4140                           
  4141                           ; 2 bytes @ 0x2F
  4142  00008F                     	ds	2
  4143  000091                     SetPage@x:
  4144                           	opt stack 0
  4145  000091                     DispPage1@buf:
  4146                           	opt stack 0
  4147                           
  4148                           ; 5 bytes @ 0x31
  4149  000091                     	ds	1
  4150  000092                     SetPage@buf:
  4151                           	opt stack 0
  4152                           
  4153                           ; 4 bytes @ 0x32
  4154  000092                     	ds	4
  4155  000096                     
  4156                           ; 2 bytes @ 0x36
  4157  000096                     	ds	2
  4158  000098                     
  4159                           ; 3 bytes @ 0x38
  4160  000098                     	ds	3
  4161  00009B                     ??_main:
  4162                           
  4163                           ; 1 bytes @ 0x3B
  4164  00009B                     	ds	2
  4165  00009D                     _main$526:
  4166                           	opt stack 0
  4167                           
  4168                           ; 2 bytes @ 0x3D
  4169  00009D                     	ds	2
  4170  00009F                     _main$532:
  4171                           	opt stack 0
  4172                           
  4173                           ; 2 bytes @ 0x3F
  4174  00009F                     	ds	2
  4175  0000A1                     _main$534:
  4176                           	opt stack 0
  4177                           
  4178                           ; 2 bytes @ 0x41
  4179  0000A1                     	ds	2
  4180  0000A3                     main@change:
  4181                           	opt stack 0
  4182                           
  4183                           ; 1 bytes @ 0x43
  4184  0000A3                     	ds	1
  4185  0000A4                     main@index:
  4186                           	opt stack 0
  4187                           
  4188                           ; 2 bytes @ 0x44
  4189  0000A4                     	ds	2
  4190  0000A6                     main@Arrow_Ptr:
  4191                           	opt stack 0
  4192                           
  4193                           ; 1 bytes @ 0x46
  4194  0000A6                     	ds	1
  4195  0000A7                     main@SetLev:
  4196                           	opt stack 0
  4197                           
  4198                           ; 1 bytes @ 0x47
  4199  0000A7                     	ds	1
  4200  0000A8                     main@Key:
  4201                           	opt stack 0
  4202                           
  4203                           ; 1 bytes @ 0x48
  4204  0000A8                     	ds	1
  4205                           tblptru	equ	0xFF8
  4206                           tblptrh	equ	0xFF7
  4207                           tblptrl	equ	0xFF6
  4208                           tablat	equ	0xFF5
  4209                           postinc0	equ	0xFEE
  4210                           wreg	equ	0xFE8
  4211                           postdec1	equ	0xFE5
  4212                           fsr1l	equ	0xFE1
  4213                           
  4214                           	psect	cstackCOMRAM
  4215  000001                     __pcstackCOMRAM:
  4216                           	opt stack 0
  4217  000001                     ?i2_strlen:
  4218                           	opt stack 0
  4219  000001                     i2write_spi@data:
  4220                           	opt stack 0
  4221  000001                     i2read_spi@t:
  4222                           	opt stack 0
  4223  000001                     i2Send_Hex@data:
  4224                           	opt stack 0
  4225  000001                     i2delay@t:
  4226                           	opt stack 0
  4227  000001                     i2strlen@s:
  4228                           	opt stack 0
  4229                           
  4230                           ; 2 bytes @ 0x0
  4231  000001                     	ds	1
  4232  000002                     i2read_F@address:
  4233                           	opt stack 0
  4234                           
  4235                           ; 2 bytes @ 0x1
  4236  000002                     	ds	1
  4237  000003                     i2write_F@address:
  4238                           	opt stack 0
  4239  000003                     i2strlen@cp:
  4240                           	opt stack 0
  4241                           
  4242                           ; 2 bytes @ 0x2
  4243  000003                     	ds	1
  4244  000004                     i2read_F@t:
  4245                           	opt stack 0
  4246                           
  4247                           ; 1 bytes @ 0x3
  4248  000004                     	ds	1
  4249  000005                     i2write_F@t:
  4250                           	opt stack 0
  4251  000005                     i2read_F@L:
  4252                           	opt stack 0
  4253  000005                     i2Send_Str@data:
  4254                           	opt stack 0
  4255                           
  4256                           ; 2 bytes @ 0x4
  4257  000005                     	ds	1
  4258  000006                     i2write_F@L:
  4259                           	opt stack 0
  4260  000006                     i2read_F@H:
  4261                           	opt stack 0
  4262                           
  4263                           ; 1 bytes @ 0x5
  4264  000006                     	ds	1
  4265  000007                     ??i2_Send_Str:
  4266  000007                     i2write_F@H:
  4267                           	opt stack 0
  4268                           
  4269                           ; 1 bytes @ 0x6
  4270  000007                     	ds	1
  4271  000008                     i2DataClean@b_add:
  4272                           	opt stack 0
  4273                           
  4274                           ; 2 bytes @ 0x7
  4275  000008                     	ds	1
  4276  000009                     i2Send_Str@i:
  4277                           	opt stack 0
  4278                           
  4279                           ; 2 bytes @ 0x8
  4280  000009                     	ds	1
  4281  00000A                     i2DataClean@e_add:
  4282                           	opt stack 0
  4283                           
  4284                           ; 2 bytes @ 0x9
  4285  00000A                     	ds	1
  4286  00000B                     
  4287                           ; 1 bytes @ 0xA
  4288  00000B                     	ds	1
  4289  00000C                     ??i2_DataClean:
  4290                           
  4291                           ; 1 bytes @ 0xB
  4292  00000C                     	ds	2
  4293  00000E                     i2DataClean@i:
  4294                           	opt stack 0
  4295                           
  4296                           ; 2 bytes @ 0xD
  4297  00000E                     	ds	2
  4298  000010                     ??_ISR:
  4299                           
  4300                           ; 1 bytes @ 0xF
  4301  000010                     	ds	11
  4302  00001B                     ISR@change:
  4303                           	opt stack 0
  4304                           
  4305                           ; 1 bytes @ 0x1A
  4306  00001B                     	ds	1
  4307  00001C                     ISR@i:
  4308                           	opt stack 0
  4309                           
  4310                           ; 2 bytes @ 0x1B
  4311  00001C                     	ds	2
  4312  00001E                     ?_strlen:
  4313                           	opt stack 0
  4314  00001E                     ?___lwdiv:
  4315                           	opt stack 0
  4316  00001E                     ?___lwmod:
  4317                           	opt stack 0
  4318  00001E                     ?___ftpack:
  4319                           	opt stack 0
  4320  00001E                     write_spi@data:
  4321                           	opt stack 0
  4322  00001E                     read_spi@t:
  4323                           	opt stack 0
  4324  00001E                     Send_Hex@data:
  4325                           	opt stack 0
  4326  00001E                     write_cmd@cmd:
  4327                           	opt stack 0
  4328  00001E                     write_data@data:
  4329                           	opt stack 0
  4330  00001E                     read_time@rec:
  4331                           	opt stack 0
  4332  00001E                     Ascii2Str@buf:
  4333                           	opt stack 0
  4334  00001E                     Hex2Dex@res:
  4335                           	opt stack 0
  4336  00001E                     TimeFormat@min:
  4337                           	opt stack 0
  4338  00001E                     ___lbmod@divisor:
  4339                           	opt stack 0
  4340  00001E                     delay@t:
  4341                           	opt stack 0
  4342  00001E                     ___lwdiv@dividend:
  4343                           	opt stack 0
  4344  00001E                     ___lwmod@dividend:
  4345                           	opt stack 0
  4346  00001E                     strlen@s:
  4347                           	opt stack 0
  4348  00001E                     ___ftpack@arg:
  4349                           	opt stack 0
  4350  00001E                     ___ftge@ff1:
  4351                           	opt stack 0
  4352                           
  4353                           ; 3 bytes @ 0x1D
  4354  00001E                     	ds	1
  4355  00001F                     LCD_WrDat@dat:
  4356                           	opt stack 0
  4357  00001F                     LCD_WrCmd@cmd:
  4358                           	opt stack 0
  4359  00001F                     Ascii2Str@ascii:
  4360                           	opt stack 0
  4361  00001F                     Hex2Dex@tmp:
  4362                           	opt stack 0
  4363  00001F                     TimeFormat@max:
  4364                           	opt stack 0
  4365  00001F                     ___lbmod@dividend:
  4366                           	opt stack 0
  4367  00001F                     read_F@address:
  4368                           	opt stack 0
  4369  00001F                     write_cmd@j:
  4370                           	opt stack 0
  4371  00001F                     write_data@j:
  4372                           	opt stack 0
  4373  00001F                     read_time@j:
  4374                           	opt stack 0
  4375                           
  4376                           ; 2 bytes @ 0x1E
  4377  00001F                     	ds	1
  4378  000020                     LCD_Set_Pos@y:
  4379                           	opt stack 0
  4380  000020                     LCD_CLS@x:
  4381                           	opt stack 0
  4382  000020                     delay_n@n:
  4383                           	opt stack 0
  4384  000020                     Hex2Dex@Hex:
  4385                           	opt stack 0
  4386  000020                     ___lbmod@counter:
  4387                           	opt stack 0
  4388  000020                     ___lwdiv@divisor:
  4389                           	opt stack 0
  4390  000020                     ___lwmod@divisor:
  4391                           	opt stack 0
  4392  000020                     strlen@cp:
  4393                           	opt stack 0
  4394  000020                     KeyScan@keytime:
  4395                           	opt stack 0
  4396                           
  4397                           ; 4 bytes @ 0x1F
  4398  000020                     	ds	1
  4399  000021                     read_F@t:
  4400                           	opt stack 0
  4401  000021                     LCD_Set_Pos@x:
  4402                           	opt stack 0
  4403  000021                     LCD_CLS@y:
  4404                           	opt stack 0
  4405  000021                     set_time@date:
  4406                           	opt stack 0
  4407  000021                     TimeFormat@buf:
  4408                           	opt stack 0
  4409  000021                     ___ftpack@exp:
  4410                           	opt stack 0
  4411  000021                     ___lbmod@rem:
  4412                           	opt stack 0
  4413  000021                     write_F@address:
  4414                           	opt stack 0
  4415  000021                     get_time@i:
  4416                           	opt stack 0
  4417  000021                     ___ftge@ff2:
  4418                           	opt stack 0
  4419                           
  4420                           ; 3 bytes @ 0x20
  4421  000021                     	ds	1
  4422  000022                     read_F@L:
  4423                           	opt stack 0
  4424  000022                     show6x8@y:
  4425                           	opt stack 0
  4426  000022                     LCD_P8x16Str@y:
  4427                           	opt stack 0
  4428  000022                     LCD_P8x16Sp@y:
  4429                           	opt stack 0
  4430  000022                     LCD_HZ@y:
  4431                           	opt stack 0
  4432  000022                     OLED_DrawBMP@y0:
  4433                           	opt stack 0
  4434  000022                     TimeFormat@ascii:
  4435                           	opt stack 0
  4436  000022                     ___ftpack@sign:
  4437                           	opt stack 0
  4438  000022                     ___lwmod@counter:
  4439                           	opt stack 0
  4440  000022                     Send_Str@data:
  4441                           	opt stack 0
  4442  000022                     set_time@i:
  4443                           	opt stack 0
  4444  000022                     ___lwdiv@quotient:
  4445                           	opt stack 0
  4446                           
  4447                           ; 2 bytes @ 0x21
  4448  000022                     	ds	1
  4449  000023                     ??___ftpack:
  4450  000023                     write_F@t:
  4451                           	opt stack 0
  4452  000023                     read_F@H:
  4453                           	opt stack 0
  4454  000023                     show6x8@c:
  4455                           	opt stack 0
  4456  000023                     LCD_P8x16Sp@ch:
  4457                           	opt stack 0
  4458  000023                     OLED_DrawBMP@x1:
  4459                           	opt stack 0
  4460  000023                     LCD_P8x16Str@ch:
  4461                           	opt stack 0
  4462  000023                     LCD_HZ@data:
  4463                           	opt stack 0
  4464                           
  4465                           ; 2 bytes @ 0x22
  4466  000023                     	ds	1
  4467  000024                     ??_show6x8:
  4468  000024                     ??_LCD_P8x16Sp:
  4469  000024                     ??_Send_Str:
  4470  000024                     ??___ftge:
  4471  000024                     write_F@L:
  4472                           	opt stack 0
  4473  000024                     OLED_DrawBMP@y1:
  4474                           	opt stack 0
  4475  000024                     ___lwdiv@counter:
  4476                           	opt stack 0
  4477                           
  4478                           ; 1 bytes @ 0x23
  4479  000024                     	ds	1
  4480  000025                     ??_LCD_P8x16Str:
  4481  000025                     write_F@H:
  4482                           	opt stack 0
  4483  000025                     LCD_HZ@N:
  4484                           	opt stack 0
  4485  000025                     OLED_DrawBMP@BMP:
  4486                           	opt stack 0
  4487  000025                     utoa@val:
  4488                           	opt stack 0
  4489                           
  4490                           ; 2 bytes @ 0x24
  4491  000025                     	ds	1
  4492  000026                     ??_Fill_Data:
  4493  000026                     ??_LCD_HZ:
  4494  000026                     ?___awtoft:
  4495                           	opt stack 0
  4496  000026                     ?___lbtoft:
  4497                           	opt stack 0
  4498  000026                     show6x8@x:
  4499                           	opt stack 0
  4500  000026                     DataClean@b_add:
  4501                           	opt stack 0
  4502  000026                     Send_Str@i:
  4503                           	opt stack 0
  4504  000026                     ___awtoft@c:
  4505                           	opt stack 0
  4506                           
  4507                           ; 2 bytes @ 0x25
  4508  000026                     	ds	1
  4509  000027                     ??_OLED_DrawBMP:
  4510  000027                     show6x8@i:
  4511                           	opt stack 0
  4512  000027                     utoa@base:
  4513                           	opt stack 0
  4514                           
  4515                           ; 2 bytes @ 0x26
  4516  000027                     	ds	1
  4517  000028                     Fill_Data@num:
  4518                           	opt stack 0
  4519  000028                     LCD_P6x8Str@y:
  4520                           	opt stack 0
  4521  000028                     LCD_P8x16Sp@x:
  4522                           	opt stack 0
  4523  000028                     LCD_HZ@x:
  4524                           	opt stack 0
  4525  000028                     DataClean@e_add:
  4526                           	opt stack 0
  4527                           
  4528                           ; 2 bytes @ 0x27
  4529  000028                     	ds	1
  4530  000029                     LCD_P6x8Str@mode:
  4531                           	opt stack 0
  4532  000029                     LCD_P8x16Str@c:
  4533                           	opt stack 0
  4534  000029                     LCD_P8x16Sp@c:
  4535                           	opt stack 0
  4536  000029                     ___awtoft@sign:
  4537                           	opt stack 0
  4538  000029                     ___lbtoft@c:
  4539                           	opt stack 0
  4540  000029                     Fill_Data@address:
  4541                           	opt stack 0
  4542  000029                     LCD_HZ@adder:
  4543                           	opt stack 0
  4544  000029                     OLED_DrawBMP@j:
  4545                           	opt stack 0
  4546  000029                     utoa@v:
  4547                           	opt stack 0
  4548                           
  4549                           ; 2 bytes @ 0x28
  4550  000029                     	ds	1
  4551  00002A                     ??_DataClean:
  4552  00002A                     ?___ftmul:
  4553                           	opt stack 0
  4554  00002A                     LCD_P6x8Str@x:
  4555                           	opt stack 0
  4556  00002A                     LCD_P8x16Str@j:
  4557                           	opt stack 0
  4558  00002A                     LCD_P8x16Sp@i:
  4559                           	opt stack 0
  4560  00002A                     ___ftmul@f1:
  4561                           	opt stack 0
  4562                           
  4563                           ; 3 bytes @ 0x29
  4564  00002A                     	ds	1
  4565  00002B                     LCD_P8x16Str@x:
  4566                           	opt stack 0
  4567  00002B                     LCD_HZ@wm:
  4568                           	opt stack 0
  4569  00002B                     OLED_DrawBMP@x:
  4570                           	opt stack 0
  4571  00002B                     utoa@c:
  4572                           	opt stack 0
  4573                           
  4574                           ; 1 bytes @ 0x2A
  4575  00002B                     	ds	1
  4576  00002C                     LCD_P8x16Str@i:
  4577                           	opt stack 0
  4578  00002C                     OLED_DrawBMP@x0:
  4579                           	opt stack 0
  4580  00002C                     utoa@buf:
  4581                           	opt stack 0
  4582  00002C                     DataClean@i:
  4583                           	opt stack 0
  4584                           
  4585                           ; 2 bytes @ 0x2B
  4586  00002C                     	ds	1
  4587  00002D                     OLED_DrawBMP@y:
  4588                           	opt stack 0
  4589  00002D                     TimePage@month:
  4590                           	opt stack 0
  4591  00002D                     ResetPage@x:
  4592                           	opt stack 0
  4593  00002D                     ___ftmul@f2:
  4594                           	opt stack 0
  4595                           
  4596                           ; 3 bytes @ 0x2C
  4597  00002D                     	ds	1
  4598  00002E                     TimePage@day:
  4599                           	opt stack 0
  4600                           
  4601                           ; 1 bytes @ 0x2D
  4602  00002E                     	ds	1
  4603  00002F                     TimePage@hour:
  4604                           	opt stack 0
  4605                           
  4606                           ; 1 bytes @ 0x2E
  4607  00002F                     	ds	1
  4608  000030                     ??___ftmul:
  4609  000030                     TimePage@min:
  4610                           	opt stack 0
  4611                           
  4612                           ; 1 bytes @ 0x2F
  4613  000030                     	ds	1
  4614  000031                     TimePage@sec:
  4615                           	opt stack 0
  4616                           
  4617                           ; 1 bytes @ 0x30
  4618  000031                     	ds	1
  4619  000032                     TimePage@x:
  4620                           	opt stack 0
  4621                           
  4622                           ; 1 bytes @ 0x31
  4623  000032                     	ds	1
  4624  000033                     TimePage@year:
  4625                           	opt stack 0
  4626  000033                     ___ftmul@exp:
  4627                           	opt stack 0
  4628                           
  4629                           ; 1 bytes @ 0x32
  4630  000033                     	ds	1
  4631  000034                     ___ftmul@sign:
  4632                           	opt stack 0
  4633  000034                     TimePage@buf:
  4634                           	opt stack 0
  4635                           
  4636                           ; 3 bytes @ 0x33
  4637  000034                     	ds	1
  4638  000035                     ___ftmul@f3_as_product:
  4639                           	opt stack 0
  4640                           
  4641                           ; 3 bytes @ 0x34
  4642  000035                     	ds	3
  4643  000038                     ?___ftadd:
  4644                           	opt stack 0
  4645  000038                     ___ftadd@f1:
  4646                           	opt stack 0
  4647                           
  4648                           ; 3 bytes @ 0x37
  4649  000038                     	ds	3
  4650  00003B                     ___ftadd@f2:
  4651                           	opt stack 0
  4652                           
  4653                           ; 3 bytes @ 0x3A
  4654  00003B                     	ds	3
  4655  00003E                     ??___ftadd:
  4656                           
  4657                           ; 1 bytes @ 0x3D
  4658  00003E                     	ds	3
  4659  000041                     tblptru	equ	0xFF8
  4660                           tblptrh	equ	0xFF7
  4661                           tblptrl	equ	0xFF6
  4662                           tablat	equ	0xFF5
  4663                           postinc0	equ	0xFEE
  4664                           wreg	equ	0xFE8
  4665                           postdec1	equ	0xFE5
  4666                           fsr1l	equ	0xFE1
  4667                           
  4668                           ; 1 bytes @ 0x40
  4669 ;;
  4670 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4671 ;;
  4672 ;; *************** function _main *****************
  4673 ;; Defined at:
  4674 ;;		line 113 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/main.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  argc            2   54[BANK0 ] int 
  4677 ;;  argv            3   56[BANK0 ] PTR PTR unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  change          1   67[BANK0 ] unsigned char 
  4680 ;;  index           2   68[BANK0 ] int 
  4681 ;;  Key             1   72[BANK0 ] unsigned char 
  4682 ;;  SetLev          1   71[BANK0 ] unsigned char 
  4683 ;;  Arrow_Ptr       1   70[BANK0 ] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  2   54[BANK0 ] int 
  4686 ;; Registers used:
  4687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4693 ;;      Params:         0       5       0       0
  4694 ;;      Locals:         0      12       0       0
  4695 ;;      Temps:          0       2       0       0
  4696 ;;      Totals:         0      19       0       0
  4697 ;;Total ram usage:       19 bytes
  4698 ;; Hardware stack levels required when called:   10
  4699 ;; This function calls:
  4700 ;;		_AD_INIT
  4701 ;;		_CAP_INIT
  4702 ;;		_DS1302_INIT
  4703 ;;		_DataClean
  4704 ;;		_DispLogo
  4705 ;;		_DispPage1
  4706 ;;		_Display_Menu
  4707 ;;		_FRAM_INIT
  4708 ;;		_Fill_Data
  4709 ;;		_IDPage
  4710 ;;		_KEY_INIT
  4711 ;;		_KeyScan
  4712 ;;		_LCD_CLS
  4713 ;;		_LCD_INIT
  4714 ;;		_PWM_INIT
  4715 ;;		_ResetPage
  4716 ;;		_SET_DUTY
  4717 ;;		_SetDefaultPara
  4718 ;;		_SetOKPage
  4719 ;;		_SetPage
  4720 ;;		_TimeFormat
  4721 ;;		_TimePage
  4722 ;;		_UART_INIT
  4723 ;;		___ftadd
  4724 ;;		___ftdiv
  4725 ;;		___ftmul
  4726 ;;		___fttol
  4727 ;;		___lbmod
  4728 ;;		___lbtoft
  4729 ;;		_delay_n
  4730 ;;		_get_time
  4731 ;;		_readAD
  4732 ;;		_read_F
  4733 ;;		_set_time
  4734 ;;		_write_F
  4735 ;; This function is called by:
  4736 ;;		Startup code after reset
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text0
  4741  000346                     __ptext0:
  4742                           	opt stack 0
  4743  000346                     _main:
  4744                           	opt stack 21
  4745                           
  4746                           ;main.c: 119: ANSEL0=0x03;
  4747                           
  4748                           ;incstack = 0
  4749  000346  0E03               	movlw	3
  4750  000348  6EB8               	movwf	4024,c	;volatile
  4751                           
  4752                           ;main.c: 120: ANSEL1=0x00;
  4753  00034A  6AB9               	clrf	4025,c	;volatile
  4754                           
  4755                           ;main.c: 122: GIE=1;
  4756  00034C  8EF2               	bsf	intcon,7,c	;volatile
  4757                           
  4758                           ;main.c: 123: PEIE=1;
  4759  00034E  8CF2               	bsf	intcon,6,c	;volatile
  4760                           
  4761                           ;main.c: 125: char Arrow_Ptr=0;
  4762  000350  0100               	movlb	0	; () banked
  4763  000352  6BA6               	clrf	main@Arrow_Ptr& (0+255),b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;main.c: 131: FRAM_INIT();
  4767  000354  EC86  F018         	call	_FRAM_INIT	;wreg free
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;main.c: 132: for(address=0; address<5; address++)
  4771  000358  6BCF               	clrf	_address& (0+255),b
  4772  00035A  6BD0               	clrf	(_address+1)& (0+255),b
  4773  00035C                     l5522:
  4774                           
  4775                           ; BSR set to: 0
  4776  00035C  BFD0               	btfsc	(_address+1)& (0+255),7,b
  4777  00035E  D005               	goto	l5526
  4778  000360  51D0               	movf	(_address+1)& (0+255),w,b
  4779  000362  E12B               	bnz	l5532
  4780  000364  0E05               	movlw	5
  4781  000366  5DCF               	subwf	_address& (0+255),w,b
  4782  000368  E228               	bc	l5532
  4783  00036A                     l5526:
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;main.c: 133: {
  4787                           ;main.c: 134: Lev[address].duty=read_F(address*2);
  4788  00036A  51CF               	movf	_address& (0+255),w,b
  4789  00036C  0D02               	mullw	2
  4790  00036E  50F3               	movf	prodl,w,c
  4791  000370  0FA9               	addlw	low _Lev
  4792  000372  6ED9               	movwf	fsr2l,c
  4793  000374  6ADA               	clrf	fsr2h,c
  4794  000376  90D8               	bcf	status,0,c
  4795  000378  35CF               	rlcf	_address& (0+255),w,b
  4796  00037A  6E1F               	movwf	read_F@address,c
  4797  00037C  35D0               	rlcf	(_address+1)& (0+255),w,b
  4798  00037E  6E20               	movwf	read_F@address+1,c
  4799  000380  ECE3  F016         	call	_read_F	;wreg free
  4800  000384  6EDF               	movwf	indf2,c
  4801                           
  4802                           ;main.c: 135: Lev[address].hits=read_F(address*2+1);
  4803  000386  0100               	movlb	0	; () banked
  4804  000388  51CF               	movf	_address& (0+255),w,b
  4805  00038A  0D02               	mullw	2
  4806  00038C  50F3               	movf	prodl,w,c
  4807  00038E  0FAA               	addlw	low (_Lev+1)
  4808  000390  6ED9               	movwf	fsr2l,c
  4809  000392  6ADA               	clrf	fsr2h,c
  4810  000394  C0CF  F09B         	movff	_address,??_main
  4811  000398  C0D0  F09C         	movff	_address+1,??_main+1
  4812  00039C  90D8               	bcf	status,0,c
  4813  00039E  379B               	rlcf	??_main& (0+255),f,b
  4814  0003A0  379C               	rlcf	(??_main+1)& (0+255),f,b
  4815  0003A2  299B               	incf	??_main& (0+255),w,b
  4816  0003A4  6E1F               	movwf	read_F@address,c
  4817  0003A6  0E00               	movlw	0
  4818  0003A8  219C               	addwfc	(??_main+1)& (0+255),w,b
  4819  0003AA  6E20               	movwf	read_F@address+1,c
  4820  0003AC  ECE3  F016         	call	_read_F	;wreg free
  4821  0003B0  6EDF               	movwf	indf2,c
  4822  0003B2  0100               	movlb	0	; () banked
  4823  0003B4  4BCF               	infsnz	_address& (0+255),f,b
  4824  0003B6  2BD0               	incf	(_address+1)& (0+255),f,b
  4825  0003B8  D7D1               	goto	l5522
  4826  0003BA                     l5532:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;main.c: 136: }
  4830                           ;main.c: 137: Lev[0].duty=read_F(11);
  4831  0003BA  6A20               	clrf	read_F@address+1,c
  4832  0003BC  0E0B               	movlw	11
  4833  0003BE  6E1F               	movwf	read_F@address,c
  4834  0003C0  ECE3  F016         	call	_read_F	;wreg free
  4835  0003C4  0100               	movlb	0	; () banked
  4836  0003C6  6FA9               	movwf	_Lev& (0+255),b
  4837                           
  4838                           ;main.c: 138: OpenTimes_tmp=OpenTimes=read_F(10);
  4839  0003C8  6A20               	clrf	read_F@address+1,c
  4840  0003CA  0E0A               	movlw	10
  4841  0003CC  6E1F               	movwf	read_F@address,c
  4842  0003CE  ECE3  F016         	call	_read_F	;wreg free
  4843  0003D2  0100               	movlb	0	; () banked
  4844  0003D4  6FC9               	movwf	_OpenTimes& (0+255),b
  4845  0003D6  C0C9  F0CA         	movff	_OpenTimes,_OpenTimes_tmp
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;main.c: 140: TRISE1=0;RE1=1;
  4849  0003DA  9296               	bcf	3990,1,c	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852  0003DC  8284               	bsf	3972,1,c	;volatile
  4853                           
  4854                           ;main.c: 141: PWM_INIT();
  4855  0003DE  EC9F  F017         	call	_PWM_INIT	;wreg free
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;main.c: 142: LCD_INIT();
  4859  0003E2  EC97  F00F         	call	_LCD_INIT	;wreg free
  4860                           
  4861                           ;main.c: 143: DispLogo();
  4862  0003E6  EC21  F012         	call	_DispLogo	;wreg free
  4863                           
  4864                           ;main.c: 144: DS1302_INIT();
  4865  0003EA  ECDD  F017         	call	_DS1302_INIT	;wreg free
  4866                           
  4867                           ;main.c: 145: CAP_INIT();
  4868  0003EE  EC50  F017         	call	_CAP_INIT	;wreg free
  4869                           
  4870                           ;main.c: 146: AD_INIT();
  4871  0003F2  ECF7  F017         	call	_AD_INIT	;wreg free
  4872                           
  4873                           ;main.c: 148: delay_n(12);
  4874  0003F6  0E0C               	movlw	12
  4875  0003F8  EC23  F018         	call	_delay_n
  4876                           
  4877                           ;main.c: 149: LCD_CLS();
  4878  0003FC  ECCB  F016         	call	_LCD_CLS	;wreg free
  4879                           
  4880                           ;main.c: 151: MOTOR_BUTTON = 0;
  4881  000400  9052               	bcf	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  4882                           
  4883                           ;main.c: 152: MOTOR_DIR=0;
  4884  000402  9252               	bcf	_MOTOR_DIR/(0+8),_MOTOR_DIR& (0+7),c
  4885                           
  4886                           ;main.c: 153: extern struct MotorPara SetPara[5];
  4887                           ;main.c: 154: SetPara[0]=Lev[0];SetPara[1]=Lev[1];SetPara[2]=Lev[2];SetPara[3]=Lev[3];Se
      +                          tPara[4]=Lev[4];
  4888  000404  C0A9  F0B3         	movff	_Lev,_SetPara
  4889  000408  C0AA  F0B4         	movff	_Lev+1,_SetPara+1
  4890  00040C  C0AB  F0B5         	movff	_Lev+2,_SetPara+2
  4891  000410  C0AC  F0B6         	movff	_Lev+3,_SetPara+3
  4892  000414  C0AD  F0B7         	movff	_Lev+4,_SetPara+4
  4893  000418  C0AE  F0B8         	movff	_Lev+5,_SetPara+5
  4894  00041C  C0AF  F0B9         	movff	_Lev+6,_SetPara+6
  4895  000420  C0B0  F0BA         	movff	_Lev+7,_SetPara+7
  4896  000424  C0B1  F0BB         	movff	_Lev+8,_SetPara+8
  4897  000428  C0B2  F0BC         	movff	_Lev+9,_SetPara+9
  4898                           
  4899                           ;main.c: 155: char SetLev=1;
  4900  00042C  0E01               	movlw	1
  4901  00042E  0100               	movlb	0	; () banked
  4902  000430  6FA7               	movwf	main@SetLev& (0+255),b
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;main.c: 159: TRISC3=1;
  4906  000432  8694               	bsf	3988,3,c	;volatile
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;main.c: 164: KEY_INIT();
  4910  000434  EC5F  F018         	call	_KEY_INIT	;wreg free
  4911  000438                     l5574:
  4912                           
  4913                           ;main.c: 167: {
  4914                           ;main.c: 168: Key=KeyScan();
  4915  000438  ECA3  F00D         	call	_KeyScan	;wreg free
  4916  00043C  0100               	movlb	0	; () banked
  4917  00043E  6FA8               	movwf	main@Key& (0+255),b
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;main.c: 169: if(Page==1)
  4921  000440  05DE               	decf	_Page& (0+255),w,b
  4922  000442  E141               	bnz	l5622
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;main.c: 170: {
  4926                           ;main.c: 171: MOTOR_BUTTON=0;
  4927  000444  9052               	bcf	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;main.c: 172: get_time();
  4931  000446  EC9E  F013         	call	_get_time	;wreg free
  4932                           
  4933                           ;main.c: 173: IDPage();
  4934  00044A  EC5E  F008         	call	_IDPage	;wreg free
  4935                           
  4936                           ;main.c: 174: if(Key==1)
  4937  00044E  0100               	movlb	0	; () banked
  4938  000450  05A8               	decf	main@Key& (0+255),w,b
  4939  000452  E107               	bnz	l5592
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;main.c: 175: {
  4943                           ;main.c: 176: Key=0;
  4944  000454  6BA8               	clrf	main@Key& (0+255),b
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;main.c: 177: if(++OperatorID>10)
  4948  000456  2A4A               	incf	_OperatorID,f,c
  4949  000458  0E0A               	movlw	10
  4950  00045A  644A               	cpfsgt	_OperatorID,c
  4951  00045C  D002               	goto	l5592
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;main.c: 178: {
  4955                           ;main.c: 179: OperatorID=1;
  4956  00045E  0E01               	movlw	1
  4957  000460  6E4A               	movwf	_OperatorID,c
  4958  000462                     l5592:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;main.c: 180: }
  4962                           ;main.c: 181: }
  4963                           ;main.c: 182: if(Key==2)
  4964  000462  0E02               	movlw	2
  4965  000464  19A8               	xorwf	main@Key& (0+255),w,b
  4966  000466  E105               	bnz	l5598
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;main.c: 183: {
  4970                           ;main.c: 184: Key=0;
  4971  000468  6BA8               	clrf	main@Key& (0+255),b
  4972                           
  4973                           ;main.c: 185: if(--OperatorID<1)
  4974  00046A  2E4A               	decfsz	_OperatorID,f,c
  4975  00046C  D002               	goto	l5598
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;main.c: 186: {
  4979                           ;main.c: 187: OperatorID=10;
  4980  00046E  0E0A               	movlw	10
  4981  000470  6E4A               	movwf	_OperatorID,c
  4982  000472                     l5598:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;main.c: 188: }
  4986                           ;main.c: 189: }
  4987                           ;main.c: 190: if(Key==3)
  4988  000472  0E03               	movlw	3
  4989  000474  19A8               	xorwf	main@Key& (0+255),w,b
  4990  000476  E127               	bnz	l5622
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;main.c: 191: {
  4994                           ;main.c: 192: Key=0;
  4995  000478  6BA8               	clrf	main@Key& (0+255),b
  4996                           
  4997                           ;main.c: 194: OpenTimes=OpenTimes_tmp;
  4998  00047A  C0CA  F0C9         	movff	_OpenTimes_tmp,_OpenTimes
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;main.c: 195: if(OpenTimes>0xFD)
  5002  00047E  0EFD               	movlw	253
  5003  000480  65C9               	cpfsgt	_OpenTimes& (0+255),b
  5004  000482  D007               	goto	l5606
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;main.c: 196: {
  5008                           ;main.c: 197: write_F(0,0x0a);
  5009  000484  6A22               	clrf	write_F@address+1,c
  5010  000486  0E0A               	movlw	10
  5011  000488  6E21               	movwf	write_F@address,c
  5012  00048A  0E00               	movlw	0
  5013  00048C  EC66  F015         	call	_write_F
  5014                           
  5015                           ;main.c: 198: }
  5016  000490  D007               	goto	l5610
  5017  000492                     l5606:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;main.c: 199: else
  5021                           ;main.c: 200: {
  5022                           ;main.c: 201: OpenTimes++;
  5023  000492  2BC9               	incf	_OpenTimes& (0+255),f,b
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;main.c: 202: write_F(OpenTimes,0x0a);
  5027  000494  6A22               	clrf	write_F@address+1,c
  5028  000496  0E0A               	movlw	10
  5029  000498  6E21               	movwf	write_F@address,c
  5030  00049A  51C9               	movf	_OpenTimes& (0+255),w,b
  5031  00049C  EC66  F015         	call	_write_F
  5032  0004A0                     l5610:
  5033                           
  5034                           ;main.c: 203: }
  5035                           ;main.c: 204: Fill_Data(OpenTimes==30?254:OpenTimes);
  5036  0004A0  0E1E               	movlw	30
  5037  0004A2  0100               	movlb	0	; () banked
  5038  0004A4  19C9               	xorwf	_OpenTimes& (0+255),w,b
  5039  0004A6  E004               	bz	l5614
  5040                           
  5041                           ; BSR set to: 0
  5042  0004A8  C0C9  F09D         	movff	_OpenTimes,_main$526
  5043  0004AC  6B9E               	clrf	(_main$526+1)& (0+255),b
  5044  0004AE  D003               	goto	l5616
  5045  0004B0                     l5614:
  5046                           
  5047                           ; BSR set to: 0
  5048  0004B0  6B9E               	clrf	(_main$526+1)& (0+255),b
  5049  0004B2  0EFE               	movlw	254
  5050  0004B4  6F9D               	movwf	_main$526& (0+255),b
  5051  0004B6                     l5616:
  5052                           
  5053                           ; BSR set to: 0
  5054  0004B6  519D               	movf	_main$526& (0+255),w,b
  5055  0004B8  ECFF  F00F         	call	_Fill_Data
  5056                           
  5057                           ;main.c: 205: LCD_CLS();
  5058  0004BC  ECCB  F016         	call	_LCD_CLS	;wreg free
  5059                           
  5060                           ;main.c: 206: Page=2;
  5061  0004C0  0E02               	movlw	2
  5062  0004C2  0100               	movlb	0	; () banked
  5063  0004C4  6FDE               	movwf	_Page& (0+255),b
  5064  0004C6                     l5622:
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;main.c: 207: }
  5068                           ;main.c: 208: }
  5069                           ;main.c: 209: if(Page==2)
  5070  0004C6  0E02               	movlw	2
  5071  0004C8  19DE               	xorwf	_Page& (0+255),w,b
  5072  0004CA  E001 D0C3          	bnz	l5696
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;main.c: 210: {
  5076                           ;main.c: 211: DispPage1(SetPara[SetLev-1],SetLev);
  5077  0004CE  51A7               	movf	main@SetLev& (0+255),w,b
  5078  0004D0  0D02               	mullw	2
  5079  0004D2  50F3               	movf	prodl,w,c
  5080  0004D4  0FB1               	addlw	low (_SetPara+254)
  5081  0004D6  6ED9               	movwf	fsr2l,c
  5082  0004D8  6ADA               	clrf	fsr2h,c
  5083  0004DA  CFDE F08D          	movff	postinc2,DispPage1@mp
  5084  0004DE  CFDD F08E          	movff	postdec2,DispPage1@mp+1
  5085  0004E2  C0A7  F08F         	movff	main@SetLev,DispPage1@lev
  5086  0004E6  6B90               	clrf	(DispPage1@lev+1)& (0+255),b
  5087  0004E8  EC57  F005         	call	_DispPage1	;wreg free
  5088                           
  5089                           ;main.c: 212: SET_DUTY(SetPara[SetLev-1].duty);
  5090  0004EC  0100               	movlb	0	; () banked
  5091  0004EE  51A7               	movf	main@SetLev& (0+255),w,b
  5092  0004F0  0D02               	mullw	2
  5093  0004F2  50F3               	movf	prodl,w,c
  5094  0004F4  0FB1               	addlw	low (_SetPara+254)
  5095  0004F6  6ED9               	movwf	fsr2l,c
  5096  0004F8  6ADA               	clrf	fsr2h,c
  5097  0004FA  50DF               	movf	indf2,w,c
  5098  0004FC  ECEC  F012         	call	_SET_DUTY
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;main.c: 213: Speed=(625000.0/(SL+SH*256.0));
  5102  000500  6A2D               	clrf	___ftmul@f2,c
  5103  000502  0E80               	movlw	128
  5104  000504  6E2E               	movwf	___ftmul@f2+1,c
  5105  000506  0E43               	movlw	67
  5106  000508  6E2F               	movwf	___ftmul@f2+2,c
  5107  00050A  51CB               	movf	_SH& (0+255),w,b
  5108  00050C  EC8D  F017         	call	___lbtoft
  5109  000510  C026  F02A         	movff	?___lbtoft,___ftmul@f1
  5110  000514  C027  F02B         	movff	?___lbtoft+1,___ftmul@f1+1
  5111  000518  C028  F02C         	movff	?___lbtoft+2,___ftmul@f1+2
  5112  00051C  EC2C  F00F         	call	___ftmul	;wreg free
  5113  000520  C02A  F03B         	movff	?___ftmul,___ftadd@f2
  5114  000524  C02B  F03C         	movff	?___ftmul+1,___ftadd@f2+1
  5115  000528  C02C  F03D         	movff	?___ftmul+2,___ftadd@f2+2
  5116  00052C  0100               	movlb	0	; () banked
  5117  00052E  51D1               	movf	_SL& (0+255),w,b
  5118  000530  EC8D  F017         	call	___lbtoft
  5119  000534  C026  F038         	movff	?___lbtoft,___ftadd@f1
  5120  000538  C027  F039         	movff	?___lbtoft+1,___ftadd@f1+1
  5121  00053C  C028  F03A         	movff	?___lbtoft+2,___ftadd@f1+2
  5122  000540  EC4A  F00C         	call	___ftadd	;wreg free
  5123  000544  C038  F066         	movff	?___ftadd,___ftdiv@f2
  5124  000548  C039  F067         	movff	?___ftadd+1,___ftdiv@f2+1
  5125  00054C  C03A  F068         	movff	?___ftadd+2,___ftdiv@f2+2
  5126  000550  0E97               	movlw	151
  5127  000552  0100               	movlb	0	; () banked
  5128  000554  6F63               	movwf	___ftdiv@f1& (0+255),b
  5129  000556  0E18               	movlw	24
  5130  000558  6F64               	movwf	(___ftdiv@f1+1)& (0+255),b
  5131  00055A  0E49               	movlw	73
  5132  00055C  6F65               	movwf	(___ftdiv@f1+2)& (0+255),b
  5133  00055E  EC65  F010         	call	___ftdiv	;wreg free
  5134  000562  C063  F072         	movff	?___ftdiv,___fttol@f1
  5135  000566  C064  F073         	movff	?___ftdiv+1,___fttol@f1+1
  5136  00056A  C065  F074         	movff	?___ftdiv+2,___fttol@f1+2
  5137  00056E  ECC3  F010         	call	___fttol	;wreg free
  5138  000572  C072  F0C5         	movff	?___fttol,_Speed
  5139  000576  C073  F0C6         	movff	?___fttol+1,_Speed+1
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;main.c: 214: readAD();
  5143  00057A  ECF9  F00C         	call	_readAD	;wreg free
  5144                           
  5145                           ;main.c: 215: if(Speed-LastSpeed<=-300)
  5146  00057E  0100               	movlb	0	; () banked
  5147  000580  51C3               	movf	_LastSpeed& (0+255),w,b
  5148  000582  5DC5               	subwf	_Speed& (0+255),w,b
  5149  000584  6F9B               	movwf	??_main& (0+255),b
  5150  000586  51C4               	movf	(_LastSpeed+1)& (0+255),w,b
  5151  000588  59C6               	subwfb	(_Speed+1)& (0+255),w,b
  5152  00058A  6F9C               	movwf	(??_main+1)& (0+255),b
  5153  00058C  AF9C               	btfss	(??_main+1)& (0+255),7,b
  5154  00058E  D00B               	goto	l5640
  5155  000590  0ED5               	movlw	213
  5156  000592  5D9B               	subwf	??_main& (0+255),w,b
  5157  000594  0EFE               	movlw	254
  5158  000596  599C               	subwfb	(??_main+1)& (0+255),w,b
  5159  000598  E206               	bc	l5640
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;main.c: 216: {
  5163                           ;main.c: 217: hits++;
  5164  00059A  2BCE               	incf	_hits& (0+255),f,b
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;main.c: 218: if(hits>=100)
  5168  00059C  0E63               	movlw	99
  5169  00059E  65CE               	cpfsgt	_hits& (0+255),b
  5170  0005A0  D002               	goto	l5640
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;main.c: 219: {
  5174                           ;main.c: 220: hits=100;
  5175  0005A2  0E64               	movlw	100
  5176  0005A4  6FCE               	movwf	_hits& (0+255),b
  5177  0005A6                     l5640:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;main.c: 221: }
  5181                           ;main.c: 222: }
  5182                           ;main.c: 223: LastSpeed=Speed;
  5183  0005A6  C0C5  F0C3         	movff	_Speed,_LastSpeed
  5184  0005AA  C0C6  F0C4         	movff	_Speed+1,_LastSpeed+1
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;main.c: 224: if(Key==1)
  5188  0005AE  05A8               	decf	main@Key& (0+255),w,b
  5189  0005B0  E107               	bnz	l5652
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;main.c: 225: {
  5193                           ;main.c: 226: Key=0;
  5194  0005B2  6BA8               	clrf	main@Key& (0+255),b
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;main.c: 227: if(++SetLev>5)
  5198  0005B4  2BA7               	incf	main@SetLev& (0+255),f,b
  5199  0005B6  0E05               	movlw	5
  5200  0005B8  65A7               	cpfsgt	main@SetLev& (0+255),b
  5201  0005BA  D001               	goto	l5650
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;main.c: 228: {
  5205                           ;main.c: 229: SetLev=5;
  5206  0005BC  6FA7               	movwf	main@SetLev& (0+255),b
  5207  0005BE                     l5650:
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;main.c: 230: }
  5211                           ;main.c: 231: hits=0;
  5212  0005BE  6BCE               	clrf	_hits& (0+255),b
  5213  0005C0                     l5652:
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;main.c: 232: }
  5217                           ;main.c: 233: if(Key==2)
  5218  0005C0  0E02               	movlw	2
  5219  0005C2  19A8               	xorwf	main@Key& (0+255),w,b
  5220  0005C4  E106               	bnz	l5660
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;main.c: 234: {
  5224                           ;main.c: 235: Key=0;
  5225  0005C6  6BA8               	clrf	main@Key& (0+255),b
  5226                           
  5227                           ;main.c: 236: if(--SetLev<1)
  5228  0005C8  2FA7               	decfsz	main@SetLev& (0+255),f,b
  5229  0005CA  D002               	goto	l5658
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;main.c: 237: {
  5233                           ;main.c: 238: SetLev=1;
  5234  0005CC  0E01               	movlw	1
  5235  0005CE  6FA7               	movwf	main@SetLev& (0+255),b
  5236  0005D0                     l5658:
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;main.c: 239: }
  5240                           ;main.c: 240: hits=0;
  5241  0005D0  6BCE               	clrf	_hits& (0+255),b
  5242  0005D2                     l5660:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;main.c: 241: }
  5246                           ;main.c: 242: if(Key==3)
  5247  0005D2  0E03               	movlw	3
  5248  0005D4  19A8               	xorwf	main@Key& (0+255),w,b
  5249  0005D6  E129               	bnz	l5678
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;main.c: 243: {
  5253                           ;main.c: 244: Key=0;
  5254  0005D8  6BA8               	clrf	main@Key& (0+255),b
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;main.c: 245: UseNum++;
  5258  0005DA  2A49               	incf	_UseNum,f,c
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;main.c: 246: write_F(UseNum,16+(OpenTimes==30?254:OpenTimes-1)*8+7);
  5262  0005DC  0E1E               	movlw	30
  5263  0005DE  19C9               	xorwf	_OpenTimes& (0+255),w,b
  5264  0005E0  E007               	bz	l5670
  5265                           
  5266                           ; BSR set to: 0
  5267  0005E2  0EFF               	movlw	255
  5268  0005E4  25C9               	addwf	_OpenTimes& (0+255),w,b
  5269  0005E6  6F9F               	movwf	_main$532& (0+255),b
  5270  0005E8  6BA0               	clrf	(_main$532+1)& (0+255),b
  5271  0005EA  0EFF               	movlw	255
  5272  0005EC  23A0               	addwfc	(_main$532+1)& (0+255),f,b
  5273  0005EE  D003               	goto	l5672
  5274  0005F0                     l5670:
  5275                           
  5276                           ; BSR set to: 0
  5277  0005F0  6BA0               	clrf	(_main$532+1)& (0+255),b
  5278  0005F2  0EFE               	movlw	254
  5279  0005F4  6F9F               	movwf	_main$532& (0+255),b
  5280  0005F6                     l5672:
  5281                           
  5282                           ; BSR set to: 0
  5283  0005F6  C09F  F09B         	movff	_main$532,??_main
  5284  0005FA  C0A0  F09C         	movff	_main$532+1,??_main+1
  5285  0005FE  90D8               	bcf	status,0,c
  5286  000600  379B               	rlcf	??_main& (0+255),f,b
  5287  000602  379C               	rlcf	(??_main+1)& (0+255),f,b
  5288  000604  90D8               	bcf	status,0,c
  5289  000606  379B               	rlcf	??_main& (0+255),f,b
  5290  000608  379C               	rlcf	(??_main+1)& (0+255),f,b
  5291  00060A  90D8               	bcf	status,0,c
  5292  00060C  379B               	rlcf	??_main& (0+255),f,b
  5293  00060E  379C               	rlcf	(??_main+1)& (0+255),f,b
  5294  000610  0E17               	movlw	23
  5295  000612  259B               	addwf	??_main& (0+255),w,b
  5296  000614  6E21               	movwf	write_F@address,c
  5297  000616  0E00               	movlw	0
  5298  000618  219C               	addwfc	(??_main+1)& (0+255),w,b
  5299  00061A  6E22               	movwf	write_F@address+1,c
  5300  00061C  5049               	movf	_UseNum,w,c
  5301  00061E  EC66  F015         	call	_write_F
  5302                           
  5303                           ;main.c: 247: Speed=0;
  5304  000622  0100               	movlb	0	; () banked
  5305  000624  6BC5               	clrf	_Speed& (0+255),b
  5306  000626  6BC6               	clrf	(_Speed+1)& (0+255),b
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;main.c: 249: MOTOR_BUTTON=1;
  5310  000628  8052               	bsf	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  5311  00062A                     l5678:
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;main.c: 250: }
  5315                           ;main.c: 251: if(Key==4)
  5316  00062A  0E04               	movlw	4
  5317  00062C  19A8               	xorwf	main@Key& (0+255),w,b
  5318  00062E  E104               	bnz	l708
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;main.c: 252: {
  5322                           ;main.c: 253: Key=0;
  5323  000630  6BA8               	clrf	main@Key& (0+255),b
  5324                           
  5325                           ;main.c: 254: Speed=0;
  5326  000632  6BC5               	clrf	_Speed& (0+255),b
  5327  000634  6BC6               	clrf	(_Speed+1)& (0+255),b
  5328                           
  5329                           ;main.c: 255: MOTOR_BUTTON=0;
  5330  000636  9052               	bcf	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  5331  000638                     l708:
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;main.c: 256: }
  5335                           ;main.c: 257: if(MOTOR_BUTTON==0)
  5336  000638  B052               	btfsc	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  5337  00063A  D004               	goto	l5688
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;main.c: 258: {
  5341                           ;main.c: 259: if(RC2==0)
  5342  00063C  A482               	btfss	3970,2,c	;volatile
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;main.c: 260: {
  5346                           ;main.c: 261: MOTOR_DIR=0;
  5347  00063E  9252               	bcf	_MOTOR_DIR/(0+8),_MOTOR_DIR& (0+7),c
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;main.c: 262: }
  5351                           ;main.c: 263: if(RC1==0)
  5352  000640  A282               	btfss	3970,1,c	;volatile
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;main.c: 264: {
  5356                           ;main.c: 265: MOTOR_DIR=1;
  5357  000642  8252               	bsf	_MOTOR_DIR/(0+8),_MOTOR_DIR& (0+7),c
  5358  000644                     l5688:
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;main.c: 266: }
  5362                           ;main.c: 267: }
  5363                           ;main.c: 268: if(Key==7)
  5364  000644  0E07               	movlw	7
  5365  000646  19A8               	xorwf	main@Key& (0+255),w,b
  5366  000648  E105               	bnz	l5696
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;main.c: 269: {
  5370                           ;main.c: 270: Key=0;
  5371  00064A  6BA8               	clrf	main@Key& (0+255),b
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;main.c: 271: Page=3;
  5375  00064C  0E03               	movlw	3
  5376  00064E  6FDE               	movwf	_Page& (0+255),b
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;main.c: 272: LCD_CLS();
  5380  000650  ECCB  F016         	call	_LCD_CLS	;wreg free
  5381  000654                     l5696:
  5382                           
  5383                           ;main.c: 273: }
  5384                           ;main.c: 274: }
  5385                           ;main.c: 275: if(Page==3)
  5386  000654  0E03               	movlw	3
  5387  000656  0100               	movlb	0	; () banked
  5388  000658  19DE               	xorwf	_Page& (0+255),w,b
  5389  00065A  E001 D112          	bnz	l5810
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;main.c: 276: {
  5393                           ;main.c: 277: hits=0;
  5394  00065E  6BCE               	clrf	_hits& (0+255),b
  5395                           
  5396                           ;main.c: 278: MOTOR_BUTTON=0;
  5397  000660  9052               	bcf	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;main.c: 279: SetPage(SetPara[SetLev-1],SetLev,Arrow_Ptr);
  5401  000662  51A7               	movf	main@SetLev& (0+255),w,b
  5402  000664  0D02               	mullw	2
  5403  000666  50F3               	movf	prodl,w,c
  5404  000668  0FB1               	addlw	low (_SetPara+254)
  5405  00066A  6ED9               	movwf	fsr2l,c
  5406  00066C  6ADA               	clrf	fsr2h,c
  5407  00066E  CFDE F08D          	movff	postinc2,SetPage@mp
  5408  000672  CFDD F08E          	movff	postdec2,SetPage@mp+1
  5409  000676  C0A7  F08F         	movff	main@SetLev,SetPage@lev
  5410  00067A  6B90               	clrf	(SetPage@lev+1)& (0+255),b
  5411  00067C  C0A6  F091         	movff	main@Arrow_Ptr,SetPage@x
  5412  000680  EC0D  F007         	call	_SetPage	;wreg free
  5413                           
  5414                           ;main.c: 280: if(Key==3)
  5415  000684  0E03               	movlw	3
  5416  000686  0100               	movlb	0	; () banked
  5417  000688  19A8               	xorwf	main@Key& (0+255),w,b
  5418  00068A  E109               	bnz	l5708
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;main.c: 281: {
  5422                           ;main.c: 282: Key=0;
  5423  00068C  6BA8               	clrf	main@Key& (0+255),b
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;main.c: 283: Arrow_Ptr=++Arrow_Ptr % 3;
  5427  00068E  0E03               	movlw	3
  5428  000690  6E1E               	movwf	___lbmod@divisor,c
  5429  000692  2BA6               	incf	main@Arrow_Ptr& (0+255),f,b
  5430  000694  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  5431  000696  EC7A  F017         	call	___lbmod
  5432  00069A  0100               	movlb	0	; () banked
  5433  00069C  6FA6               	movwf	main@Arrow_Ptr& (0+255),b
  5434  00069E                     l5708:
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;main.c: 284: }
  5438                           ;main.c: 285: if(Arrow_Ptr==0)
  5439  00069E  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  5440  0006A0  E114               	bnz	l5730
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;main.c: 286: {
  5444                           ;main.c: 287: if(Key==1)
  5445  0006A2  05A8               	decf	main@Key& (0+255),w,b
  5446  0006A4  E107               	bnz	l5718
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;main.c: 288: {
  5450                           ;main.c: 289: Key=0;
  5451  0006A6  6BA8               	clrf	main@Key& (0+255),b
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;main.c: 290: if(++SetLev>5)
  5455  0006A8  2BA7               	incf	main@SetLev& (0+255),f,b
  5456  0006AA  0E05               	movlw	5
  5457  0006AC  65A7               	cpfsgt	main@SetLev& (0+255),b
  5458  0006AE  D002               	goto	l5718
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;main.c: 291: {
  5462                           ;main.c: 292: SetLev=1;
  5463  0006B0  0E01               	movlw	1
  5464  0006B2  6FA7               	movwf	main@SetLev& (0+255),b
  5465  0006B4                     l5718:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;main.c: 293: }
  5469                           ;main.c: 294: }
  5470                           ;main.c: 295: if(Key==2)
  5471  0006B4  0E02               	movlw	2
  5472  0006B6  19A8               	xorwf	main@Key& (0+255),w,b
  5473  0006B8  E108               	bnz	l5730
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;main.c: 296: {
  5477                           ;main.c: 297: Key=0;
  5478  0006BA  6BA8               	clrf	main@Key& (0+255),b
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;main.c: 298: --SetLev;
  5482  0006BC  07A7               	decf	main@SetLev& (0+255),f,b
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;main.c: 299: if(SetLev<1 || SetLev==0xff)
  5486  0006BE  51A7               	movf	main@SetLev& (0+255),w,b
  5487  0006C0  E002               	bz	l5728
  5488                           
  5489                           ; BSR set to: 0
  5490  0006C2  29A7               	incf	main@SetLev& (0+255),w,b
  5491  0006C4  E102               	bnz	l5730
  5492  0006C6                     l5728:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;main.c: 300: {
  5496                           ;main.c: 301: SetLev=5;
  5497  0006C6  0E05               	movlw	5
  5498  0006C8  6FA7               	movwf	main@SetLev& (0+255),b
  5499  0006CA                     l5730:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;main.c: 302: }
  5503                           ;main.c: 303: }
  5504                           ;main.c: 304: }
  5505                           ;main.c: 305: if(Arrow_Ptr==1)
  5506  0006CA  05A6               	decf	main@Arrow_Ptr& (0+255),w,b
  5507  0006CC  E137               	bnz	l5750
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;main.c: 306: {
  5511                           ;main.c: 307: if(Key==1)
  5512  0006CE  05A8               	decf	main@Key& (0+255),w,b
  5513  0006D0  E112               	bnz	l5740
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;main.c: 308: {
  5517                           ;main.c: 309: Key=0;
  5518  0006D2  6BA8               	clrf	main@Key& (0+255),b
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;main.c: 310: if(++SetPara[SetLev-1].duty>100)
  5522  0006D4  51A7               	movf	main@SetLev& (0+255),w,b
  5523  0006D6  0D02               	mullw	2
  5524  0006D8  50F3               	movf	prodl,w,c
  5525  0006DA  0FB1               	addlw	low (_SetPara+254)
  5526  0006DC  6ED9               	movwf	fsr2l,c
  5527  0006DE  6ADA               	clrf	fsr2h,c
  5528  0006E0  2ADF               	incf	indf2,f,c
  5529  0006E2  0E64               	movlw	100
  5530  0006E4  64DF               	cpfsgt	indf2,c
  5531  0006E6  D007               	goto	l5740
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;main.c: 311: {
  5535                           ;main.c: 312: SetPara[SetLev-1].duty=0;
  5536  0006E8  51A7               	movf	main@SetLev& (0+255),w,b
  5537  0006EA  0D02               	mullw	2
  5538  0006EC  50F3               	movf	prodl,w,c
  5539  0006EE  0FB1               	addlw	low (_SetPara+254)
  5540  0006F0  6ED9               	movwf	fsr2l,c
  5541  0006F2  6ADA               	clrf	fsr2h,c
  5542  0006F4  6ADF               	clrf	indf2,c
  5543  0006F6                     l5740:
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;main.c: 313: }
  5547                           ;main.c: 314: }
  5548                           ;main.c: 315: if(Key==2)
  5549  0006F6  0E02               	movlw	2
  5550  0006F8  19A8               	xorwf	main@Key& (0+255),w,b
  5551  0006FA  E120               	bnz	l5750
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;main.c: 316: {
  5555                           ;main.c: 317: Key=0;
  5556  0006FC  6BA8               	clrf	main@Key& (0+255),b
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;main.c: 318: --SetPara[SetLev-1].duty;
  5560  0006FE  51A7               	movf	main@SetLev& (0+255),w,b
  5561  000700  0D02               	mullw	2
  5562  000702  50F3               	movf	prodl,w,c
  5563  000704  0FB1               	addlw	low (_SetPara+254)
  5564  000706  6ED9               	movwf	fsr2l,c
  5565  000708  6ADA               	clrf	fsr2h,c
  5566  00070A  06DF               	decf	indf2,f,c
  5567                           
  5568                           ;main.c: 319: if(SetPara[SetLev-1].duty<1 || SetPara[SetLev-1].duty==0xff)
  5569  00070C  51A7               	movf	main@SetLev& (0+255),w,b
  5570  00070E  0D02               	mullw	2
  5571  000710  50F3               	movf	prodl,w,c
  5572  000712  0FB1               	addlw	low (_SetPara+254)
  5573  000714  6ED9               	movwf	fsr2l,c
  5574  000716  6ADA               	clrf	fsr2h,c
  5575  000718  50DF               	movf	indf2,w,c
  5576  00071A  E008               	bz	l5748
  5577                           
  5578                           ; BSR set to: 0
  5579  00071C  51A7               	movf	main@SetLev& (0+255),w,b
  5580  00071E  0D02               	mullw	2
  5581  000720  50F3               	movf	prodl,w,c
  5582  000722  0FB1               	addlw	low (_SetPara+254)
  5583  000724  6ED9               	movwf	fsr2l,c
  5584  000726  6ADA               	clrf	fsr2h,c
  5585  000728  28DE               	incf	postinc2,w,c
  5586  00072A  E108               	bnz	l5750
  5587  00072C                     l5748:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;main.c: 320: {
  5591                           ;main.c: 321: SetPara[SetLev-1].duty=100;
  5592  00072C  51A7               	movf	main@SetLev& (0+255),w,b
  5593  00072E  0D02               	mullw	2
  5594  000730  50F3               	movf	prodl,w,c
  5595  000732  0FB1               	addlw	low (_SetPara+254)
  5596  000734  6ED9               	movwf	fsr2l,c
  5597  000736  6ADA               	clrf	fsr2h,c
  5598  000738  0E64               	movlw	100
  5599  00073A  6EDF               	movwf	indf2,c
  5600  00073C                     l5750:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;main.c: 322: }
  5604                           ;main.c: 323: }
  5605                           ;main.c: 324: }
  5606                           ;main.c: 325: if(Arrow_Ptr==2)
  5607  00073C  0E02               	movlw	2
  5608  00073E  19A6               	xorwf	main@Arrow_Ptr& (0+255),w,b
  5609  000740  E137               	bnz	l5770
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;main.c: 326: {
  5613                           ;main.c: 327: if(Key==1)
  5614  000742  05A8               	decf	main@Key& (0+255),w,b
  5615  000744  E112               	bnz	l5760
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;main.c: 328: {
  5619                           ;main.c: 329: Key=0;
  5620  000746  6BA8               	clrf	main@Key& (0+255),b
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;main.c: 330: if(++SetPara[SetLev-1].hits>100)
  5624  000748  51A7               	movf	main@SetLev& (0+255),w,b
  5625  00074A  0D02               	mullw	2
  5626  00074C  50F3               	movf	prodl,w,c
  5627  00074E  0FB2               	addlw	low (_SetPara+255)
  5628  000750  6ED9               	movwf	fsr2l,c
  5629  000752  6ADA               	clrf	fsr2h,c
  5630  000754  2ADF               	incf	indf2,f,c
  5631  000756  0E64               	movlw	100
  5632  000758  64DF               	cpfsgt	indf2,c
  5633  00075A  D007               	goto	l5760
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;main.c: 331: {
  5637                           ;main.c: 332: SetPara[SetLev-1].hits=0;
  5638  00075C  51A7               	movf	main@SetLev& (0+255),w,b
  5639  00075E  0D02               	mullw	2
  5640  000760  50F3               	movf	prodl,w,c
  5641  000762  0FB2               	addlw	low (_SetPara+255)
  5642  000764  6ED9               	movwf	fsr2l,c
  5643  000766  6ADA               	clrf	fsr2h,c
  5644  000768  6ADF               	clrf	indf2,c
  5645  00076A                     l5760:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;main.c: 333: }
  5649                           ;main.c: 334: }
  5650                           ;main.c: 335: if(Key==2)
  5651  00076A  0E02               	movlw	2
  5652  00076C  19A8               	xorwf	main@Key& (0+255),w,b
  5653  00076E  E120               	bnz	l5770
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;main.c: 336: {
  5657                           ;main.c: 337: Key=0;
  5658  000770  6BA8               	clrf	main@Key& (0+255),b
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;main.c: 338: --SetPara[SetLev-1].hits;
  5662  000772  51A7               	movf	main@SetLev& (0+255),w,b
  5663  000774  0D02               	mullw	2
  5664  000776  50F3               	movf	prodl,w,c
  5665  000778  0FB2               	addlw	low (_SetPara+255)
  5666  00077A  6ED9               	movwf	fsr2l,c
  5667  00077C  6ADA               	clrf	fsr2h,c
  5668  00077E  06DF               	decf	indf2,f,c
  5669                           
  5670                           ;main.c: 339: if(SetPara[SetLev-1].hits<1 || SetPara[SetLev-1].hits==0xff)
  5671  000780  51A7               	movf	main@SetLev& (0+255),w,b
  5672  000782  0D02               	mullw	2
  5673  000784  50F3               	movf	prodl,w,c
  5674  000786  0FB2               	addlw	low (_SetPara+255)
  5675  000788  6ED9               	movwf	fsr2l,c
  5676  00078A  6ADA               	clrf	fsr2h,c
  5677  00078C  50DF               	movf	indf2,w,c
  5678  00078E  E008               	bz	l5768
  5679                           
  5680                           ; BSR set to: 0
  5681  000790  51A7               	movf	main@SetLev& (0+255),w,b
  5682  000792  0D02               	mullw	2
  5683  000794  50F3               	movf	prodl,w,c
  5684  000796  0FB2               	addlw	low (_SetPara+255)
  5685  000798  6ED9               	movwf	fsr2l,c
  5686  00079A  6ADA               	clrf	fsr2h,c
  5687  00079C  28DE               	incf	postinc2,w,c
  5688  00079E  E108               	bnz	l5770
  5689  0007A0                     l5768:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;main.c: 340: {
  5693                           ;main.c: 341: SetPara[SetLev-1].hits=100;
  5694  0007A0  51A7               	movf	main@SetLev& (0+255),w,b
  5695  0007A2  0D02               	mullw	2
  5696  0007A4  50F3               	movf	prodl,w,c
  5697  0007A6  0FB2               	addlw	low (_SetPara+255)
  5698  0007A8  6ED9               	movwf	fsr2l,c
  5699  0007AA  6ADA               	clrf	fsr2h,c
  5700  0007AC  0E64               	movlw	100
  5701  0007AE  6EDF               	movwf	indf2,c
  5702  0007B0                     l5770:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;main.c: 342: }
  5706                           ;main.c: 343: }
  5707                           ;main.c: 344: }
  5708                           ;main.c: 345: if(Key==4)
  5709  0007B0  0E04               	movlw	4
  5710  0007B2  19A8               	xorwf	main@Key& (0+255),w,b
  5711  0007B4  E15C               	bnz	l5802
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;main.c: 346: {
  5715                           ;main.c: 348: for(address=0; address<5; address++)
  5716  0007B6  6BCF               	clrf	_address& (0+255),b
  5717  0007B8  6BD0               	clrf	(_address+1)& (0+255),b
  5718  0007BA                     l5774:
  5719                           
  5720                           ; BSR set to: 0
  5721  0007BA  BFD0               	btfsc	(_address+1)& (0+255),7,b
  5722  0007BC  D005               	goto	l5778
  5723  0007BE  51D0               	movf	(_address+1)& (0+255),w,b
  5724  0007C0  E14D               	bnz	l5794
  5725  0007C2  0E05               	movlw	5
  5726  0007C4  5DCF               	subwf	_address& (0+255),w,b
  5727  0007C6  E24A               	bc	l5794
  5728  0007C8                     l5778:
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;main.c: 349: {
  5732                           ;main.c: 350: write_F(SetPara[address].duty, 2*address==0x00?0x0b:(2*address));
  5733  0007C8  C0CF  F09B         	movff	_address,??_main
  5734  0007CC  C0D0  F09C         	movff	_address+1,??_main+1
  5735  0007D0  90D8               	bcf	status,0,c
  5736  0007D2  379B               	rlcf	??_main& (0+255),f,b
  5737  0007D4  379C               	rlcf	(??_main+1)& (0+255),f,b
  5738  0007D6  519B               	movf	??_main& (0+255),w,b
  5739  0007D8  119C               	iorwf	(??_main+1)& (0+255),w,b
  5740  0007DA  E006               	bz	l5782
  5741                           
  5742                           ; BSR set to: 0
  5743  0007DC  90D8               	bcf	status,0,c
  5744  0007DE  35CF               	rlcf	_address& (0+255),w,b
  5745  0007E0  6FA1               	movwf	_main$534& (0+255),b
  5746  0007E2  35D0               	rlcf	(_address+1)& (0+255),w,b
  5747  0007E4  6FA2               	movwf	(_main$534+1)& (0+255),b
  5748  0007E6  D003               	goto	l5784
  5749  0007E8                     l5782:
  5750                           
  5751                           ; BSR set to: 0
  5752  0007E8  6BA2               	clrf	(_main$534+1)& (0+255),b
  5753  0007EA  0E0B               	movlw	11
  5754  0007EC  6FA1               	movwf	_main$534& (0+255),b
  5755  0007EE                     l5784:
  5756                           
  5757                           ; BSR set to: 0
  5758  0007EE  C0A1  F021         	movff	_main$534,write_F@address
  5759  0007F2  C0A2  F022         	movff	_main$534+1,write_F@address+1
  5760  0007F6  51CF               	movf	_address& (0+255),w,b
  5761  0007F8  0D02               	mullw	2
  5762  0007FA  50F3               	movf	prodl,w,c
  5763  0007FC  0FB3               	addlw	low _SetPara
  5764  0007FE  6ED9               	movwf	fsr2l,c
  5765  000800  6ADA               	clrf	fsr2h,c
  5766  000802  50DF               	movf	indf2,w,c
  5767  000804  EC66  F015         	call	_write_F
  5768                           
  5769                           ;main.c: 351: write_F(SetPara[address].hits, 2*address+1);
  5770  000808  C0CF  F09B         	movff	_address,??_main
  5771  00080C  C0D0  F09C         	movff	_address+1,??_main+1
  5772  000810  90D8               	bcf	status,0,c
  5773  000812  0100               	movlb	0	; () banked
  5774  000814  379B               	rlcf	??_main& (0+255),f,b
  5775  000816  379C               	rlcf	(??_main+1)& (0+255),f,b
  5776  000818  299B               	incf	??_main& (0+255),w,b
  5777  00081A  6E21               	movwf	write_F@address,c
  5778  00081C  0E00               	movlw	0
  5779  00081E  219C               	addwfc	(??_main+1)& (0+255),w,b
  5780  000820  6E22               	movwf	write_F@address+1,c
  5781  000822  51CF               	movf	_address& (0+255),w,b
  5782  000824  0D02               	mullw	2
  5783  000826  50F3               	movf	prodl,w,c
  5784  000828  0FB4               	addlw	low (_SetPara+1)
  5785  00082A  6ED9               	movwf	fsr2l,c
  5786  00082C  6ADA               	clrf	fsr2h,c
  5787  00082E  50DF               	movf	indf2,w,c
  5788  000830  EC66  F015         	call	_write_F
  5789                           
  5790                           ;main.c: 352: Lev[address]=SetPara[address];
  5791  000834  0100               	movlb	0	; () banked
  5792  000836  51CF               	movf	_address& (0+255),w,b
  5793  000838  0D02               	mullw	2
  5794  00083A  50F3               	movf	prodl,w,c
  5795  00083C  0FB3               	addlw	low _SetPara
  5796  00083E  6ED9               	movwf	fsr2l,c
  5797  000840  6ADA               	clrf	fsr2h,c
  5798  000842  51CF               	movf	_address& (0+255),w,b
  5799  000844  0D02               	mullw	2
  5800  000846  50F3               	movf	prodl,w,c
  5801  000848  0FA9               	addlw	low _Lev
  5802  00084A  6EE1               	movwf	fsr1l,c
  5803  00084C  6AE2               	clrf	fsr1h,c
  5804  00084E  CFDE FFE6          	movff	postinc2,postinc1
  5805  000852  CFDD FFE5          	movff	postdec2,postdec1
  5806                           
  5807                           ; BSR set to: 0
  5808  000856  4BCF               	infsnz	_address& (0+255),f,b
  5809  000858  2BD0               	incf	(_address+1)& (0+255),f,b
  5810  00085A  D7AF               	goto	l5774
  5811  00085C                     l5794:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;main.c: 354: }
  5815                           ;main.c: 356: LCD_CLS();
  5816  00085C  ECCB  F016         	call	_LCD_CLS	;wreg free
  5817                           
  5818                           ;main.c: 357: SetOKPage();
  5819  000860  EC64  F013         	call	_SetOKPage	;wreg free
  5820                           
  5821                           ;main.c: 358: delay_n(6);
  5822  000864  0E06               	movlw	6
  5823  000866  EC23  F018         	call	_delay_n
  5824                           
  5825                           ;main.c: 359: LCD_CLS();
  5826  00086A  ECCB  F016         	call	_LCD_CLS	;wreg free
  5827  00086E                     l5802:
  5828                           
  5829                           ;main.c: 360: }
  5830                           ;main.c: 361: if(Key==7)
  5831  00086E  0E07               	movlw	7
  5832  000870  0100               	movlb	0	; () banked
  5833  000872  19A8               	xorwf	main@Key& (0+255),w,b
  5834  000874  E106               	bnz	l5810
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;main.c: 362: {
  5838                           ;main.c: 363: Key=0;
  5839  000876  6BA8               	clrf	main@Key& (0+255),b
  5840                           
  5841                           ;main.c: 364: Arrow_Ptr=0;
  5842  000878  6BA6               	clrf	main@Arrow_Ptr& (0+255),b
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;main.c: 365: Page=4;
  5846  00087A  0E04               	movlw	4
  5847  00087C  6FDE               	movwf	_Page& (0+255),b
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;main.c: 366: LCD_CLS();
  5851  00087E  ECCB  F016         	call	_LCD_CLS	;wreg free
  5852  000882                     l5810:
  5853                           
  5854                           ;main.c: 367: }
  5855                           ;main.c: 368: }
  5856                           ;main.c: 369: if(Page==4)
  5857  000882  0E04               	movlw	4
  5858  000884  0100               	movlb	0	; () banked
  5859  000886  19DE               	xorwf	_Page& (0+255),w,b
  5860  000888  E001 D087          	bnz	l5868
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;main.c: 370: {
  5864                           ;main.c: 371: MOTOR_BUTTON=0;
  5865  00088C  9052               	bcf	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;main.c: 372: TimePage(table[6],table[4],table[3],table[2],table[1],table[0],Arrow_Ptr);
  5869  00088E  C04F  F02D         	movff	_table+4,TimePage@month
  5870  000892  C04E  F02E         	movff	_table+3,TimePage@day
  5871  000896  C04D  F02F         	movff	_table+2,TimePage@hour
  5872  00089A  C04C  F030         	movff	_table+1,TimePage@min
  5873  00089E  C04B  F031         	movff	_table,TimePage@sec
  5874  0008A2  C0A6  F032         	movff	main@Arrow_Ptr,TimePage@x
  5875  0008A6  5051               	movf	_table+6,w,c
  5876  0008A8  EC95  F00A         	call	_TimePage
  5877                           
  5878                           ;main.c: 373: if(Key==3)
  5879  0008AC  0E03               	movlw	3
  5880  0008AE  0100               	movlb	0	; () banked
  5881  0008B0  19A8               	xorwf	main@Key& (0+255),w,b
  5882  0008B2  E108               	bnz	l5820
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;main.c: 374: {
  5886                           ;main.c: 375: Arrow_Ptr=++Arrow_Ptr % 6;
  5887  0008B4  0E06               	movlw	6
  5888  0008B6  6E1E               	movwf	___lbmod@divisor,c
  5889  0008B8  2BA6               	incf	main@Arrow_Ptr& (0+255),f,b
  5890  0008BA  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  5891  0008BC  EC7A  F017         	call	___lbmod
  5892  0008C0  0100               	movlb	0	; () banked
  5893  0008C2  6FA6               	movwf	main@Arrow_Ptr& (0+255),b
  5894  0008C4                     l5820:
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;main.c: 376: }
  5898                           ;main.c: 378: int index=Arrow_Ptr==0 ? 6 :(5-Arrow_Ptr);
  5899  0008C4  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  5900  0008C6  E009               	bz	l5824
  5901                           
  5902                           ; BSR set to: 0
  5903  0008C8  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  5904  0008CA  0805               	sublw	5
  5905  0008CC  6FA4               	movwf	main@index& (0+255),b
  5906  0008CE  0E00               	movlw	0
  5907  0008D0  A0D8               	btfss	status,0,c
  5908  0008D2  2AE8               	incf	wreg,f,c
  5909  0008D4  0800               	sublw	0
  5910  0008D6  6FA5               	movwf	(main@index+1)& (0+255),b
  5911  0008D8  D003               	goto	l5826
  5912  0008DA                     l5824:
  5913                           
  5914                           ; BSR set to: 0
  5915  0008DA  6BA5               	clrf	(main@index+1)& (0+255),b
  5916  0008DC  0E06               	movlw	6
  5917  0008DE  6FA4               	movwf	main@index& (0+255),b
  5918  0008E0                     l5826:
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;main.c: 379: if(Key==1)
  5922  0008E0  05A8               	decf	main@Key& (0+255),w,b
  5923  0008E2  E105               	bnz	l5830
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;main.c: 380: {
  5927                           ;main.c: 381: ++table[index];
  5928  0008E4  51A4               	movf	main@index& (0+255),w,b
  5929  0008E6  0F4B               	addlw	low _table
  5930  0008E8  6ED9               	movwf	fsr2l,c
  5931  0008EA  6ADA               	clrf	fsr2h,c
  5932  0008EC  2ADF               	incf	indf2,f,c
  5933  0008EE                     l5830:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;main.c: 382: }
  5937                           ;main.c: 383: if(Key==2)
  5938  0008EE  0E02               	movlw	2
  5939  0008F0  19A8               	xorwf	main@Key& (0+255),w,b
  5940  0008F2  E130               	bnz	l5846
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;main.c: 384: {
  5944                           ;main.c: 385: --table[index];
  5945  0008F4  51A4               	movf	main@index& (0+255),w,b
  5946  0008F6  0F4B               	addlw	low _table
  5947  0008F8  6ED9               	movwf	fsr2l,c
  5948  0008FA  6ADA               	clrf	fsr2h,c
  5949  0008FC  06DF               	decf	indf2,f,c
  5950  0008FE  D02A               	goto	l5846
  5951  000900                     l5834:
  5952                           
  5953                           ; BSR set to: 0
  5954  000900  6A1E               	clrf	TimeFormat@min,c
  5955  000902  0E99               	movlw	153
  5956  000904  6E1F               	movwf	TimeFormat@max,c
  5957  000906  51A4               	movf	main@index& (0+255),w,b
  5958  000908  0F4B               	addlw	low _table
  5959  00090A  ECAC  F012         	call	_TimeFormat
  5960  00090E  D02B               	goto	l5848
  5961  000910                     l5836:
  5962                           
  5963                           ; BSR set to: 0
  5964  000910  0E01               	movlw	1
  5965  000912  6E1E               	movwf	TimeFormat@min,c
  5966  000914  0E12               	movlw	18
  5967  000916  6E1F               	movwf	TimeFormat@max,c
  5968  000918  51A4               	movf	main@index& (0+255),w,b
  5969  00091A  0F4B               	addlw	low _table
  5970  00091C  ECAC  F012         	call	_TimeFormat
  5971  000920  D022               	goto	l5848
  5972  000922                     l5838:
  5973                           
  5974                           ; BSR set to: 0
  5975  000922  0E01               	movlw	1
  5976  000924  6E1E               	movwf	TimeFormat@min,c
  5977  000926  0E31               	movlw	49
  5978  000928  6E1F               	movwf	TimeFormat@max,c
  5979  00092A  51A4               	movf	main@index& (0+255),w,b
  5980  00092C  0F4B               	addlw	low _table
  5981  00092E  ECAC  F012         	call	_TimeFormat
  5982  000932  D019               	goto	l5848
  5983  000934                     l5840:
  5984                           
  5985                           ; BSR set to: 0
  5986  000934  6A1E               	clrf	TimeFormat@min,c
  5987  000936  0E24               	movlw	36
  5988  000938  6E1F               	movwf	TimeFormat@max,c
  5989  00093A  51A4               	movf	main@index& (0+255),w,b
  5990  00093C  0F4B               	addlw	low _table
  5991  00093E  ECAC  F012         	call	_TimeFormat
  5992  000942  D011               	goto	l5848
  5993  000944                     l5842:
  5994                           
  5995                           ; BSR set to: 0
  5996  000944  6A1E               	clrf	TimeFormat@min,c
  5997  000946  0E60               	movlw	96
  5998  000948  6E1F               	movwf	TimeFormat@max,c
  5999  00094A  51A4               	movf	main@index& (0+255),w,b
  6000  00094C  0F4B               	addlw	low _table
  6001  00094E  ECAC  F012         	call	_TimeFormat
  6002  000952  D009               	goto	l5848
  6003  000954                     l5846:
  6004                           
  6005                           ; BSR set to: 0
  6006  000954  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  6007                           
  6008                           ; Switch size 1, requested type "speed"
  6009                           ; Number of cases is 4, Range of values is 0 to 3
  6010                           ; switch strategies available:
  6011                           ; Name         Instructions Cycles
  6012                           ; simple_byte           13     7 (average)
  6013                           ;	Chosen strategy is simple_byte
  6014  000956  E0D4               	bz	l5834
  6015  000958  0A01               	xorlw	1	; case 1
  6016  00095A  E0DA               	bz	l5836
  6017  00095C  0A03               	xorlw	3	; case 2
  6018  00095E  E0E1               	bz	l5838
  6019  000960  0A01               	xorlw	1	; case 3
  6020  000962  E0E8               	bz	l5840
  6021  000964  D7EF               	goto	l5842
  6022  000966                     l5848:
  6023                           
  6024                           ;main.c: 396: if(Key==4)
  6025  000966  0E04               	movlw	4
  6026  000968  0100               	movlb	0	; () banked
  6027  00096A  19A8               	xorwf	main@Key& (0+255),w,b
  6028  00096C  E10C               	bnz	l5860
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;main.c: 397: {
  6032                           ;main.c: 398: set_time(table);
  6033  00096E  0E4B               	movlw	_table& (0+255)
  6034  000970  EC11  F016         	call	_set_time
  6035                           
  6036                           ;main.c: 399: LCD_CLS();
  6037  000974  ECCB  F016         	call	_LCD_CLS	;wreg free
  6038                           
  6039                           ;main.c: 400: SetOKPage();
  6040  000978  EC64  F013         	call	_SetOKPage	;wreg free
  6041                           
  6042                           ;main.c: 401: delay_n(6);
  6043  00097C  0E06               	movlw	6
  6044  00097E  EC23  F018         	call	_delay_n
  6045                           
  6046                           ;main.c: 402: LCD_CLS();
  6047  000982  ECCB  F016         	call	_LCD_CLS	;wreg free
  6048  000986                     l5860:
  6049                           
  6050                           ;main.c: 403: }
  6051                           ;main.c: 404: if(Key==7)
  6052  000986  0E07               	movlw	7
  6053  000988  0100               	movlb	0	; () banked
  6054  00098A  19A8               	xorwf	main@Key& (0+255),w,b
  6055  00098C  E106               	bnz	l5868
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;main.c: 405: {
  6059                           ;main.c: 406: Key=0;
  6060  00098E  6BA8               	clrf	main@Key& (0+255),b
  6061                           
  6062                           ;main.c: 407: Arrow_Ptr=0;
  6063  000990  6BA6               	clrf	main@Arrow_Ptr& (0+255),b
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;main.c: 408: Page=5;
  6067  000992  0E05               	movlw	5
  6068  000994  6FDE               	movwf	_Page& (0+255),b
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;main.c: 409: LCD_CLS();
  6072  000996  ECCB  F016         	call	_LCD_CLS	;wreg free
  6073  00099A                     l5868:
  6074                           
  6075                           ;main.c: 410: }
  6076                           ;main.c: 411: }
  6077                           ;main.c: 412: if(Page==5)
  6078  00099A  0E05               	movlw	5
  6079  00099C  0100               	movlb	0	; () banked
  6080  00099E  19DE               	xorwf	_Page& (0+255),w,b
  6081  0009A0  E163               	bnz	l5944
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;main.c: 413: {
  6085                           ;main.c: 414: MOTOR_BUTTON=0;
  6086  0009A2  9052               	bcf	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;main.c: 415: ResetPage(Arrow_Ptr);
  6090  0009A4  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  6091  0009A6  EC7B  F009         	call	_ResetPage
  6092                           
  6093                           ;main.c: 416: if(Key==3)
  6094  0009AA  0E03               	movlw	3
  6095  0009AC  0100               	movlb	0	; () banked
  6096  0009AE  19A8               	xorwf	main@Key& (0+255),w,b
  6097  0009B0  E109               	bnz	l5880
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;main.c: 417: {
  6101                           ;main.c: 418: Key=0;
  6102  0009B2  6BA8               	clrf	main@Key& (0+255),b
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;main.c: 419: Arrow_Ptr=++Arrow_Ptr % 3;
  6106  0009B4  0E03               	movlw	3
  6107  0009B6  6E1E               	movwf	___lbmod@divisor,c
  6108  0009B8  2BA6               	incf	main@Arrow_Ptr& (0+255),f,b
  6109  0009BA  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  6110  0009BC  EC7A  F017         	call	___lbmod
  6111  0009C0  0100               	movlb	0	; () banked
  6112  0009C2  6FA6               	movwf	main@Arrow_Ptr& (0+255),b
  6113  0009C4                     l5880:
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;main.c: 420: }
  6117                           ;main.c: 421: if(Key==4)
  6118  0009C4  0E04               	movlw	4
  6119  0009C6  19A8               	xorwf	main@Key& (0+255),w,b
  6120  0009C8  E146               	bnz	l5936
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;main.c: 422: {
  6124                           ;main.c: 423: if(Arrow_Ptr==0)
  6125  0009CA  51A6               	movf	main@Arrow_Ptr& (0+255),w,b
  6126  0009CC  E120               	bnz	l5914
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;main.c: 424: {
  6130                           ;main.c: 426: SetDefaultPara();
  6131  0009CE  EC21  F011         	call	_SetDefaultPara	;wreg free
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;main.c: 428: SetPara[0].duty=0x1e;SetPara[0].hits=0x64;
  6135  0009D2  0E1E               	movlw	30
  6136  0009D4  6FB3               	movwf	_SetPara& (0+255),b
  6137                           
  6138                           ; BSR set to: 0
  6139  0009D6  0E64               	movlw	100
  6140  0009D8  6FB4               	movwf	(_SetPara+1)& (0+255),b
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;main.c: 430: SetPara[1].duty=0x32;SetPara[1].hits=0x46;
  6144  0009DA  0E32               	movlw	50
  6145  0009DC  6FB5               	movwf	(_SetPara+2)& (0+255),b
  6146                           
  6147                           ; BSR set to: 0
  6148  0009DE  0E46               	movlw	70
  6149  0009E0  6FB6               	movwf	(_SetPara+3)& (0+255),b
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;main.c: 432: SetPara[2].duty=0x32;SetPara[2].hits=0x32;
  6153  0009E2  0E32               	movlw	50
  6154  0009E4  6FB7               	movwf	(_SetPara+4)& (0+255),b
  6155                           
  6156                           ; BSR set to: 0
  6157  0009E6  6FB8               	movwf	(_SetPara+5)& (0+255),b
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;main.c: 434: SetPara[3].duty=0x50;SetPara[3].hits=0x1e;
  6161  0009E8  0E50               	movlw	80
  6162  0009EA  6FB9               	movwf	(_SetPara+6)& (0+255),b
  6163                           
  6164                           ; BSR set to: 0
  6165  0009EC  0E1E               	movlw	30
  6166  0009EE  6FBA               	movwf	(_SetPara+7)& (0+255),b
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;main.c: 436: SetPara[4].duty=0x64;SetPara[4].hits=0x0f;
  6170  0009F0  0E64               	movlw	100
  6171  0009F2  6FBB               	movwf	(_SetPara+8)& (0+255),b
  6172                           
  6173                           ; BSR set to: 0
  6174  0009F4  0E0F               	movlw	15
  6175  0009F6  6FBC               	movwf	(_SetPara+9)& (0+255),b
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;main.c: 437: OpenTimes=OpenTimes_tmp=0;
  6179  0009F8  6BCA               	clrf	_OpenTimes_tmp& (0+255),b
  6180  0009FA  6BC9               	clrf	_OpenTimes& (0+255),b
  6181                           
  6182                           ;main.c: 440: LCD_CLS();
  6183  0009FC  ECCB  F016         	call	_LCD_CLS	;wreg free
  6184                           
  6185                           ;main.c: 441: SetOKPage();
  6186  000A00  EC64  F013         	call	_SetOKPage	;wreg free
  6187                           
  6188                           ;main.c: 442: delay_n(6);
  6189  000A04  0E06               	movlw	6
  6190  000A06  EC23  F018         	call	_delay_n
  6191                           
  6192                           ;main.c: 443: LCD_CLS();
  6193  000A0A  ECCB  F016         	call	_LCD_CLS	;wreg free
  6194  000A0E                     l5914:
  6195                           
  6196                           ;main.c: 444: }
  6197                           ;main.c: 445: if(Arrow_Ptr==1)
  6198  000A0E  0100               	movlb	0	; () banked
  6199  000A10  05A6               	decf	main@Arrow_Ptr& (0+255),w,b
  6200  000A12  E10C               	bnz	l5926
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;main.c: 446: {
  6204                           ;main.c: 447: extern unsigned char start[7];
  6205                           ;main.c: 448: set_time(start);
  6206  000A14  0EDF               	movlw	_start& (0+255)
  6207  000A16  EC11  F016         	call	_set_time
  6208                           
  6209                           ;main.c: 450: LCD_CLS();
  6210  000A1A  ECCB  F016         	call	_LCD_CLS	;wreg free
  6211                           
  6212                           ;main.c: 451: SetOKPage();
  6213  000A1E  EC64  F013         	call	_SetOKPage	;wreg free
  6214                           
  6215                           ;main.c: 452: delay_n(6);
  6216  000A22  0E06               	movlw	6
  6217  000A24  EC23  F018         	call	_delay_n
  6218                           
  6219                           ;main.c: 453: LCD_CLS();
  6220  000A28  ECCB  F016         	call	_LCD_CLS	;wreg free
  6221  000A2C                     l5926:
  6222                           
  6223                           ;main.c: 454: }
  6224                           ;main.c: 455: if(Arrow_Ptr==2)
  6225  000A2C  0E02               	movlw	2
  6226  000A2E  0100               	movlb	0	; () banked
  6227  000A30  19A6               	xorwf	main@Arrow_Ptr& (0+255),w,b
  6228  000A32  E111               	bnz	l5936
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;main.c: 456: {
  6232                           ;main.c: 458: DataClean(0x10,0x8ff);
  6233  000A34  6A27               	clrf	DataClean@b_add+1,c
  6234  000A36  0E10               	movlw	16
  6235  000A38  6E26               	movwf	DataClean@b_add,c
  6236  000A3A  0E08               	movlw	8
  6237  000A3C  6E29               	movwf	DataClean@e_add+1,c
  6238  000A3E  6828               	setf	DataClean@e_add,c
  6239  000A40  EC64  F016         	call	_DataClean	;wreg free
  6240                           
  6241                           ;main.c: 460: LCD_CLS();
  6242  000A44  ECCB  F016         	call	_LCD_CLS	;wreg free
  6243                           
  6244                           ;main.c: 461: SetOKPage();
  6245  000A48  EC64  F013         	call	_SetOKPage	;wreg free
  6246                           
  6247                           ;main.c: 462: delay_n(6);
  6248  000A4C  0E06               	movlw	6
  6249  000A4E  EC23  F018         	call	_delay_n
  6250                           
  6251                           ;main.c: 463: LCD_CLS();
  6252  000A52  ECCB  F016         	call	_LCD_CLS	;wreg free
  6253  000A56                     l5936:
  6254                           
  6255                           ;main.c: 464: }
  6256                           ;main.c: 465: }
  6257                           ;main.c: 466: if(Key==7)
  6258  000A56  0E07               	movlw	7
  6259  000A58  0100               	movlb	0	; () banked
  6260  000A5A  19A8               	xorwf	main@Key& (0+255),w,b
  6261  000A5C  E105               	bnz	l5944
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;main.c: 469: Arrow_Ptr=0;
  6265  000A5E  6BA6               	clrf	main@Arrow_Ptr& (0+255),b
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;main.c: 470: Page=1;
  6269  000A60  0E01               	movlw	1
  6270  000A62  6FDE               	movwf	_Page& (0+255),b
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;main.c: 471: LCD_CLS();
  6274  000A64  ECCB  F016         	call	_LCD_CLS	;wreg free
  6275  000A68                     l5944:
  6276                           
  6277                           ;main.c: 472: }
  6278                           ;main.c: 473: }
  6279                           ;main.c: 474: if(MOTOR_BUTTON==1 && OverTEMP==0)
  6280  000A68  B052               	btfsc	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
  6281  000A6A  B452               	btfsc	_OverTEMP/(0+8),_OverTEMP& (0+7),c
  6282  000A6C  D012               	goto	l770
  6283                           
  6284                           ;main.c: 475: {
  6285                           ;main.c: 476: unsigned char change=(PORTA >>2) & 0x07;
  6286  000A6E  4080               	rrncf	3968,w,c	;volatile
  6287  000A70  42E8               	rrncf	wreg,f,c
  6288  000A72  0B3F               	andlw	63
  6289  000A74  0B07               	andlw	7
  6290  000A76  0100               	movlb	0	; () banked
  6291  000A78  6FA3               	movwf	main@change& (0+255),b
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;main.c: 477: if(MOTOR_DIR==0)
  6295  000A7A  B252               	btfsc	_MOTOR_DIR/(0+8),_MOTOR_DIR& (0+7),c
  6296  000A7C  D003               	goto	l5954
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;main.c: 478: {
  6300                           ;main.c: 479: OVDCOND=STATE_HALL[change-0x01];
  6301  000A7E  51A3               	movf	main@change& (0+255),w,b
  6302  000A80  0FD1               	addlw	low (_STATE_HALL+255)
  6303  000A82  D002               	goto	L1
  6304  000A84                     l5954:
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;main.c: 481: else
  6308                           ;main.c: 482: {
  6309                           ;main.c: 483: OVDCOND=STATE_HALL_BACK[change-0x01];
  6310  000A84  51A3               	movf	main@change& (0+255),w,b
  6311  000A86  0FD7               	addlw	low (_STATE_HALL_BACK+255)
  6312  000A88                     L1:
  6313  000A88  6ED9               	movwf	fsr2l,c
  6314  000A8A  6ADA               	clrf	fsr2h,c
  6315  000A8C  50DF               	movf	indf2,w,c
  6316  000A8E  6E6B               	movwf	3947,c	;volatile
  6317  000A90  D004               	goto	l773
  6318  000A92                     l770:
  6319                           
  6320                           ;main.c: 486: else
  6321                           ;main.c: 487: {
  6322                           ;main.c: 488: Speed=0;
  6323  000A92  0100               	movlb	0	; () banked
  6324  000A94  6BC5               	clrf	_Speed& (0+255),b
  6325  000A96  6BC6               	clrf	(_Speed+1)& (0+255),b
  6326                           
  6327                           ;main.c: 489: OVDCOND=0x00;
  6328  000A98  6A6B               	clrf	3947,c	;volatile
  6329  000A9A                     l773:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;main.c: 490: }
  6333                           ;main.c: 491: if(RC3==0)
  6334  000A9A  B682               	btfsc	3970,3,c	;volatile
  6335  000A9C  D4CD               	goto	l5574
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;main.c: 492: {
  6339                           ;main.c: 493: UART_INIT();
  6340  000A9E  ECD0  F017         	call	_UART_INIT	;wreg free
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;main.c: 494: SSPEN=0;
  6344  000AA2  9AC6               	bcf	4038,5,c	;volatile
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;main.c: 495: Display_Menu();
  6348  000AA4  ECC4  F014         	call	_Display_Menu	;wreg free
  6349                           
  6350                           ;main.c: 496: RCIE=1;RCIF=0;
  6351  000AA8  8A9D               	bsf	3997,5,c	;volatile
  6352  000AAA  9A9E               	bcf	3998,5,c	;volatile
  6353  000AAC  D4C5               	goto	l5574
  6354  000AAE                     __end_of_main:
  6355                           	opt stack 0
  6356                           tblptru	equ	0xFF8
  6357                           tblptrh	equ	0xFF7
  6358                           tblptrl	equ	0xFF6
  6359                           tablat	equ	0xFF5
  6360                           prodl	equ	0xFF3
  6361                           intcon	equ	0xFF2
  6362                           postinc0	equ	0xFEE
  6363                           wreg	equ	0xFE8
  6364                           postinc1	equ	0xFE6
  6365                           postdec1	equ	0xFE5
  6366                           fsr1h	equ	0xFE2
  6367                           fsr1l	equ	0xFE1
  6368                           indf2	equ	0xFDF
  6369                           postinc2	equ	0xFDE
  6370                           postdec2	equ	0xFDD
  6371                           fsr2h	equ	0xFDA
  6372                           fsr2l	equ	0xFD9
  6373                           status	equ	0xFD8
  6374                           
  6375 ;; *************** function _set_time *****************
  6376 ;; Defined at:
  6377 ;;		line 42 in file "DS1302.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  date            1    wreg     PTR unsigned char 
  6380 ;;		 -> start(7), table(7), 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  date            1   32[COMRAM] PTR unsigned char 
  6383 ;;		 -> start(7), table(7), 
  6384 ;;  i               2   33[COMRAM] int 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : F/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6394 ;;      Params:         0       0       0       0
  6395 ;;      Locals:         3       0       0       0
  6396 ;;      Temps:          0       0       0       0
  6397 ;;      Totals:         3       0       0       0
  6398 ;;Total ram usage:        3 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    5
  6401 ;; This function calls:
  6402 ;;		_write_cmd
  6403 ;;		_write_data
  6404 ;; This function is called by:
  6405 ;;		_main
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text1
  6410  002C22                     __ptext1:
  6411                           	opt stack 0
  6412  002C22                     _set_time:
  6413                           	opt stack 25
  6414                           
  6415                           ;incstack = 0
  6416                           ;set_time@date stored from wreg
  6417  002C22  6E21               	movwf	set_time@date,c
  6418                           
  6419                           ;DS1302.c: 44: int i;
  6420                           ;DS1302.c: 45: RE2=1;
  6421  002C24  8484               	bsf	3972,2,c	;volatile
  6422                           
  6423                           ;DS1302.c: 46: write_cmd(0xbe);
  6424  002C26  0EBE               	movlw	190
  6425  002C28  EC0F  F017         	call	_write_cmd
  6426                           
  6427                           ;DS1302.c: 47: for(i=0;i<7;i++)
  6428  002C2C  6A22               	clrf	set_time@i,c
  6429  002C2E  6A23               	clrf	set_time@i+1,c
  6430  002C30                     l5410:
  6431                           
  6432                           ;DS1302.c: 48: {
  6433                           ;DS1302.c: 49: write_data(date[i]);
  6434  002C30  5021               	movf	set_time@date,w,c
  6435  002C32  2422               	addwf	set_time@i,w,c
  6436  002C34  6ED9               	movwf	fsr2l,c
  6437  002C36  6ADA               	clrf	fsr2h,c
  6438  002C38  50DF               	movf	indf2,w,c
  6439  002C3A  ECF9  F016         	call	_write_data
  6440  002C3E  4A22               	infsnz	set_time@i,f,c
  6441  002C40  2A23               	incf	set_time@i+1,f,c
  6442  002C42  BE23               	btfsc	set_time@i+1,7,c
  6443  002C44  D7F5               	goto	l5410
  6444  002C46  5023               	movf	set_time@i+1,w,c
  6445  002C48  E103               	bnz	u3930
  6446  002C4A  0E07               	movlw	7
  6447  002C4C  5C22               	subwf	set_time@i,w,c
  6448  002C4E  E3F0               	bnc	l5410
  6449  002C50                     u3930:
  6450                           
  6451                           ;DS1302.c: 50: }
  6452                           ;DS1302.c: 51: write_cmd(0x00);
  6453  002C50  0E00               	movlw	0
  6454  002C52  EC0F  F017         	call	_write_cmd
  6455                           
  6456                           ;DS1302.c: 52: RE2=0;
  6457  002C56  9484               	bcf	3972,2,c	;volatile
  6458  002C58  0012               	return		;funcret
  6459  002C5A                     __end_of_set_time:
  6460                           	opt stack 0
  6461                           tblptru	equ	0xFF8
  6462                           tblptrh	equ	0xFF7
  6463                           tblptrl	equ	0xFF6
  6464                           tablat	equ	0xFF5
  6465                           prodl	equ	0xFF3
  6466                           intcon	equ	0xFF2
  6467                           postinc0	equ	0xFEE
  6468                           wreg	equ	0xFE8
  6469                           postinc1	equ	0xFE6
  6470                           postdec1	equ	0xFE5
  6471                           fsr1h	equ	0xFE2
  6472                           fsr1l	equ	0xFE1
  6473                           indf2	equ	0xFDF
  6474                           postinc2	equ	0xFDE
  6475                           postdec2	equ	0xFDD
  6476                           fsr2h	equ	0xFDA
  6477                           fsr2l	equ	0xFD9
  6478                           status	equ	0xFD8
  6479                           
  6480 ;; *************** function _read_F *****************
  6481 ;; Defined at:
  6482 ;;		line 39 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  address         2   30[COMRAM] unsigned int 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  H               1   34[COMRAM] unsigned char 
  6487 ;;  L               1   33[COMRAM] unsigned char 
  6488 ;;  t               1   32[COMRAM] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      unsigned char 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : F/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6498 ;;      Params:         2       0       0       0
  6499 ;;      Locals:         3       0       0       0
  6500 ;;      Temps:          0       0       0       0
  6501 ;;      Totals:         5       0       0       0
  6502 ;;Total ram usage:        5 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    5
  6505 ;; This function calls:
  6506 ;;		_read_spi
  6507 ;;		_write_spi
  6508 ;; This function is called by:
  6509 ;;		_main
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text2
  6514  002DC6                     __ptext2:
  6515                           	opt stack 0
  6516  002DC6                     _read_F:
  6517                           	opt stack 25
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;FRAM.c: 41: unsigned char t;
  6521                           ;FRAM.c: 42: unsigned char L=0x00;
  6522                           
  6523                           ;incstack = 0
  6524  002DC6  6A22               	clrf	read_F@L,c
  6525                           
  6526                           ;FRAM.c: 43: unsigned char H=0x00;
  6527  002DC8  6A23               	clrf	read_F@H,c
  6528                           
  6529                           ;FRAM.c: 44: H = (unsigned char)(address>> 8);
  6530  002DCA  C020  F023         	movff	read_F@address+1,read_F@H
  6531                           
  6532                           ;FRAM.c: 45: L = (unsigned char)(address & 0x00ff);
  6533  002DCE  C01F  F022         	movff	read_F@address,read_F@L
  6534                           
  6535                           ;FRAM.c: 46: RD3=0;
  6536  002DD2  9683               	bcf	3971,3,c	;volatile
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;FRAM.c: 47: write_spi(0x03);
  6540  002DD4  0E03               	movlw	3
  6541  002DD6  EC6D  F018         	call	_write_spi
  6542                           
  6543                           ;FRAM.c: 48: write_spi(H);
  6544  002DDA  5023               	movf	read_F@H,w,c
  6545  002DDC  EC6D  F018         	call	_write_spi
  6546                           
  6547                           ;FRAM.c: 49: write_spi(L);
  6548  002DE0  5022               	movf	read_F@L,w,c
  6549  002DE2  EC6D  F018         	call	_write_spi
  6550                           
  6551                           ;FRAM.c: 50: t= read_spi();
  6552  002DE6  EC3F  F018         	call	_read_spi	;wreg free
  6553  002DEA  6E21               	movwf	read_F@t,c
  6554                           
  6555                           ;FRAM.c: 51: RD3=1;
  6556  002DEC  8683               	bsf	3971,3,c	;volatile
  6557                           
  6558                           ;FRAM.c: 52: return t;
  6559  002DEE  5021               	movf	read_F@t,w,c
  6560  002DF0  0012               	return		;funcret
  6561  002DF2                     __end_of_read_F:
  6562                           	opt stack 0
  6563                           tblptru	equ	0xFF8
  6564                           tblptrh	equ	0xFF7
  6565                           tblptrl	equ	0xFF6
  6566                           tablat	equ	0xFF5
  6567                           prodl	equ	0xFF3
  6568                           intcon	equ	0xFF2
  6569                           postinc0	equ	0xFEE
  6570                           wreg	equ	0xFE8
  6571                           postinc1	equ	0xFE6
  6572                           postdec1	equ	0xFE5
  6573                           fsr1h	equ	0xFE2
  6574                           fsr1l	equ	0xFE1
  6575                           indf2	equ	0xFDF
  6576                           postinc2	equ	0xFDE
  6577                           postdec2	equ	0xFDD
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582 ;; *************** function _read_spi *****************
  6583 ;; Defined at:
  6584 ;;		line 19 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/SPI.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  t               1   29[COMRAM] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      unsigned char 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6598 ;;      Params:         0       0       0       0
  6599 ;;      Locals:         1       0       0       0
  6600 ;;      Temps:          0       0       0       0
  6601 ;;      Totals:         1       0       0       0
  6602 ;;Total ram usage:        1 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    4
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_read_F
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text3
  6613  00307E                     __ptext3:
  6614                           	opt stack 0
  6615  00307E                     _read_spi:
  6616                           	opt stack 25
  6617                           
  6618                           ;SPI.c: 21: unsigned char t;
  6619                           ;SPI.c: 22: SSPBUF=0xff;
  6620                           
  6621                           ;incstack = 0
  6622  00307E  68C9               	setf	4041,c	;volatile
  6623  003080                     l458:
  6624  003080  A69E               	btfss	3998,3,c	;volatile
  6625  003082  D7FE               	goto	l458
  6626                           
  6627                           ;SPI.c: 24: SSPIF=0;
  6628  003084  969E               	bcf	3998,3,c	;volatile
  6629                           
  6630                           ;SPI.c: 25: t=SSPBUF;
  6631  003086  CFC9 F01E          	movff	4041,read_spi@t	;volatile
  6632                           
  6633                           ;SPI.c: 26: return t;
  6634  00308A  501E               	movf	read_spi@t,w,c
  6635  00308C  0012               	return		;funcret
  6636  00308E                     __end_of_read_spi:
  6637                           	opt stack 0
  6638                           tblptru	equ	0xFF8
  6639                           tblptrh	equ	0xFF7
  6640                           tblptrl	equ	0xFF6
  6641                           tablat	equ	0xFF5
  6642                           prodl	equ	0xFF3
  6643                           intcon	equ	0xFF2
  6644                           postinc0	equ	0xFEE
  6645                           wreg	equ	0xFE8
  6646                           postinc1	equ	0xFE6
  6647                           postdec1	equ	0xFE5
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           indf2	equ	0xFDF
  6651                           postinc2	equ	0xFDE
  6652                           postdec2	equ	0xFDD
  6653                           fsr2h	equ	0xFDA
  6654                           fsr2l	equ	0xFD9
  6655                           status	equ	0xFD8
  6656                           
  6657 ;; *************** function _readAD *****************
  6658 ;; Defined at:
  6659 ;;		line 29 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/AD.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  tmp             3    9[BANK0 ] float 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : F/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6673 ;;      Params:         0       0       0       0
  6674 ;;      Locals:         0       3       0       0
  6675 ;;      Temps:          0       0       0       0
  6676 ;;      Totals:         0       3       0       0
  6677 ;;Total ram usage:        3 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    7
  6680 ;; This function calls:
  6681 ;;		___awtoft
  6682 ;;		___ftadd
  6683 ;;		___ftmul
  6684 ;;		___ftsub
  6685 ;;		___lbtoft
  6686 ;; This function is called by:
  6687 ;;		_main
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text4
  6692  0019F2                     __ptext4:
  6693                           	opt stack 0
  6694  0019F2                     _readAD:
  6695                           	opt stack 23
  6696  0019F2                     l62:
  6697                           
  6698                           ; BSR set to: 0
  6699  0019F2  AC9E               	btfss	3998,6,c	;volatile
  6700  0019F4  D7FE               	goto	l62
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;AD.c: 33: float tmp=1.25*(ADRESH & 0x03)+0.0048*ADRESL;
  6704  0019F6  6A2D               	clrf	___ftmul@f2,c
  6705  0019F8  0EA0               	movlw	160
  6706  0019FA  6E2E               	movwf	___ftmul@f2+1,c
  6707  0019FC  0E3F               	movlw	63
  6708  0019FE  6E2F               	movwf	___ftmul@f2+2,c
  6709  001A00  50C4               	movf	4036,w,c	;volatile
  6710  001A02  0B03               	andlw	3
  6711  001A04  6E26               	movwf	___awtoft@c,c
  6712  001A06  6A27               	clrf	___awtoft@c+1,c
  6713  001A08  EC49  F016         	call	___awtoft	;wreg free
  6714  001A0C  C026  F02A         	movff	?___awtoft,___ftmul@f1
  6715  001A10  C027  F02B         	movff	?___awtoft+1,___ftmul@f1+1
  6716  001A14  C028  F02C         	movff	?___awtoft+2,___ftmul@f1+2
  6717  001A18  EC2C  F00F         	call	___ftmul	;wreg free
  6718  001A1C  C02A  F038         	movff	?___ftmul,___ftadd@f1
  6719  001A20  C02B  F039         	movff	?___ftmul+1,___ftadd@f1+1
  6720  001A24  C02C  F03A         	movff	?___ftmul+2,___ftadd@f1+2
  6721  001A28  0E49               	movlw	73
  6722  001A2A  6E2D               	movwf	___ftmul@f2,c
  6723  001A2C  0E9D               	movlw	157
  6724  001A2E  6E2E               	movwf	___ftmul@f2+1,c
  6725  001A30  0E3B               	movlw	59
  6726  001A32  6E2F               	movwf	___ftmul@f2+2,c
  6727  001A34  50C3               	movf	4035,w,c	;volatile
  6728  001A36  EC8D  F017         	call	___lbtoft
  6729  001A3A  C026  F02A         	movff	?___lbtoft,___ftmul@f1
  6730  001A3E  C027  F02B         	movff	?___lbtoft+1,___ftmul@f1+1
  6731  001A42  C028  F02C         	movff	?___lbtoft+2,___ftmul@f1+2
  6732  001A46  EC2C  F00F         	call	___ftmul	;wreg free
  6733  001A4A  C02A  F03B         	movff	?___ftmul,___ftadd@f2
  6734  001A4E  C02B  F03C         	movff	?___ftmul+1,___ftadd@f2+1
  6735  001A52  C02C  F03D         	movff	?___ftmul+2,___ftadd@f2+2
  6736  001A56  EC4A  F00C         	call	___ftadd	;wreg free
  6737  001A5A  C038  F069         	movff	?___ftadd,readAD@tmp
  6738  001A5E  C039  F06A         	movff	?___ftadd+1,readAD@tmp+1
  6739  001A62  C03A  F06B         	movff	?___ftadd+2,readAD@tmp+2
  6740                           
  6741                           ;AD.c: 34: AD_RES=(1.25*(ADRESH & 0x03)+0.0048*ADRESL);
  6742  001A66  6A2D               	clrf	___ftmul@f2,c
  6743  001A68  0EA0               	movlw	160
  6744  001A6A  6E2E               	movwf	___ftmul@f2+1,c
  6745  001A6C  0E3F               	movlw	63
  6746  001A6E  6E2F               	movwf	___ftmul@f2+2,c
  6747  001A70  50C4               	movf	4036,w,c	;volatile
  6748  001A72  0B03               	andlw	3
  6749  001A74  6E26               	movwf	___awtoft@c,c
  6750  001A76  6A27               	clrf	___awtoft@c+1,c
  6751  001A78  EC49  F016         	call	___awtoft	;wreg free
  6752  001A7C  C026  F02A         	movff	?___awtoft,___ftmul@f1
  6753  001A80  C027  F02B         	movff	?___awtoft+1,___ftmul@f1+1
  6754  001A84  C028  F02C         	movff	?___awtoft+2,___ftmul@f1+2
  6755  001A88  EC2C  F00F         	call	___ftmul	;wreg free
  6756  001A8C  C02A  F038         	movff	?___ftmul,___ftadd@f1
  6757  001A90  C02B  F039         	movff	?___ftmul+1,___ftadd@f1+1
  6758  001A94  C02C  F03A         	movff	?___ftmul+2,___ftadd@f1+2
  6759  001A98  0E49               	movlw	73
  6760  001A9A  6E2D               	movwf	___ftmul@f2,c
  6761  001A9C  0E9D               	movlw	157
  6762  001A9E  6E2E               	movwf	___ftmul@f2+1,c
  6763  001AA0  0E3B               	movlw	59
  6764  001AA2  6E2F               	movwf	___ftmul@f2+2,c
  6765  001AA4  50C3               	movf	4035,w,c	;volatile
  6766  001AA6  EC8D  F017         	call	___lbtoft
  6767  001AAA  C026  F02A         	movff	?___lbtoft,___ftmul@f1
  6768  001AAE  C027  F02B         	movff	?___lbtoft+1,___ftmul@f1+1
  6769  001AB2  C028  F02C         	movff	?___lbtoft+2,___ftmul@f1+2
  6770  001AB6  EC2C  F00F         	call	___ftmul	;wreg free
  6771  001ABA  C02A  F03B         	movff	?___ftmul,___ftadd@f2
  6772  001ABE  C02B  F03C         	movff	?___ftmul+1,___ftadd@f2+1
  6773  001AC2  C02C  F03D         	movff	?___ftmul+2,___ftadd@f2+2
  6774  001AC6  EC4A  F00C         	call	___ftadd	;wreg free
  6775  001ACA  C038  F0BD         	movff	?___ftadd,_AD_RES
  6776  001ACE  C039  F0BE         	movff	?___ftadd+1,_AD_RES+1
  6777  001AD2  C03A  F0BF         	movff	?___ftadd+2,_AD_RES+2
  6778                           
  6779                           ;AD.c: 35: AD_RES=AD_RES*14.208;
  6780  001AD6  C0BD  F02A         	movff	_AD_RES,___ftmul@f1
  6781  001ADA  C0BE  F02B         	movff	_AD_RES+1,___ftmul@f1+1
  6782  001ADE  C0BF  F02C         	movff	_AD_RES+2,___ftmul@f1+2
  6783  001AE2  0E54               	movlw	84
  6784  001AE4  6E2D               	movwf	___ftmul@f2,c
  6785  001AE6  0E63               	movlw	99
  6786  001AE8  6E2E               	movwf	___ftmul@f2+1,c
  6787  001AEA  0E41               	movlw	65
  6788  001AEC  6E2F               	movwf	___ftmul@f2+2,c
  6789  001AEE  EC2C  F00F         	call	___ftmul	;wreg free
  6790  001AF2  C02A  F0BD         	movff	?___ftmul,_AD_RES
  6791  001AF6  C02B  F0BE         	movff	?___ftmul+1,_AD_RES+1
  6792  001AFA  C02C  F0BF         	movff	?___ftmul+2,_AD_RES+2
  6793                           
  6794                           ;AD.c: 40: {
  6795                           ;AD.c: 43: }
  6796                           ;AD.c: 45: {
  6797                           ;AD.c: 47: }
  6798                           ;AD.c: 48: TEMP_VALUE=182.25617-176.2632*tmp;
  6799  001AFE  0E42               	movlw	66
  6800  001B00  0100               	movlb	0	; () banked
  6801  001B02  6F63               	movwf	___ftsub@f1& (0+255),b
  6802  001B04  0E36               	movlw	54
  6803  001B06  6F64               	movwf	(___ftsub@f1+1)& (0+255),b
  6804  001B08  0E43               	movlw	67
  6805  001B0A  6F65               	movwf	(___ftsub@f1+2)& (0+255),b
  6806  001B0C  6E2D               	movwf	___ftmul@f2,c
  6807  001B0E  0E30               	movlw	48
  6808  001B10  6E2E               	movwf	___ftmul@f2+1,c
  6809  001B12  0E43               	movlw	67
  6810  001B14  6E2F               	movwf	___ftmul@f2+2,c
  6811  001B16  C069  F02A         	movff	readAD@tmp,___ftmul@f1
  6812  001B1A  C06A  F02B         	movff	readAD@tmp+1,___ftmul@f1+1
  6813  001B1E  C06B  F02C         	movff	readAD@tmp+2,___ftmul@f1+2
  6814  001B22  EC2C  F00F         	call	___ftmul	;wreg free
  6815  001B26  C02A  F066         	movff	?___ftmul,___ftsub@f2
  6816  001B2A  C02B  F067         	movff	?___ftmul+1,___ftsub@f2+1
  6817  001B2E  C02C  F068         	movff	?___ftmul+2,___ftsub@f2+2
  6818  001B32  EC2D  F016         	call	___ftsub	;wreg free
  6819  001B36  C063  F0C0         	movff	?___ftsub,_TEMP_VALUE
  6820  001B3A  C064  F0C1         	movff	?___ftsub+1,_TEMP_VALUE+1
  6821  001B3E  C065  F0C2         	movff	?___ftsub+2,_TEMP_VALUE+2
  6822                           
  6823                           ;AD.c: 49: ADIF=0;
  6824  001B42  9C9E               	bcf	3998,6,c	;volatile
  6825  001B44  0012               	return		;funcret
  6826  001B46                     __end_of_readAD:
  6827                           	opt stack 0
  6828                           tblptru	equ	0xFF8
  6829                           tblptrh	equ	0xFF7
  6830                           tblptrl	equ	0xFF6
  6831                           tablat	equ	0xFF5
  6832                           prodl	equ	0xFF3
  6833                           intcon	equ	0xFF2
  6834                           postinc0	equ	0xFEE
  6835                           wreg	equ	0xFE8
  6836                           postinc1	equ	0xFE6
  6837                           postdec1	equ	0xFE5
  6838                           fsr1h	equ	0xFE2
  6839                           fsr1l	equ	0xFE1
  6840                           indf2	equ	0xFDF
  6841                           postinc2	equ	0xFDE
  6842                           postdec2	equ	0xFDD
  6843                           fsr2h	equ	0xFDA
  6844                           fsr2l	equ	0xFD9
  6845                           status	equ	0xFD8
  6846                           
  6847 ;; *************** function ___ftsub *****************
  6848 ;; Defined at:
  6849 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftsub.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  f1              3    3[BANK0 ] float 
  6852 ;;  f2              3    6[BANK0 ] float 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  3    3[BANK0 ] float 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0, cstack
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6864 ;;      Params:         0       6       0       0
  6865 ;;      Locals:         0       0       0       0
  6866 ;;      Temps:          0       0       0       0
  6867 ;;      Totals:         0       6       0       0
  6868 ;;Total ram usage:        6 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    6
  6871 ;; This function calls:
  6872 ;;		___ftadd
  6873 ;; This function is called by:
  6874 ;;		_readAD
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text5
  6879  002C5A                     __ptext5:
  6880                           	opt stack 0
  6881  002C5A                     ___ftsub:
  6882                           	opt stack 23
  6883                           
  6884                           ;incstack = 0
  6885  002C5A  0100               	movlb	0	; () banked
  6886  002C5C  5166               	movf	___ftsub@f2& (0+255),w,b
  6887  002C5E  1167               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  6888  002C60  1168               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  6889  002C62  E002               	bz	l4524
  6890                           
  6891                           ; BSR set to: 0
  6892  002C64  0E80               	movlw	128
  6893  002C66  1B68               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6894  002C68                     l4524:
  6895                           
  6896                           ; BSR set to: 0
  6897  002C68  C063  F038         	movff	___ftsub@f1,___ftadd@f1
  6898  002C6C  C064  F039         	movff	___ftsub@f1+1,___ftadd@f1+1
  6899  002C70  C065  F03A         	movff	___ftsub@f1+2,___ftadd@f1+2
  6900  002C74  C066  F03B         	movff	___ftsub@f2,___ftadd@f2
  6901  002C78  C067  F03C         	movff	___ftsub@f2+1,___ftadd@f2+1
  6902  002C7C  C068  F03D         	movff	___ftsub@f2+2,___ftadd@f2+2
  6903  002C80  EC4A  F00C         	call	___ftadd	;wreg free
  6904  002C84  C038  F063         	movff	?___ftadd,?___ftsub
  6905  002C88  C039  F064         	movff	?___ftadd+1,?___ftsub+1
  6906  002C8C  C03A  F065         	movff	?___ftadd+2,?___ftsub+2
  6907  002C90  0012               	return		;funcret
  6908  002C92                     __end_of___ftsub:
  6909                           	opt stack 0
  6910                           tblptru	equ	0xFF8
  6911                           tblptrh	equ	0xFF7
  6912                           tblptrl	equ	0xFF6
  6913                           tablat	equ	0xFF5
  6914                           prodl	equ	0xFF3
  6915                           intcon	equ	0xFF2
  6916                           postinc0	equ	0xFEE
  6917                           wreg	equ	0xFE8
  6918                           postinc1	equ	0xFE6
  6919                           postdec1	equ	0xFE5
  6920                           fsr1h	equ	0xFE2
  6921                           fsr1l	equ	0xFE1
  6922                           indf2	equ	0xFDF
  6923                           postinc2	equ	0xFDE
  6924                           postdec2	equ	0xFDD
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function ___ftadd *****************
  6930 ;; Defined at:
  6931 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  f1              3   55[COMRAM] float 
  6934 ;;  f2              3   58[COMRAM] float 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  exp1            1    2[BANK0 ] unsigned char 
  6937 ;;  exp2            1    1[BANK0 ] unsigned char 
  6938 ;;  sign            1    0[BANK0 ] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  3   55[COMRAM] float 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0, cstack
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6948 ;;      Params:         6       0       0       0
  6949 ;;      Locals:         0       3       0       0
  6950 ;;      Temps:          3       0       0       0
  6951 ;;      Totals:         9       3       0       0
  6952 ;;Total ram usage:       12 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    5
  6955 ;; This function calls:
  6956 ;;		___ftpack
  6957 ;; This function is called by:
  6958 ;;		_readAD
  6959 ;;		_main
  6960 ;;		___ftsub
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text6
  6965  001894                     __ptext6:
  6966                           	opt stack 0
  6967  001894                     ___ftadd:
  6968                           	opt stack 23
  6969                           
  6970                           ;incstack = 0
  6971  001894  C03A  F03E         	movff	___ftadd@f1+2,??___ftadd
  6972  001898  6A3F               	clrf	(??___ftadd+1)& (0+255),c
  6973  00189A  6A40               	clrf	(??___ftadd+2)& (0+255),c
  6974  00189C  3439               	rlcf	___ftadd@f1+1,w,c
  6975  00189E  363E               	rlcf	??___ftadd& (0+255),f,c
  6976  0018A0  E301               	bnc	u2611
  6977  0018A2  803F               	bsf	(??___ftadd+1)& (0+255),0,c
  6978  0018A4                     u2611:
  6979  0018A4  503E               	movf	??___ftadd,w,c
  6980  0018A6  0100               	movlb	0	; () banked
  6981  0018A8  6F62               	movwf	___ftadd@exp1& (0+255),b
  6982  0018AA  C03D  F03E         	movff	___ftadd@f2+2,??___ftadd
  6983  0018AE  6A3F               	clrf	(??___ftadd+1)& (0+255),c
  6984  0018B0  6A40               	clrf	(??___ftadd+2)& (0+255),c
  6985  0018B2  343C               	rlcf	___ftadd@f2+1,w,c
  6986  0018B4  363E               	rlcf	??___ftadd& (0+255),f,c
  6987  0018B6  E301               	bnc	u2621
  6988  0018B8  803F               	bsf	(??___ftadd+1)& (0+255),0,c
  6989  0018BA                     u2621:
  6990  0018BA  503E               	movf	??___ftadd,w,c
  6991  0018BC  6F61               	movwf	___ftadd@exp2& (0+255),b
  6992                           
  6993                           ; BSR set to: 0
  6994  0018BE  5162               	movf	___ftadd@exp1& (0+255),w,b
  6995  0018C0  E009               	bz	l1251
  6996                           
  6997                           ; BSR set to: 0
  6998  0018C2  5161               	movf	___ftadd@exp2& (0+255),w,b
  6999  0018C4  5D62               	subwf	___ftadd@exp1& (0+255),w,b
  7000  0018C6  E20D               	bc	l4026
  7001                           
  7002                           ; BSR set to: 0
  7003  0018C8  5162               	movf	___ftadd@exp1& (0+255),w,b
  7004  0018CA  5D61               	subwf	___ftadd@exp2& (0+255),w,b
  7005  0018CC  6E3E               	movwf	??___ftadd& (0+255),c
  7006  0018CE  0E18               	movlw	24
  7007  0018D0  643E               	cpfsgt	??___ftadd,c
  7008  0018D2  D007               	goto	l4026
  7009  0018D4                     l1251:
  7010                           
  7011                           ; BSR set to: 0
  7012  0018D4  C03B  F038         	movff	___ftadd@f2,?___ftadd
  7013  0018D8  C03C  F039         	movff	___ftadd@f2+1,?___ftadd+1
  7014  0018DC  C03D  F03A         	movff	___ftadd@f2+2,?___ftadd+2
  7015  0018E0  0012               	return	
  7016  0018E2                     l4026:
  7017                           
  7018                           ; BSR set to: 0
  7019  0018E2  5161               	movf	___ftadd@exp2& (0+255),w,b
  7020  0018E4  E009               	bz	l1255
  7021                           
  7022                           ; BSR set to: 0
  7023  0018E6  5162               	movf	___ftadd@exp1& (0+255),w,b
  7024  0018E8  5D61               	subwf	___ftadd@exp2& (0+255),w,b
  7025  0018EA  E20D               	bc	l4032
  7026                           
  7027                           ; BSR set to: 0
  7028  0018EC  5161               	movf	___ftadd@exp2& (0+255),w,b
  7029  0018EE  5D62               	subwf	___ftadd@exp1& (0+255),w,b
  7030  0018F0  6E3E               	movwf	??___ftadd& (0+255),c
  7031  0018F2  0E18               	movlw	24
  7032  0018F4  643E               	cpfsgt	??___ftadd,c
  7033  0018F6  D007               	goto	l4032
  7034  0018F8                     l1255:
  7035                           
  7036                           ; BSR set to: 0
  7037  0018F8  C038  F038         	movff	___ftadd@f1,?___ftadd
  7038  0018FC  C039  F039         	movff	___ftadd@f1+1,?___ftadd+1
  7039  001900  C03A  F03A         	movff	___ftadd@f1+2,?___ftadd+2
  7040  001904  0012               	return	
  7041  001906                     l4032:
  7042                           
  7043                           ; BSR set to: 0
  7044  001906  0E06               	movlw	6
  7045  001908  6F60               	movwf	___ftadd@sign& (0+255),b
  7046                           
  7047                           ; BSR set to: 0
  7048  00190A  BE3A               	btfsc	___ftadd@f1+2,7,c
  7049                           
  7050                           ; BSR set to: 0
  7051  00190C  8F60               	bsf	___ftadd@sign& (0+255),7,b
  7052                           
  7053                           ; BSR set to: 0
  7054  00190E  BE3D               	btfsc	___ftadd@f2+2,7,c
  7055                           
  7056                           ; BSR set to: 0
  7057  001910  8D60               	bsf	___ftadd@sign& (0+255),6,b
  7058                           
  7059                           ; BSR set to: 0
  7060  001912  8E39               	bsf	___ftadd@f1+1,7,c
  7061                           
  7062                           ; BSR set to: 0
  7063  001914  6A3A               	clrf	___ftadd@f1+2,c
  7064  001916  8E3C               	bsf	___ftadd@f2+1,7,c
  7065                           
  7066                           ; BSR set to: 0
  7067  001918  6A3D               	clrf	___ftadd@f2+2,c
  7068                           
  7069                           ; BSR set to: 0
  7070  00191A  5161               	movf	___ftadd@exp2& (0+255),w,b
  7071  00191C  5D62               	subwf	___ftadd@exp1& (0+255),w,b
  7072  00191E  E218               	bc	l4058
  7073  001920                     l4048:
  7074                           
  7075                           ; BSR set to: 0
  7076  001920  90D8               	bcf	status,0,c
  7077  001922  363B               	rlcf	___ftadd@f2,f,c
  7078  001924  363C               	rlcf	___ftadd@f2+1,f,c
  7079  001926  363D               	rlcf	___ftadd@f2+2,f,c
  7080  001928  0761               	decf	___ftadd@exp2& (0+255),f,b
  7081                           
  7082                           ; BSR set to: 0
  7083  00192A  5162               	movf	___ftadd@exp1& (0+255),w,b
  7084  00192C  1961               	xorwf	___ftadd@exp2& (0+255),w,b
  7085  00192E  E00C               	bz	l4056
  7086                           
  7087                           ; BSR set to: 0
  7088  001930  0760               	decf	___ftadd@sign& (0+255),f,b
  7089  001932  C060  F03E         	movff	___ftadd@sign,??___ftadd
  7090  001936  0E07               	movlw	7
  7091  001938  163E               	andwf	??___ftadd,f,c
  7092  00193A  E006               	bz	l4056
  7093  00193C  D7F1               	goto	l4048
  7094  00193E                     l4054:
  7095                           
  7096                           ; BSR set to: 0
  7097  00193E  90D8               	bcf	status,0,c
  7098  001940  323A               	rrcf	___ftadd@f1+2,f,c
  7099  001942  3239               	rrcf	___ftadd@f1+1,f,c
  7100  001944  3238               	rrcf	___ftadd@f1,f,c
  7101  001946  2B62               	incf	___ftadd@exp1& (0+255),f,b
  7102  001948                     l4056:
  7103                           
  7104                           ; BSR set to: 0
  7105  001948  5161               	movf	___ftadd@exp2& (0+255),w,b
  7106  00194A  1962               	xorwf	___ftadd@exp1& (0+255),w,b
  7107  00194C  E01B               	bz	l1266
  7108  00194E  D7F7               	goto	l4054
  7109  001950                     l4058:
  7110                           
  7111                           ; BSR set to: 0
  7112  001950  5162               	movf	___ftadd@exp1& (0+255),w,b
  7113  001952  5D61               	subwf	___ftadd@exp2& (0+255),w,b
  7114  001954  E217               	bc	l1266
  7115  001956                     l4060:
  7116                           
  7117                           ; BSR set to: 0
  7118  001956  90D8               	bcf	status,0,c
  7119  001958  3638               	rlcf	___ftadd@f1,f,c
  7120  00195A  3639               	rlcf	___ftadd@f1+1,f,c
  7121  00195C  363A               	rlcf	___ftadd@f1+2,f,c
  7122  00195E  0762               	decf	___ftadd@exp1& (0+255),f,b
  7123                           
  7124                           ; BSR set to: 0
  7125  001960  5162               	movf	___ftadd@exp1& (0+255),w,b
  7126  001962  1961               	xorwf	___ftadd@exp2& (0+255),w,b
  7127  001964  E00C               	bz	l4068
  7128                           
  7129                           ; BSR set to: 0
  7130  001966  0760               	decf	___ftadd@sign& (0+255),f,b
  7131  001968  C060  F03E         	movff	___ftadd@sign,??___ftadd
  7132  00196C  0E07               	movlw	7
  7133  00196E  163E               	andwf	??___ftadd,f,c
  7134  001970  E006               	bz	l4068
  7135  001972  D7F1               	goto	l4060
  7136  001974                     l4066:
  7137                           
  7138                           ; BSR set to: 0
  7139  001974  90D8               	bcf	status,0,c
  7140  001976  323D               	rrcf	___ftadd@f2+2,f,c
  7141  001978  323C               	rrcf	___ftadd@f2+1,f,c
  7142  00197A  323B               	rrcf	___ftadd@f2,f,c
  7143  00197C  2B61               	incf	___ftadd@exp2& (0+255),f,b
  7144  00197E                     l4068:
  7145                           
  7146                           ; BSR set to: 0
  7147  00197E  5161               	movf	___ftadd@exp2& (0+255),w,b
  7148  001980  1962               	xorwf	___ftadd@exp1& (0+255),w,b
  7149  001982  E1F8               	bnz	l4066
  7150  001984                     l1266:
  7151                           
  7152                           ; BSR set to: 0
  7153  001984  AF60               	btfss	___ftadd@sign& (0+255),7,b
  7154  001986  D007               	goto	l1275
  7155                           
  7156                           ; BSR set to: 0
  7157  001988  1E38               	comf	___ftadd@f1,f,c
  7158  00198A  1E39               	comf	___ftadd@f1+1,f,c
  7159  00198C  1E3A               	comf	___ftadd@f1+2,f,c
  7160  00198E  2A38               	incf	___ftadd@f1,f,c
  7161  001990  0E00               	movlw	0
  7162  001992  2239               	addwfc	___ftadd@f1+1,f,c
  7163  001994  223A               	addwfc	___ftadd@f1+2,f,c
  7164  001996                     l1275:
  7165                           
  7166                           ; BSR set to: 0
  7167  001996  AD60               	btfss	___ftadd@sign& (0+255),6,b
  7168  001998  D007               	goto	l1276
  7169                           
  7170                           ; BSR set to: 0
  7171  00199A  1E3B               	comf	___ftadd@f2,f,c
  7172  00199C  1E3C               	comf	___ftadd@f2+1,f,c
  7173  00199E  1E3D               	comf	___ftadd@f2+2,f,c
  7174  0019A0  2A3B               	incf	___ftadd@f2,f,c
  7175  0019A2  0E00               	movlw	0
  7176  0019A4  223C               	addwfc	___ftadd@f2+1,f,c
  7177  0019A6  223D               	addwfc	___ftadd@f2+2,f,c
  7178  0019A8                     l1276:
  7179                           
  7180                           ; BSR set to: 0
  7181  0019A8  6B60               	clrf	___ftadd@sign& (0+255),b
  7182  0019AA  5038               	movf	___ftadd@f1,w,c
  7183  0019AC  263B               	addwf	___ftadd@f2,f,c
  7184  0019AE  5039               	movf	___ftadd@f1+1,w,c
  7185  0019B0  223C               	addwfc	___ftadd@f2+1,f,c
  7186  0019B2  503A               	movf	___ftadd@f1+2,w,c
  7187  0019B4  223D               	addwfc	___ftadd@f2+2,f,c
  7188  0019B6  AE3D               	btfss	___ftadd@f2+2,7,c
  7189  0019B8  D009               	goto	l4078
  7190                           
  7191                           ; BSR set to: 0
  7192  0019BA  1E3B               	comf	___ftadd@f2,f,c
  7193  0019BC  1E3C               	comf	___ftadd@f2+1,f,c
  7194  0019BE  1E3D               	comf	___ftadd@f2+2,f,c
  7195  0019C0  2A3B               	incf	___ftadd@f2,f,c
  7196  0019C2  0E00               	movlw	0
  7197  0019C4  223C               	addwfc	___ftadd@f2+1,f,c
  7198  0019C6  223D               	addwfc	___ftadd@f2+2,f,c
  7199                           
  7200                           ; BSR set to: 0
  7201  0019C8  0E01               	movlw	1
  7202  0019CA  6F60               	movwf	___ftadd@sign& (0+255),b
  7203  0019CC                     l4078:
  7204                           
  7205                           ; BSR set to: 0
  7206  0019CC  C03B  F01E         	movff	___ftadd@f2,___ftpack@arg
  7207  0019D0  C03C  F01F         	movff	___ftadd@f2+1,___ftpack@arg+1
  7208  0019D4  C03D  F020         	movff	___ftadd@f2+2,___ftpack@arg+2
  7209  0019D8  C062  F021         	movff	___ftadd@exp1,___ftpack@exp
  7210  0019DC  C060  F022         	movff	___ftadd@sign,___ftpack@sign
  7211  0019E0  EC67  F012         	call	___ftpack	;wreg free
  7212  0019E4  C01E  F038         	movff	?___ftpack,?___ftadd
  7213  0019E8  C01F  F039         	movff	?___ftpack+1,?___ftadd+1
  7214  0019EC  C020  F03A         	movff	?___ftpack+2,?___ftadd+2
  7215  0019F0  0012               	return		;funcret
  7216  0019F2                     __end_of___ftadd:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodl	equ	0xFF3
  7223                           intcon	equ	0xFF2
  7224                           postinc0	equ	0xFEE
  7225                           wreg	equ	0xFE8
  7226                           postinc1	equ	0xFE6
  7227                           postdec1	equ	0xFE5
  7228                           fsr1h	equ	0xFE2
  7229                           fsr1l	equ	0xFE1
  7230                           indf2	equ	0xFDF
  7231                           postinc2	equ	0xFDE
  7232                           postdec2	equ	0xFDD
  7233                           fsr2h	equ	0xFDA
  7234                           fsr2l	equ	0xFD9
  7235                           status	equ	0xFD8
  7236                           
  7237 ;; *************** function ___awtoft *****************
  7238 ;; Defined at:
  7239 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  c               2   37[COMRAM] int 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  sign            1   40[COMRAM] unsigned char 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  3   37[COMRAM] float 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0, cstack
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7253 ;;      Params:         3       0       0       0
  7254 ;;      Locals:         1       0       0       0
  7255 ;;      Temps:          0       0       0       0
  7256 ;;      Totals:         4       0       0       0
  7257 ;;Total ram usage:        4 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    5
  7260 ;; This function calls:
  7261 ;;		___ftpack
  7262 ;; This function is called by:
  7263 ;;		_readAD
  7264 ;;		_SET_DUTY
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text7
  7269  002C92                     __ptext7:
  7270                           	opt stack 0
  7271  002C92                     ___awtoft:
  7272                           	opt stack 24
  7273                           
  7274                           ;incstack = 0
  7275  002C92  6A29               	clrf	___awtoft@sign,c
  7276  002C94  AE27               	btfss	___awtoft@c+1,7,c
  7277  002C96  D006               	goto	l4572
  7278  002C98  6C26               	negf	___awtoft@c,c
  7279  002C9A  1E27               	comf	___awtoft@c+1,f,c
  7280  002C9C  B0D8               	btfsc	status,0,c
  7281  002C9E  2A27               	incf	___awtoft@c+1,f,c
  7282  002CA0  0E01               	movlw	1
  7283  002CA2  6E29               	movwf	___awtoft@sign,c
  7284  002CA4                     l4572:
  7285  002CA4  C026  F01E         	movff	___awtoft@c,___ftpack@arg
  7286  002CA8  C027  F01F         	movff	___awtoft@c+1,___ftpack@arg+1
  7287  002CAC  6A20               	clrf	___ftpack@arg+2,c
  7288  002CAE  0E8E               	movlw	142
  7289  002CB0  6E21               	movwf	___ftpack@exp,c
  7290  002CB2  C029  F022         	movff	___awtoft@sign,___ftpack@sign
  7291  002CB6  EC67  F012         	call	___ftpack	;wreg free
  7292  002CBA  C01E  F026         	movff	?___ftpack,?___awtoft
  7293  002CBE  C01F  F027         	movff	?___ftpack+1,?___awtoft+1
  7294  002CC2  C020  F028         	movff	?___ftpack+2,?___awtoft+2
  7295  002CC6  0012               	return		;funcret
  7296  002CC8                     __end_of___awtoft:
  7297                           	opt stack 0
  7298                           tblptru	equ	0xFF8
  7299                           tblptrh	equ	0xFF7
  7300                           tblptrl	equ	0xFF6
  7301                           tablat	equ	0xFF5
  7302                           prodl	equ	0xFF3
  7303                           intcon	equ	0xFF2
  7304                           postinc0	equ	0xFEE
  7305                           wreg	equ	0xFE8
  7306                           postinc1	equ	0xFE6
  7307                           postdec1	equ	0xFE5
  7308                           fsr1h	equ	0xFE2
  7309                           fsr1l	equ	0xFE1
  7310                           indf2	equ	0xFDF
  7311                           postinc2	equ	0xFDE
  7312                           postdec2	equ	0xFDD
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317 ;; *************** function _get_time *****************
  7318 ;; Defined at:
  7319 ;;		line 132 in file "DS1302.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  i               2   32[COMRAM] int 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : F/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7333 ;;      Params:         0       0       0       0
  7334 ;;      Locals:         2       0       0       0
  7335 ;;      Temps:          0       0       0       0
  7336 ;;      Totals:         2       0       0       0
  7337 ;;Total ram usage:        2 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    5
  7340 ;; This function calls:
  7341 ;;		_read_time
  7342 ;;		_write_cmd
  7343 ;;		_write_data
  7344 ;; This function is called by:
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text8
  7350  00273C                     __ptext8:
  7351                           	opt stack 0
  7352  00273C                     _get_time:
  7353                           	opt stack 25
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;DS1302.c: 134: int i;
  7357                           ;DS1302.c: 135: RE2=1;
  7358                           
  7359                           ;incstack = 0
  7360  00273C  8484               	bsf	3972,2,c	;volatile
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;DS1302.c: 136: write_cmd(0xbf);
  7364  00273E  0EBF               	movlw	191
  7365  002740  EC0F  F017         	call	_write_cmd
  7366                           
  7367                           ;DS1302.c: 137: for(i=0;i<7;i++)
  7368  002744  6A21               	clrf	get_time@i,c
  7369  002746  6A22               	clrf	get_time@i+1,c
  7370  002748                     l5348:
  7371                           
  7372                           ;DS1302.c: 138: {
  7373                           ;DS1302.c: 139: table[i]=read_time();
  7374  002748  5021               	movf	get_time@i,w,c
  7375  00274A  0F4B               	addlw	low _table
  7376  00274C  6ED9               	movwf	fsr2l,c
  7377  00274E  6ADA               	clrf	fsr2h,c
  7378  002750  ECB3  F016         	call	_read_time	;wreg free
  7379  002754  6EDF               	movwf	indf2,c
  7380  002756  4A21               	infsnz	get_time@i,f,c
  7381  002758  2A22               	incf	get_time@i+1,f,c
  7382  00275A  BE22               	btfsc	get_time@i+1,7,c
  7383  00275C  D7F5               	goto	l5348
  7384  00275E  5022               	movf	get_time@i+1,w,c
  7385  002760  E103               	bnz	u3850
  7386  002762  0E07               	movlw	7
  7387  002764  5C21               	subwf	get_time@i,w,c
  7388  002766  E3F0               	bnc	l5348
  7389  002768                     u3850:
  7390                           
  7391                           ;DS1302.c: 140: }
  7392                           ;DS1302.c: 141: RE2=0;
  7393  002768  9484               	bcf	3972,2,c	;volatile
  7394                           
  7395                           ;DS1302.c: 143: if(table[0]>=0x61)
  7396  00276A  0E60               	movlw	96
  7397  00276C  644B               	cpfsgt	_table,c
  7398  00276E  0C60               	retlw	96
  7399                           
  7400                           ;DS1302.c: 144: {
  7401                           ;DS1302.c: 145: RE2=1;
  7402  002770  8484               	bsf	3972,2,c	;volatile
  7403                           
  7404                           ;DS1302.c: 146: write_cmd(0xbe);
  7405  002772  0EBE               	movlw	190
  7406  002774  EC0F  F017         	call	_write_cmd
  7407                           
  7408                           ;DS1302.c: 147: write_data(0x00);
  7409  002778  0E00               	movlw	0
  7410  00277A  ECF9  F016         	call	_write_data
  7411                           
  7412                           ;DS1302.c: 148: for(i=1;i<8;i++)
  7413  00277E  6A22               	clrf	get_time@i+1,c
  7414  002780  0E01               	movlw	1
  7415  002782  6E21               	movwf	get_time@i,c
  7416  002784                     l5366:
  7417                           
  7418                           ;DS1302.c: 149: {
  7419                           ;DS1302.c: 150: write_data(table[i]);
  7420  002784  5021               	movf	get_time@i,w,c
  7421  002786  0F4B               	addlw	low _table
  7422  002788  6ED9               	movwf	fsr2l,c
  7423  00278A  6ADA               	clrf	fsr2h,c
  7424  00278C  50DF               	movf	indf2,w,c
  7425  00278E  ECF9  F016         	call	_write_data
  7426  002792  4A21               	infsnz	get_time@i,f,c
  7427  002794  2A22               	incf	get_time@i+1,f,c
  7428  002796  BE22               	btfsc	get_time@i+1,7,c
  7429  002798  D7F5               	goto	l5366
  7430  00279A  5022               	movf	get_time@i+1,w,c
  7431  00279C  E103               	bnz	u3870
  7432  00279E  0E08               	movlw	8
  7433  0027A0  5C21               	subwf	get_time@i,w,c
  7434  0027A2  E3F0               	bnc	l5366
  7435  0027A4                     u3870:
  7436                           
  7437                           ;DS1302.c: 151: }
  7438                           ;DS1302.c: 152: write_cmd(0x00);
  7439  0027A4  0E00               	movlw	0
  7440  0027A6  EC0F  F017         	call	_write_cmd
  7441                           
  7442                           ;DS1302.c: 153: RE2=0;
  7443  0027AA  9484               	bcf	3972,2,c	;volatile
  7444  0027AC  0012               	return		;funcret
  7445  0027AE                     __end_of_get_time:
  7446                           	opt stack 0
  7447                           tblptru	equ	0xFF8
  7448                           tblptrh	equ	0xFF7
  7449                           tblptrl	equ	0xFF6
  7450                           tablat	equ	0xFF5
  7451                           prodl	equ	0xFF3
  7452                           intcon	equ	0xFF2
  7453                           postinc0	equ	0xFEE
  7454                           wreg	equ	0xFE8
  7455                           postinc1	equ	0xFE6
  7456                           postdec1	equ	0xFE5
  7457                           fsr1h	equ	0xFE2
  7458                           fsr1l	equ	0xFE1
  7459                           indf2	equ	0xFDF
  7460                           postinc2	equ	0xFDE
  7461                           postdec2	equ	0xFDD
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8
  7465                           
  7466 ;; *************** function _read_time *****************
  7467 ;; Defined at:
  7468 ;;		line 106 in file "DS1302.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  j               2   30[COMRAM] int 
  7473 ;;  rec             1   29[COMRAM] unsigned char 
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      unsigned char 
  7476 ;; Registers used:
  7477 ;;		wreg, status,2, status,0
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7483 ;;      Params:         0       0       0       0
  7484 ;;      Locals:         3       0       0       0
  7485 ;;      Temps:          0       0       0       0
  7486 ;;      Totals:         3       0       0       0
  7487 ;;Total ram usage:        3 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:    4
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_get_time
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text9
  7498  002D66                     __ptext9:
  7499                           	opt stack 0
  7500  002D66                     _read_time:
  7501                           	opt stack 25
  7502                           
  7503                           ;DS1302.c: 108: unsigned char rec;
  7504                           ;DS1302.c: 109: int j;
  7505                           ;DS1302.c: 110: static bit temp;
  7506                           ;DS1302.c: 111: TRISE0 = 1;
  7507                           
  7508                           ;incstack = 0
  7509  002D66  8096               	bsf	3990,0,c	;volatile
  7510                           
  7511                           ;DS1302.c: 112: for (j = 0;j < 8;j++)
  7512  002D68  6A1F               	clrf	read_time@j,c
  7513  002D6A  6A20               	clrf	read_time@j+1,c
  7514  002D6C                     l912:
  7515                           
  7516                           ;DS1302.c: 113: {
  7517                           ;DS1302.c: 114: RD4 = 0;
  7518  002D6C  9883               	bcf	3971,4,c	;volatile
  7519                           
  7520                           ;DS1302.c: 115: temp=RE0;
  7521  002D6E  8652               	bsf	read_time@temp/(0+8),read_time@temp& (0+7),c
  7522  002D70  A084               	btfss	3972,0,c	;volatile
  7523  002D72  9652               	bcf	read_time@temp/(0+8),read_time@temp& (0+7),c
  7524                           
  7525                           ;DS1302.c: 116: rec = rec >> 1;
  7526  002D74  90D8               	bcf	status,0,c
  7527  002D76  321E               	rrcf	read_time@rec,f,c
  7528                           
  7529                           ;DS1302.c: 117: if(temp==1)
  7530  002D78  B652               	btfsc	read_time@temp/(0+8),read_time@temp& (0+7),c
  7531                           
  7532                           ;DS1302.c: 118: {
  7533                           ;DS1302.c: 119: rec=rec|0x80;
  7534  002D7A  8E1E               	bsf	read_time@rec,7,c
  7535                           
  7536                           ;DS1302.c: 120: }
  7537                           ;DS1302.c: 121: RD4 = 1;
  7538  002D7C  8883               	bsf	3971,4,c	;volatile
  7539  002D7E  4A1F               	infsnz	read_time@j,f,c
  7540  002D80  2A20               	incf	read_time@j+1,f,c
  7541  002D82  BE20               	btfsc	read_time@j+1,7,c
  7542  002D84  D7F3               	goto	l912
  7543  002D86  5020               	movf	read_time@j+1,w,c
  7544  002D88  E103               	bnz	u3150
  7545  002D8A  0E08               	movlw	8
  7546  002D8C  5C1F               	subwf	read_time@j,w,c
  7547  002D8E  E3EE               	bnc	l912
  7548  002D90                     u3150:
  7549                           
  7550                           ;DS1302.c: 122: }
  7551                           ;DS1302.c: 123: RD4 = 0;
  7552  002D90  9883               	bcf	3971,4,c	;volatile
  7553                           
  7554                           ;DS1302.c: 124: return (rec);
  7555  002D92  501E               	movf	read_time@rec,w,c
  7556  002D94  0012               	return		;funcret
  7557  002D96                     __end_of_read_time:
  7558                           	opt stack 0
  7559                           tblptru	equ	0xFF8
  7560                           tblptrh	equ	0xFF7
  7561                           tblptrl	equ	0xFF6
  7562                           tablat	equ	0xFF5
  7563                           prodl	equ	0xFF3
  7564                           intcon	equ	0xFF2
  7565                           postinc0	equ	0xFEE
  7566                           wreg	equ	0xFE8
  7567                           postinc1	equ	0xFE6
  7568                           postdec1	equ	0xFE5
  7569                           fsr1h	equ	0xFE2
  7570                           fsr1l	equ	0xFE1
  7571                           indf2	equ	0xFDF
  7572                           postinc2	equ	0xFDE
  7573                           postdec2	equ	0xFDD
  7574                           fsr2h	equ	0xFDA
  7575                           fsr2l	equ	0xFD9
  7576                           status	equ	0xFD8
  7577                           
  7578 ;; *************** function _delay_n *****************
  7579 ;; Defined at:
  7580 ;;		line 61 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/motor.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  n               1    wreg     unsigned char 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  n               1   31[COMRAM] unsigned char 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0, cstack
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7594 ;;      Params:         0       0       0       0
  7595 ;;      Locals:         1       0       0       0
  7596 ;;      Temps:          0       0       0       0
  7597 ;;      Totals:         1       0       0       0
  7598 ;;Total ram usage:        1 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    5
  7601 ;; This function calls:
  7602 ;;		_delay
  7603 ;; This function is called by:
  7604 ;;		_main
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text10
  7609  003046                     __ptext10:
  7610                           	opt stack 0
  7611  003046                     _delay_n:
  7612                           	opt stack 25
  7613                           
  7614                           ;incstack = 0
  7615                           ;delay_n@n stored from wreg
  7616  003046  6E20               	movwf	delay_n@n,c
  7617                           
  7618                           ;motor.c: 63: while(n--)
  7619  003048  D004               	goto	l5230
  7620  00304A                     l5228:
  7621                           
  7622                           ;motor.c: 64: {
  7623                           ;motor.c: 65: delay(65535);
  7624  00304A  681F               	setf	delay@t+1,c
  7625  00304C  681E               	setf	delay@t,c
  7626  00304E  EC47  F018         	call	_delay	;wreg free
  7627  003052                     l5230:
  7628  003052  0620               	decf	delay_n@n,f,c
  7629  003054  2820               	incf	delay_n@n,w,c
  7630  003056  E1F9               	bnz	l5228
  7631  003058  0012               	return		;funcret
  7632  00305A                     __end_of_delay_n:
  7633                           	opt stack 0
  7634                           tblptru	equ	0xFF8
  7635                           tblptrh	equ	0xFF7
  7636                           tblptrl	equ	0xFF6
  7637                           tablat	equ	0xFF5
  7638                           prodl	equ	0xFF3
  7639                           intcon	equ	0xFF2
  7640                           postinc0	equ	0xFEE
  7641                           wreg	equ	0xFE8
  7642                           postinc1	equ	0xFE6
  7643                           postdec1	equ	0xFE5
  7644                           fsr1h	equ	0xFE2
  7645                           fsr1l	equ	0xFE1
  7646                           indf2	equ	0xFDF
  7647                           postinc2	equ	0xFDE
  7648                           postdec2	equ	0xFDD
  7649                           fsr2h	equ	0xFDA
  7650                           fsr2l	equ	0xFD9
  7651                           status	equ	0xFD8
  7652                           
  7653 ;; *************** function _UART_INIT *****************
  7654 ;; Defined at:
  7655 ;;		line 5 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/UART.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;		None
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1    wreg      void 
  7662 ;; Registers used:
  7663 ;;		wreg, status,2
  7664 ;; Tracked objects:
  7665 ;;		On entry : F/0
  7666 ;;		On exit  : F/0
  7667 ;;		Unchanged: F/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7669 ;;      Params:         0       0       0       0
  7670 ;;      Locals:         0       0       0       0
  7671 ;;      Temps:          0       0       0       0
  7672 ;;      Totals:         0       0       0       0
  7673 ;;Total ram usage:        0 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    4
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_main
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text11
  7684  002FA0                     __ptext11:
  7685                           	opt stack 0
  7686  002FA0                     _UART_INIT:
  7687                           	opt stack 26
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;UART.c: 7: TRISC7=1;
  7691                           
  7692                           ;incstack = 0
  7693  002FA0  8E94               	bsf	3988,7,c	;volatile
  7694                           
  7695                           ;UART.c: 8: TRISC6=1;
  7696  002FA2  8C94               	bsf	3988,6,c	;volatile
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;UART.c: 10: SPBRG=50;
  7700  002FA4  0E32               	movlw	50
  7701  002FA6  6EAF               	movwf	4015,c	;volatile
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;UART.c: 11: SYNC=0;BRG16=0;BRGH=1;
  7705  002FA8  98AC               	bcf	4012,4,c	;volatile
  7706                           
  7707                           ; BSR set to: 0
  7708  002FAA  96AA               	bcf	4010,3,c	;volatile
  7709                           
  7710                           ; BSR set to: 0
  7711  002FAC  84AC               	bsf	4012,2,c	;volatile
  7712                           
  7713                           ;UART.c: 13: TXSTA=0x24;
  7714  002FAE  0E24               	movlw	36
  7715  002FB0  6EAC               	movwf	4012,c	;volatile
  7716                           
  7717                           ;UART.c: 14: RCSTA=0x90;
  7718  002FB2  0E90               	movlw	144
  7719  002FB4  6EAB               	movwf	4011,c	;volatile
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;UART.c: 16: RCIF=0;
  7723  002FB6  9A9E               	bcf	3998,5,c	;volatile
  7724                           
  7725                           ; BSR set to: 0
  7726  002FB8  0C90               	retlw	144	;funcret
  7727  002FBA                     __end_of_UART_INIT:
  7728                           	opt stack 0
  7729                           tblptru	equ	0xFF8
  7730                           tblptrh	equ	0xFF7
  7731                           tblptrl	equ	0xFF6
  7732                           tablat	equ	0xFF5
  7733                           prodl	equ	0xFF3
  7734                           intcon	equ	0xFF2
  7735                           postinc0	equ	0xFEE
  7736                           wreg	equ	0xFE8
  7737                           postinc1	equ	0xFE6
  7738                           postdec1	equ	0xFE5
  7739                           fsr1h	equ	0xFE2
  7740                           fsr1l	equ	0xFE1
  7741                           indf2	equ	0xFDF
  7742                           postinc2	equ	0xFDE
  7743                           postdec2	equ	0xFDD
  7744                           fsr2h	equ	0xFDA
  7745                           fsr2l	equ	0xFD9
  7746                           status	equ	0xFD8
  7747                           
  7748 ;; *************** function _TimePage *****************
  7749 ;; Defined at:
  7750 ;;		line 428 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  year            1    wreg     unsigned char 
  7753 ;;  month           1   44[COMRAM] unsigned char 
  7754 ;;  day             1   45[COMRAM] unsigned char 
  7755 ;;  hour            1   46[COMRAM] unsigned char 
  7756 ;;  min             1   47[COMRAM] unsigned char 
  7757 ;;  sec             1   48[COMRAM] unsigned char 
  7758 ;;  x               1   49[COMRAM] unsigned char 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  year            1   50[COMRAM] unsigned char 
  7761 ;;  buf             3   51[COMRAM] unsigned char [3]
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : F/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7771 ;;      Params:         6       0       0       0
  7772 ;;      Locals:         4       0       0       0
  7773 ;;      Temps:          0       0       0       0
  7774 ;;      Totals:        10       0       0       0
  7775 ;;Total ram usage:       10 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:    8
  7778 ;; This function calls:
  7779 ;;		_Ascii2Str
  7780 ;;		_LCD_HZ
  7781 ;;		_LCD_P8x16Sp
  7782 ;;		_LCD_P8x16Str
  7783 ;; This function is called by:
  7784 ;;		_main
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788                           	psect	text12
  7789  00152A                     __ptext12:
  7790                           	opt stack 0
  7791  00152A                     _TimePage:
  7792                           	opt stack 22
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;incstack = 0
  7796                           ;TimePage@year stored from wreg
  7797  00152A  6E33               	movwf	TimePage@year,c
  7798                           
  7799                           ;LCD.c: 430: unsigned char buf[3];
  7800                           ;LCD.c: 432: LCD_HZ(16, 0, F16x16_HZ,34);
  7801  00152C  6A22               	clrf	LCD_HZ@y,c
  7802  00152E  0E1F               	movlw	low _F16x16_HZ
  7803  001530  6E23               	movwf	LCD_HZ@data,c
  7804  001532  0E35               	movlw	high _F16x16_HZ
  7805  001534  6E24               	movwf	LCD_HZ@data+1,c
  7806  001536  0E22               	movlw	34
  7807  001538  6E25               	movwf	LCD_HZ@N,c
  7808  00153A  0E10               	movlw	16
  7809  00153C  EC28  F013         	call	_LCD_HZ
  7810                           
  7811                           ;LCD.c: 433: LCD_HZ(32, 0, F16x16_HZ,35);
  7812  001540  6A22               	clrf	LCD_HZ@y,c
  7813  001542  0E1F               	movlw	low _F16x16_HZ
  7814  001544  6E23               	movwf	LCD_HZ@data,c
  7815  001546  0E35               	movlw	high _F16x16_HZ
  7816  001548  6E24               	movwf	LCD_HZ@data+1,c
  7817  00154A  0E23               	movlw	35
  7818  00154C  6E25               	movwf	LCD_HZ@N,c
  7819  00154E  0E20               	movlw	32
  7820  001550  EC28  F013         	call	_LCD_HZ
  7821                           
  7822                           ;LCD.c: 434: LCD_HZ(48, 0, F16x16_HZ,36);
  7823  001554  6A22               	clrf	LCD_HZ@y,c
  7824  001556  0E1F               	movlw	low _F16x16_HZ
  7825  001558  6E23               	movwf	LCD_HZ@data,c
  7826  00155A  0E35               	movlw	high _F16x16_HZ
  7827  00155C  6E24               	movwf	LCD_HZ@data+1,c
  7828  00155E  0E24               	movlw	36
  7829  001560  6E25               	movwf	LCD_HZ@N,c
  7830  001562  0E30               	movlw	48
  7831  001564  EC28  F013         	call	_LCD_HZ
  7832                           
  7833                           ;LCD.c: 435: LCD_HZ(64, 0, F16x16_HZ,37);
  7834  001568  6A22               	clrf	LCD_HZ@y,c
  7835  00156A  0E1F               	movlw	low _F16x16_HZ
  7836  00156C  6E23               	movwf	LCD_HZ@data,c
  7837  00156E  0E35               	movlw	high _F16x16_HZ
  7838  001570  6E24               	movwf	LCD_HZ@data+1,c
  7839  001572  0E25               	movlw	37
  7840  001574  6E25               	movwf	LCD_HZ@N,c
  7841  001576  0E40               	movlw	64
  7842  001578  EC28  F013         	call	_LCD_HZ
  7843                           
  7844                           ;LCD.c: 436: LCD_HZ(80, 0, F16x16_HZ,42);
  7845  00157C  6A22               	clrf	LCD_HZ@y,c
  7846  00157E  0E1F               	movlw	low _F16x16_HZ
  7847  001580  6E23               	movwf	LCD_HZ@data,c
  7848  001582  0E35               	movlw	high _F16x16_HZ
  7849  001584  6E24               	movwf	LCD_HZ@data+1,c
  7850  001586  0E2A               	movlw	42
  7851  001588  6E25               	movwf	LCD_HZ@N,c
  7852  00158A  0E50               	movlw	80
  7853  00158C  EC28  F013         	call	_LCD_HZ
  7854                           
  7855                           ;LCD.c: 437: LCD_HZ(96, 0, F16x16_HZ,43);
  7856  001590  6A22               	clrf	LCD_HZ@y,c
  7857  001592  0E1F               	movlw	low _F16x16_HZ
  7858  001594  6E23               	movwf	LCD_HZ@data,c
  7859  001596  0E35               	movlw	high _F16x16_HZ
  7860  001598  6E24               	movwf	LCD_HZ@data+1,c
  7861  00159A  0E2B               	movlw	43
  7862  00159C  6E25               	movwf	LCD_HZ@N,c
  7863  00159E  0E60               	movlw	96
  7864  0015A0  EC28  F013         	call	_LCD_HZ
  7865                           
  7866                           ;LCD.c: 439: LCD_P8x16Str(8,2,"20");
  7867  0015A4  0E02               	movlw	2
  7868  0015A6  6E22               	movwf	LCD_P8x16Str@y,c
  7869  0015A8  0EF1               	movlw	low STR_12
  7870  0015AA  6E23               	movwf	LCD_P8x16Str@ch,c
  7871  0015AC  0E3F               	movlw	high STR_12
  7872  0015AE  6E24               	movwf	LCD_P8x16Str@ch+1,c
  7873  0015B0  0E08               	movlw	8
  7874  0015B2  EC34  F00E         	call	_LCD_P8x16Str
  7875                           
  7876                           ;LCD.c: 440: Ascii2Str(year,buf);
  7877  0015B6  0E34               	movlw	low TimePage@buf
  7878  0015B8  6E1E               	movwf	Ascii2Str@buf,c
  7879  0015BA  5033               	movf	TimePage@year,w,c
  7880  0015BC  EC3F  F014         	call	_Ascii2Str
  7881                           
  7882                           ;LCD.c: 441: LCD_P8x16Str(24,2,buf);
  7883  0015C0  0E02               	movlw	2
  7884  0015C2  6E22               	movwf	LCD_P8x16Str@y,c
  7885  0015C4  0E34               	movlw	low TimePage@buf
  7886  0015C6  6E23               	movwf	LCD_P8x16Str@ch,c
  7887  0015C8  6A24               	clrf	LCD_P8x16Str@ch+1,c
  7888  0015CA  0E18               	movlw	24
  7889  0015CC  EC34  F00E         	call	_LCD_P8x16Str
  7890                           
  7891                           ;LCD.c: 442: LCD_HZ(40, 2, F16x16_HZ,6);
  7892  0015D0  0E02               	movlw	2
  7893  0015D2  6E22               	movwf	LCD_HZ@y,c
  7894  0015D4  0E1F               	movlw	low _F16x16_HZ
  7895  0015D6  6E23               	movwf	LCD_HZ@data,c
  7896  0015D8  0E35               	movlw	high _F16x16_HZ
  7897  0015DA  6E24               	movwf	LCD_HZ@data+1,c
  7898  0015DC  0E06               	movlw	6
  7899  0015DE  6E25               	movwf	LCD_HZ@N,c
  7900  0015E0  0E28               	movlw	40
  7901  0015E2  EC28  F013         	call	_LCD_HZ
  7902                           
  7903                           ;LCD.c: 443: Ascii2Str(month,buf);
  7904  0015E6  0E34               	movlw	low TimePage@buf
  7905  0015E8  6E1E               	movwf	Ascii2Str@buf,c
  7906  0015EA  502D               	movf	TimePage@month,w,c
  7907  0015EC  EC3F  F014         	call	_Ascii2Str
  7908                           
  7909                           ;LCD.c: 444: LCD_P8x16Str(56,2,buf);
  7910  0015F0  0E02               	movlw	2
  7911  0015F2  6E22               	movwf	LCD_P8x16Str@y,c
  7912  0015F4  0E34               	movlw	low TimePage@buf
  7913  0015F6  6E23               	movwf	LCD_P8x16Str@ch,c
  7914  0015F8  6A24               	clrf	LCD_P8x16Str@ch+1,c
  7915  0015FA  0E38               	movlw	56
  7916  0015FC  EC34  F00E         	call	_LCD_P8x16Str
  7917                           
  7918                           ;LCD.c: 445: LCD_HZ(72, 2, F16x16_HZ,7);
  7919  001600  0E02               	movlw	2
  7920  001602  6E22               	movwf	LCD_HZ@y,c
  7921  001604  0E1F               	movlw	low _F16x16_HZ
  7922  001606  6E23               	movwf	LCD_HZ@data,c
  7923  001608  0E35               	movlw	high _F16x16_HZ
  7924  00160A  6E24               	movwf	LCD_HZ@data+1,c
  7925  00160C  0E07               	movlw	7
  7926  00160E  6E25               	movwf	LCD_HZ@N,c
  7927  001610  0E48               	movlw	72
  7928  001612  EC28  F013         	call	_LCD_HZ
  7929                           
  7930                           ;LCD.c: 446: Ascii2Str(day,buf);
  7931  001616  0E34               	movlw	low TimePage@buf
  7932  001618  6E1E               	movwf	Ascii2Str@buf,c
  7933  00161A  502E               	movf	TimePage@day,w,c
  7934  00161C  EC3F  F014         	call	_Ascii2Str
  7935                           
  7936                           ;LCD.c: 447: LCD_P8x16Str(88,2,buf);
  7937  001620  0E02               	movlw	2
  7938  001622  6E22               	movwf	LCD_P8x16Str@y,c
  7939  001624  0E34               	movlw	low TimePage@buf
  7940  001626  6E23               	movwf	LCD_P8x16Str@ch,c
  7941  001628  6A24               	clrf	LCD_P8x16Str@ch+1,c
  7942  00162A  0E58               	movlw	88
  7943  00162C  EC34  F00E         	call	_LCD_P8x16Str
  7944                           
  7945                           ;LCD.c: 448: LCD_HZ(104, 2, F16x16_HZ,8);
  7946  001630  0E02               	movlw	2
  7947  001632  6E22               	movwf	LCD_HZ@y,c
  7948  001634  0E1F               	movlw	low _F16x16_HZ
  7949  001636  6E23               	movwf	LCD_HZ@data,c
  7950  001638  0E35               	movlw	high _F16x16_HZ
  7951  00163A  6E24               	movwf	LCD_HZ@data+1,c
  7952  00163C  0E08               	movlw	8
  7953  00163E  6E25               	movwf	LCD_HZ@N,c
  7954  001640  0E68               	movlw	104
  7955  001642  EC28  F013         	call	_LCD_HZ
  7956                           
  7957                           ;LCD.c: 450: Ascii2Str(hour,buf);
  7958  001646  0E34               	movlw	low TimePage@buf
  7959  001648  6E1E               	movwf	Ascii2Str@buf,c
  7960  00164A  502F               	movf	TimePage@hour,w,c
  7961  00164C  EC3F  F014         	call	_Ascii2Str
  7962                           
  7963                           ;LCD.c: 451: LCD_P8x16Str(28, 4, buf);
  7964  001650  0E04               	movlw	4
  7965  001652  6E22               	movwf	LCD_P8x16Str@y,c
  7966  001654  0E34               	movlw	low TimePage@buf
  7967  001656  6E23               	movwf	LCD_P8x16Str@ch,c
  7968  001658  6A24               	clrf	LCD_P8x16Str@ch+1,c
  7969  00165A  0E1C               	movlw	28
  7970  00165C  EC34  F00E         	call	_LCD_P8x16Str
  7971                           
  7972                           ;LCD.c: 452: LCD_P8x16Str(44,4,":");
  7973  001660  0E04               	movlw	4
  7974  001662  6E22               	movwf	LCD_P8x16Str@y,c
  7975  001664  0EFD               	movlw	low STR_5
  7976  001666  6E23               	movwf	LCD_P8x16Str@ch,c
  7977  001668  0E3F               	movlw	high STR_5
  7978  00166A  6E24               	movwf	LCD_P8x16Str@ch+1,c
  7979  00166C  0E2C               	movlw	44
  7980  00166E  EC34  F00E         	call	_LCD_P8x16Str
  7981                           
  7982                           ;LCD.c: 453: Ascii2Str(min,buf);
  7983  001672  0E34               	movlw	low TimePage@buf
  7984  001674  6E1E               	movwf	Ascii2Str@buf,c
  7985  001676  5030               	movf	TimePage@min,w,c
  7986  001678  EC3F  F014         	call	_Ascii2Str
  7987                           
  7988                           ;LCD.c: 454: LCD_P8x16Str(52, 4, buf);
  7989  00167C  0E04               	movlw	4
  7990  00167E  6E22               	movwf	LCD_P8x16Str@y,c
  7991  001680  0E34               	movlw	low TimePage@buf
  7992  001682  6E23               	movwf	LCD_P8x16Str@ch,c
  7993  001684  6A24               	clrf	LCD_P8x16Str@ch+1,c
  7994  001686  0E34               	movlw	52
  7995  001688  EC34  F00E         	call	_LCD_P8x16Str
  7996                           
  7997                           ;LCD.c: 455: LCD_P8x16Str(68,4,":");
  7998  00168C  0E04               	movlw	4
  7999  00168E  6E22               	movwf	LCD_P8x16Str@y,c
  8000  001690  0EFD               	movlw	low STR_5
  8001  001692  6E23               	movwf	LCD_P8x16Str@ch,c
  8002  001694  0E3F               	movlw	high STR_5
  8003  001696  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8004  001698  0E44               	movlw	68
  8005  00169A  EC34  F00E         	call	_LCD_P8x16Str
  8006                           
  8007                           ;LCD.c: 456: Ascii2Str(sec,buf);
  8008  00169E  0E34               	movlw	low TimePage@buf
  8009  0016A0  6E1E               	movwf	Ascii2Str@buf,c
  8010  0016A2  5031               	movf	TimePage@sec,w,c
  8011  0016A4  EC3F  F014         	call	_Ascii2Str
  8012                           
  8013                           ;LCD.c: 457: LCD_P8x16Str(76, 4, buf);
  8014  0016A8  0E04               	movlw	4
  8015  0016AA  6E22               	movwf	LCD_P8x16Str@y,c
  8016  0016AC  0E34               	movlw	low TimePage@buf
  8017  0016AE  6E23               	movwf	LCD_P8x16Str@ch,c
  8018  0016B0  6A24               	clrf	LCD_P8x16Str@ch+1,c
  8019  0016B2  0E4C               	movlw	76
  8020  0016B4  EC34  F00E         	call	_LCD_P8x16Str
  8021                           
  8022                           ;LCD.c: 459: if(x<=2)
  8023  0016B8  0E03               	movlw	3
  8024  0016BA  6032               	cpfslt	TimePage@x,c
  8025  0016BC  D00A               	goto	l4952
  8026                           
  8027                           ;LCD.c: 460: {
  8028                           ;LCD.c: 461: LCD_P8x16Sp(32+x*32,2,'_');
  8029  0016BE  0E02               	movlw	2
  8030  0016C0  6E22               	movwf	LCD_P8x16Sp@y,c
  8031  0016C2  0E5F               	movlw	95
  8032  0016C4  6E23               	movwf	LCD_P8x16Sp@ch,c
  8033  0016C6  5032               	movf	TimePage@x,w,c
  8034  0016C8  0D20               	mullw	32
  8035  0016CA  50F3               	movf	prodl,w,c
  8036  0016CC  0F20               	addlw	32
  8037  0016CE  EFC0  F00E         	goto	_LCD_P8x16Sp
  8038  0016D2                     l4952:
  8039                           
  8040                           ;LCD.c: 463: else
  8041                           ;LCD.c: 464: {
  8042                           ;LCD.c: 465: LCD_P8x16Sp(36+(x-3)*24,4,'_');
  8043  0016D2  0E04               	movlw	4
  8044  0016D4  6E22               	movwf	LCD_P8x16Sp@y,c
  8045  0016D6  0E5F               	movlw	95
  8046  0016D8  6E23               	movwf	LCD_P8x16Sp@ch,c
  8047  0016DA  5032               	movf	TimePage@x,w,c
  8048  0016DC  0D18               	mullw	24
  8049  0016DE  50F3               	movf	prodl,w,c
  8050  0016E0  0FDC               	addlw	220
  8051  0016E2  EFC0  F00E         	goto	_LCD_P8x16Sp
  8052  0016E6                     __end_of_TimePage:
  8053                           	opt stack 0
  8054                           tblptru	equ	0xFF8
  8055                           tblptrh	equ	0xFF7
  8056                           tblptrl	equ	0xFF6
  8057                           tablat	equ	0xFF5
  8058                           prodl	equ	0xFF3
  8059                           intcon	equ	0xFF2
  8060                           postinc0	equ	0xFEE
  8061                           wreg	equ	0xFE8
  8062                           postinc1	equ	0xFE6
  8063                           postdec1	equ	0xFE5
  8064                           fsr1h	equ	0xFE2
  8065                           fsr1l	equ	0xFE1
  8066                           indf2	equ	0xFDF
  8067                           postinc2	equ	0xFDE
  8068                           postdec2	equ	0xFDD
  8069                           fsr2h	equ	0xFDA
  8070                           fsr2l	equ	0xFD9
  8071                           status	equ	0xFD8
  8072                           
  8073 ;; *************** function _TimeFormat *****************
  8074 ;; Defined at:
  8075 ;;		line 215 in file "DS1302.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;  ascii           1    wreg     PTR unsigned char 
  8078 ;;		 -> table(7), 
  8079 ;;  min             1   29[COMRAM] unsigned char 
  8080 ;;  max             1   30[COMRAM] unsigned char 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  ascii           1   33[COMRAM] PTR unsigned char 
  8083 ;;		 -> table(7), 
  8084 ;;  buf             1   32[COMRAM] unsigned char 
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8089 ;; Tracked objects:
  8090 ;;		On entry : F/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8094 ;;      Params:         2       0       0       0
  8095 ;;      Locals:         2       0       0       0
  8096 ;;      Temps:          1       0       0       0
  8097 ;;      Totals:         5       0       0       0
  8098 ;;Total ram usage:        5 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    4
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_main
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text13
  8109  002558                     __ptext13:
  8110                           	opt stack 0
  8111  002558                     _TimeFormat:
  8112                           	opt stack 26
  8113                           
  8114                           ;incstack = 0
  8115                           ;TimeFormat@ascii stored from wreg
  8116  002558  6E22               	movwf	TimeFormat@ascii,c
  8117                           
  8118                           ;DS1302.c: 217: if (*ascii< min || *ascii==0xff)
  8119  00255A  5022               	movf	TimeFormat@ascii,w,c
  8120  00255C  6ED9               	movwf	fsr2l,c
  8121  00255E  6ADA               	clrf	fsr2h,c
  8122  002560  501E               	movf	TimeFormat@min,w,c
  8123  002562  5CDE               	subwf	postinc2,w,c
  8124  002564  E305               	bnc	l5380
  8125  002566  5022               	movf	TimeFormat@ascii,w,c
  8126  002568  6ED9               	movwf	fsr2l,c
  8127  00256A  6ADA               	clrf	fsr2h,c
  8128  00256C  28DE               	incf	postinc2,w,c
  8129  00256E  E106               	bnz	l5384
  8130  002570                     l5380:
  8131                           
  8132                           ;DS1302.c: 218: {
  8133                           ;DS1302.c: 219: *ascii = max;
  8134  002570  5022               	movf	TimeFormat@ascii,w,c
  8135  002572  6ED9               	movwf	fsr2l,c
  8136  002574  6ADA               	clrf	fsr2h,c
  8137  002576  C01F  FFDF         	movff	TimeFormat@max,indf2
  8138  00257A  0012               	return	
  8139  00257C                     l5384:
  8140                           
  8141                           ;DS1302.c: 221: }
  8142                           ;DS1302.c: 222: if (*ascii > max)
  8143  00257C  5022               	movf	TimeFormat@ascii,w,c
  8144  00257E  6ED9               	movwf	fsr2l,c
  8145  002580  6ADA               	clrf	fsr2h,c
  8146  002582  50DE               	movf	postinc2,w,c
  8147  002584  5C1F               	subwf	TimeFormat@max,w,c
  8148  002586  E206               	bc	l5390
  8149                           
  8150                           ;DS1302.c: 223: {
  8151                           ;DS1302.c: 224: *ascii = min;
  8152  002588  5022               	movf	TimeFormat@ascii,w,c
  8153  00258A  6ED9               	movwf	fsr2l,c
  8154  00258C  6ADA               	clrf	fsr2h,c
  8155  00258E  C01E  FFDF         	movff	TimeFormat@min,indf2
  8156  002592  0012               	return	
  8157  002594                     l5390:
  8158                           
  8159                           ;DS1302.c: 226: }
  8160                           ;DS1302.c: 242: char buf=*ascii & 0x0f;
  8161  002594  5022               	movf	TimeFormat@ascii,w,c
  8162  002596  6ED9               	movwf	fsr2l,c
  8163  002598  6ADA               	clrf	fsr2h,c
  8164  00259A  50DF               	movf	indf2,w,c
  8165  00259C  0B0F               	andlw	15
  8166  00259E  6E21               	movwf	TimeFormat@buf,c
  8167                           
  8168                           ;DS1302.c: 243: if (buf == 0x0a)
  8169  0025A0  0E0A               	movlw	10
  8170  0025A2  1821               	xorwf	TimeFormat@buf,w,c
  8171  0025A4  E10A               	bnz	l5396
  8172                           
  8173                           ;DS1302.c: 244: {
  8174                           ;DS1302.c: 245: *ascii = (*ascii & 0xf0) + 0x10;
  8175  0025A6  5022               	movf	TimeFormat@ascii,w,c
  8176  0025A8  6ED9               	movwf	fsr2l,c
  8177  0025AA  6ADA               	clrf	fsr2h,c
  8178  0025AC  5022               	movf	TimeFormat@ascii,w,c
  8179  0025AE  6EE1               	movwf	fsr1l,c
  8180  0025B0  6AE2               	clrf	fsr1h,c
  8181  0025B2  50E7               	movf	indf1,w,c
  8182  0025B4  0BF0               	andlw	240
  8183  0025B6  0F10               	addlw	16
  8184  0025B8  6EDF               	movwf	indf2,c
  8185  0025BA                     l5396:
  8186                           
  8187                           ;DS1302.c: 246: }
  8188                           ;DS1302.c: 247: if(buf == 0x0f)
  8189  0025BA  0E0F               	movlw	15
  8190  0025BC  1821               	xorwf	TimeFormat@buf,w,c
  8191  0025BE  A4D8               	btfss	status,2,c
  8192  0025C0  0012               	return	
  8193                           
  8194                           ;DS1302.c: 248: {
  8195                           ;DS1302.c: 249: *ascii = 0x09 + (*ascii & 0xf0);
  8196  0025C2  5022               	movf	TimeFormat@ascii,w,c
  8197  0025C4  6ED9               	movwf	fsr2l,c
  8198  0025C6  6ADA               	clrf	fsr2h,c
  8199  0025C8  5022               	movf	TimeFormat@ascii,w,c
  8200  0025CA  6EE1               	movwf	fsr1l,c
  8201  0025CC  6AE2               	clrf	fsr1h,c
  8202  0025CE  50E7               	movf	indf1,w,c
  8203  0025D0  0BF0               	andlw	240
  8204  0025D2  0F09               	addlw	9
  8205  0025D4  6EDF               	movwf	indf2,c
  8206  0025D6  0012               	return		;funcret
  8207  0025D8                     __end_of_TimeFormat:
  8208                           	opt stack 0
  8209                           tblptru	equ	0xFF8
  8210                           tblptrh	equ	0xFF7
  8211                           tblptrl	equ	0xFF6
  8212                           tablat	equ	0xFF5
  8213                           prodl	equ	0xFF3
  8214                           intcon	equ	0xFF2
  8215                           postinc0	equ	0xFEE
  8216                           wreg	equ	0xFE8
  8217                           indf1	equ	0xFE7
  8218                           postinc1	equ	0xFE6
  8219                           postdec1	equ	0xFE5
  8220                           fsr1h	equ	0xFE2
  8221                           fsr1l	equ	0xFE1
  8222                           indf2	equ	0xFDF
  8223                           postinc2	equ	0xFDE
  8224                           postdec2	equ	0xFDD
  8225                           fsr2h	equ	0xFDA
  8226                           fsr2l	equ	0xFD9
  8227                           status	equ	0xFD8
  8228                           
  8229 ;; *************** function _SetPage *****************
  8230 ;; Defined at:
  8231 ;;		line 383 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  mp              2   45[BANK0 ] struct MotorPara
  8234 ;;  lev             2   47[BANK0 ] int 
  8235 ;;  x               1   49[BANK0 ] unsigned char 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  buf             4   50[BANK0 ] unsigned char [4]
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1    wreg      void 
  8240 ;; Registers used:
  8241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8242 ;; Tracked objects:
  8243 ;;		On entry : F/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8247 ;;      Params:         0       5       0       0
  8248 ;;      Locals:         0       4       0       0
  8249 ;;      Temps:          0       0       0       0
  8250 ;;      Totals:         0       9       0       0
  8251 ;;Total ram usage:        9 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    8
  8254 ;; This function calls:
  8255 ;;		_LCD_HZ
  8256 ;;		_LCD_P8x16Str
  8257 ;;		___lbmod
  8258 ;;		_itoa
  8259 ;; This function is called by:
  8260 ;;		_main
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text14
  8265  000E1A                     __ptext14:
  8266                           	opt stack 0
  8267  000E1A                     _SetPage:
  8268                           	opt stack 22
  8269                           
  8270                           ; BSR set to: 0
  8271                           ;LCD.c: 385: LCD_P8x16Str(16,2,"  ");LCD_P8x16Str(16,4,"  ");LCD_P8x16Str(16,6,"  ");
  8272                           
  8273                           ;incstack = 0
  8274  000E1A  0E02               	movlw	2
  8275  000E1C  6E22               	movwf	LCD_P8x16Str@y,c
  8276  000E1E  0EEE               	movlw	low (STR_24+2)
  8277  000E20  6E23               	movwf	LCD_P8x16Str@ch,c
  8278  000E22  0E3F               	movlw	high (STR_24+2)
  8279  000E24  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8280  000E26  0E10               	movlw	16
  8281  000E28  EC34  F00E         	call	_LCD_P8x16Str
  8282  000E2C  0E04               	movlw	4
  8283  000E2E  6E22               	movwf	LCD_P8x16Str@y,c
  8284  000E30  0EEE               	movlw	low (STR_24+2)
  8285  000E32  6E23               	movwf	LCD_P8x16Str@ch,c
  8286  000E34  0E3F               	movlw	high (STR_24+2)
  8287  000E36  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8288  000E38  0E10               	movlw	16
  8289  000E3A  EC34  F00E         	call	_LCD_P8x16Str
  8290  000E3E  0E06               	movlw	6
  8291  000E40  6E22               	movwf	LCD_P8x16Str@y,c
  8292  000E42  0EEE               	movlw	low (STR_24+2)
  8293  000E44  6E23               	movwf	LCD_P8x16Str@ch,c
  8294  000E46  0E3F               	movlw	high (STR_24+2)
  8295  000E48  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8296  000E4A  0E10               	movlw	16
  8297  000E4C  EC34  F00E         	call	_LCD_P8x16Str
  8298                           
  8299                           ;LCD.c: 386: LCD_P8x16Str(16,(x%3+1)*2,"->");
  8300  000E50  0E03               	movlw	3
  8301  000E52  6E1E               	movwf	___lbmod@divisor,c
  8302  000E54  0100               	movlb	0	; () banked
  8303  000E56  5191               	movf	SetPage@x& (0+255),w,b
  8304  000E58  EC7A  F017         	call	___lbmod
  8305  000E5C  0D02               	mullw	2
  8306  000E5E  50F3               	movf	prodl,w,c
  8307  000E60  0F02               	addlw	2
  8308  000E62  6E22               	movwf	LCD_P8x16Str@y,c
  8309  000E64  0EF4               	movlw	low STR_4
  8310  000E66  6E23               	movwf	LCD_P8x16Str@ch,c
  8311  000E68  0E3F               	movlw	high STR_4
  8312  000E6A  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8313  000E6C  0E10               	movlw	16
  8314  000E6E  EC34  F00E         	call	_LCD_P8x16Str
  8315                           
  8316                           ;LCD.c: 388: unsigned char buf[4];
  8317                           ;LCD.c: 390: LCD_HZ(32,0,F16x16_HZ,26);LCD_HZ(48,0,F16x16_HZ,27);LCD_HZ(64,0,F16x16_HZ,2
      +                          8);
  8318  000E72  6A22               	clrf	LCD_HZ@y,c
  8319  000E74  0E1F               	movlw	low _F16x16_HZ
  8320  000E76  6E23               	movwf	LCD_HZ@data,c
  8321  000E78  0E35               	movlw	high _F16x16_HZ
  8322  000E7A  6E24               	movwf	LCD_HZ@data+1,c
  8323  000E7C  0E1A               	movlw	26
  8324  000E7E  6E25               	movwf	LCD_HZ@N,c
  8325  000E80  0E20               	movlw	32
  8326  000E82  EC28  F013         	call	_LCD_HZ
  8327  000E86  6A22               	clrf	LCD_HZ@y,c
  8328  000E88  0E1F               	movlw	low _F16x16_HZ
  8329  000E8A  6E23               	movwf	LCD_HZ@data,c
  8330  000E8C  0E35               	movlw	high _F16x16_HZ
  8331  000E8E  6E24               	movwf	LCD_HZ@data+1,c
  8332  000E90  0E1B               	movlw	27
  8333  000E92  6E25               	movwf	LCD_HZ@N,c
  8334  000E94  0E30               	movlw	48
  8335  000E96  EC28  F013         	call	_LCD_HZ
  8336  000E9A  6A22               	clrf	LCD_HZ@y,c
  8337  000E9C  0E1F               	movlw	low _F16x16_HZ
  8338  000E9E  6E23               	movwf	LCD_HZ@data,c
  8339  000EA0  0E35               	movlw	high _F16x16_HZ
  8340  000EA2  6E24               	movwf	LCD_HZ@data+1,c
  8341  000EA4  0E1C               	movlw	28
  8342  000EA6  6E25               	movwf	LCD_HZ@N,c
  8343  000EA8  0E40               	movlw	64
  8344  000EAA  EC28  F013         	call	_LCD_HZ
  8345                           
  8346                           ;LCD.c: 391: LCD_HZ(80,0,F16x16_HZ,29);LCD_HZ(96,0,F16x16_HZ,42);LCD_HZ(112,0,F16x16_HZ,
      +                          43);
  8347  000EAE  6A22               	clrf	LCD_HZ@y,c
  8348  000EB0  0E1F               	movlw	low _F16x16_HZ
  8349  000EB2  6E23               	movwf	LCD_HZ@data,c
  8350  000EB4  0E35               	movlw	high _F16x16_HZ
  8351  000EB6  6E24               	movwf	LCD_HZ@data+1,c
  8352  000EB8  0E1D               	movlw	29
  8353  000EBA  6E25               	movwf	LCD_HZ@N,c
  8354  000EBC  0E50               	movlw	80
  8355  000EBE  EC28  F013         	call	_LCD_HZ
  8356  000EC2  6A22               	clrf	LCD_HZ@y,c
  8357  000EC4  0E1F               	movlw	low _F16x16_HZ
  8358  000EC6  6E23               	movwf	LCD_HZ@data,c
  8359  000EC8  0E35               	movlw	high _F16x16_HZ
  8360  000ECA  6E24               	movwf	LCD_HZ@data+1,c
  8361  000ECC  0E2A               	movlw	42
  8362  000ECE  6E25               	movwf	LCD_HZ@N,c
  8363  000ED0  0E60               	movlw	96
  8364  000ED2  EC28  F013         	call	_LCD_HZ
  8365  000ED6  6A22               	clrf	LCD_HZ@y,c
  8366  000ED8  0E1F               	movlw	low _F16x16_HZ
  8367  000EDA  6E23               	movwf	LCD_HZ@data,c
  8368  000EDC  0E35               	movlw	high _F16x16_HZ
  8369  000EDE  6E24               	movwf	LCD_HZ@data+1,c
  8370  000EE0  0E2B               	movlw	43
  8371  000EE2  6E25               	movwf	LCD_HZ@N,c
  8372  000EE4  0E70               	movlw	112
  8373  000EE6  EC28  F013         	call	_LCD_HZ
  8374                           
  8375                           ;LCD.c: 393: LCD_HZ(32,2,F16x16_HZ,12);LCD_HZ(48,2,F16x16_HZ,13);LCD_P8x16Str(64,2,":");
  8376  000EEA  0E02               	movlw	2
  8377  000EEC  6E22               	movwf	LCD_HZ@y,c
  8378  000EEE  0E1F               	movlw	low _F16x16_HZ
  8379  000EF0  6E23               	movwf	LCD_HZ@data,c
  8380  000EF2  0E35               	movlw	high _F16x16_HZ
  8381  000EF4  6E24               	movwf	LCD_HZ@data+1,c
  8382  000EF6  0E0C               	movlw	12
  8383  000EF8  6E25               	movwf	LCD_HZ@N,c
  8384  000EFA  0E20               	movlw	32
  8385  000EFC  EC28  F013         	call	_LCD_HZ
  8386  000F00  0E02               	movlw	2
  8387  000F02  6E22               	movwf	LCD_HZ@y,c
  8388  000F04  0E1F               	movlw	low _F16x16_HZ
  8389  000F06  6E23               	movwf	LCD_HZ@data,c
  8390  000F08  0E35               	movlw	high _F16x16_HZ
  8391  000F0A  6E24               	movwf	LCD_HZ@data+1,c
  8392  000F0C  0E0D               	movlw	13
  8393  000F0E  6E25               	movwf	LCD_HZ@N,c
  8394  000F10  0E30               	movlw	48
  8395  000F12  EC28  F013         	call	_LCD_HZ
  8396  000F16  0E02               	movlw	2
  8397  000F18  6E22               	movwf	LCD_P8x16Str@y,c
  8398  000F1A  0EFD               	movlw	low STR_5
  8399  000F1C  6E23               	movwf	LCD_P8x16Str@ch,c
  8400  000F1E  0E3F               	movlw	high STR_5
  8401  000F20  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8402  000F22  0E40               	movlw	64
  8403  000F24  EC34  F00E         	call	_LCD_P8x16Str
  8404                           
  8405                           ;LCD.c: 394: itoa(buf,lev,10);
  8406  000F28  C08F  F087         	movff	SetPage@lev,itoa@val
  8407  000F2C  C090  F088         	movff	SetPage@lev+1,itoa@val+1
  8408  000F30  0100               	movlb	0	; () banked
  8409  000F32  6B8A               	clrf	(itoa@base+1)& (0+255),b
  8410  000F34  0E0A               	movlw	10
  8411  000F36  6F89               	movwf	itoa@base& (0+255),b
  8412  000F38  0E92               	movlw	SetPage@buf& (0+255)
  8413  000F3A  EC9A  F016         	call	_itoa
  8414                           
  8415                           ;LCD.c: 396: LCD_P8x16Str(80,2,buf);
  8416  000F3E  0E02               	movlw	2
  8417  000F40  6E22               	movwf	LCD_P8x16Str@y,c
  8418  000F42  0E92               	movlw	low SetPage@buf
  8419  000F44  6E23               	movwf	LCD_P8x16Str@ch,c
  8420  000F46  6A24               	clrf	LCD_P8x16Str@ch+1,c
  8421  000F48  0E50               	movlw	80
  8422  000F4A  EC34  F00E         	call	_LCD_P8x16Str
  8423                           
  8424                           ;LCD.c: 398: LCD_HZ(32,4,F16x16_HZ,44);LCD_HZ(48,4,F16x16_HZ,45);LCD_HZ(64,4,F16x16_HZ,4
      +                          6);LCD_P8x16Str(80,4,":");
  8425  000F4E  0E04               	movlw	4
  8426  000F50  6E22               	movwf	LCD_HZ@y,c
  8427  000F52  0E1F               	movlw	low _F16x16_HZ
  8428  000F54  6E23               	movwf	LCD_HZ@data,c
  8429  000F56  0E35               	movlw	high _F16x16_HZ
  8430  000F58  6E24               	movwf	LCD_HZ@data+1,c
  8431  000F5A  0E2C               	movlw	44
  8432  000F5C  6E25               	movwf	LCD_HZ@N,c
  8433  000F5E  0E20               	movlw	32
  8434  000F60  EC28  F013         	call	_LCD_HZ
  8435  000F64  0E04               	movlw	4
  8436  000F66  6E22               	movwf	LCD_HZ@y,c
  8437  000F68  0E1F               	movlw	low _F16x16_HZ
  8438  000F6A  6E23               	movwf	LCD_HZ@data,c
  8439  000F6C  0E35               	movlw	high _F16x16_HZ
  8440  000F6E  6E24               	movwf	LCD_HZ@data+1,c
  8441  000F70  0E2D               	movlw	45
  8442  000F72  6E25               	movwf	LCD_HZ@N,c
  8443  000F74  0E30               	movlw	48
  8444  000F76  EC28  F013         	call	_LCD_HZ
  8445  000F7A  0E04               	movlw	4
  8446  000F7C  6E22               	movwf	LCD_HZ@y,c
  8447  000F7E  0E1F               	movlw	low _F16x16_HZ
  8448  000F80  6E23               	movwf	LCD_HZ@data,c
  8449  000F82  0E35               	movlw	high _F16x16_HZ
  8450  000F84  6E24               	movwf	LCD_HZ@data+1,c
  8451  000F86  0E2E               	movlw	46
  8452  000F88  6E25               	movwf	LCD_HZ@N,c
  8453  000F8A  0E40               	movlw	64
  8454  000F8C  EC28  F013         	call	_LCD_HZ
  8455  000F90  0E04               	movlw	4
  8456  000F92  6E22               	movwf	LCD_P8x16Str@y,c
  8457  000F94  0EFD               	movlw	low STR_5
  8458  000F96  6E23               	movwf	LCD_P8x16Str@ch,c
  8459  000F98  0E3F               	movlw	high STR_5
  8460  000F9A  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8461  000F9C  0E50               	movlw	80
  8462  000F9E  EC34  F00E         	call	_LCD_P8x16Str
  8463                           
  8464                           ;LCD.c: 399: itoa(buf,mp.duty,10);
  8465  000FA2  C08D  F087         	movff	SetPage@mp,itoa@val
  8466  000FA6  0100               	movlb	0	; () banked
  8467  000FA8  6B88               	clrf	(itoa@val+1)& (0+255),b
  8468  000FAA  6B8A               	clrf	(itoa@base+1)& (0+255),b
  8469  000FAC  0E0A               	movlw	10
  8470  000FAE  6F89               	movwf	itoa@base& (0+255),b
  8471  000FB0  0E92               	movlw	SetPage@buf& (0+255)
  8472  000FB2  EC9A  F016         	call	_itoa
  8473                           
  8474                           ;LCD.c: 401: LCD_P8x16Str(96,4,buf);if(mp.duty<10){LCD_P8x16Str(104,4,"  ");}if(mp.duty<
      +                          100){LCD_P8x16Str(112,4," ");}
  8475  000FB6  0E04               	movlw	4
  8476  000FB8  6E22               	movwf	LCD_P8x16Str@y,c
  8477  000FBA  0E92               	movlw	low SetPage@buf
  8478  000FBC  6E23               	movwf	LCD_P8x16Str@ch,c
  8479  000FBE  6A24               	clrf	LCD_P8x16Str@ch+1,c
  8480  000FC0  0E60               	movlw	96
  8481  000FC2  EC34  F00E         	call	_LCD_P8x16Str
  8482  000FC6  0E0A               	movlw	10
  8483  000FC8  0100               	movlb	0	; () banked
  8484  000FCA  618D               	cpfslt	SetPage@mp& (0+255),b
  8485  000FCC  D009               	goto	l4890
  8486                           
  8487                           ; BSR set to: 0
  8488  000FCE  0E04               	movlw	4
  8489  000FD0  6E22               	movwf	LCD_P8x16Str@y,c
  8490  000FD2  0EEE               	movlw	low (STR_24+2)
  8491  000FD4  6E23               	movwf	LCD_P8x16Str@ch,c
  8492  000FD6  0E3F               	movlw	high (STR_24+2)
  8493  000FD8  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8494  000FDA  0E68               	movlw	104
  8495  000FDC  EC34  F00E         	call	_LCD_P8x16Str
  8496  000FE0                     l4890:
  8497  000FE0  0E64               	movlw	100
  8498  000FE2  0100               	movlb	0	; () banked
  8499  000FE4  618D               	cpfslt	SetPage@mp& (0+255),b
  8500  000FE6  D009               	goto	l4894
  8501                           
  8502                           ; BSR set to: 0
  8503  000FE8  0E04               	movlw	4
  8504  000FEA  6E22               	movwf	LCD_P8x16Str@y,c
  8505  000FEC  0EEF               	movlw	low (STR_24+3)
  8506  000FEE  6E23               	movwf	LCD_P8x16Str@ch,c
  8507  000FF0  0E3F               	movlw	high (STR_24+3)
  8508  000FF2  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8509  000FF4  0E70               	movlw	112
  8510  000FF6  EC34  F00E         	call	_LCD_P8x16Str
  8511  000FFA                     l4894:
  8512                           
  8513                           ;LCD.c: 403: LCD_HZ(32,6,F16x16_HZ,14);LCD_HZ(48,6,F16x16_HZ,15);LCD_HZ(64,6,F16x16_HZ,1
      +                          6);LCD_HZ(80,6,F16x16_HZ,17);LCD_P8x16Str(96,6,":");
  8514  000FFA  0E06               	movlw	6
  8515  000FFC  6E22               	movwf	LCD_HZ@y,c
  8516  000FFE  0E1F               	movlw	low _F16x16_HZ
  8517  001000  6E23               	movwf	LCD_HZ@data,c
  8518  001002  0E35               	movlw	high _F16x16_HZ
  8519  001004  6E24               	movwf	LCD_HZ@data+1,c
  8520  001006  0E0E               	movlw	14
  8521  001008  6E25               	movwf	LCD_HZ@N,c
  8522  00100A  0E20               	movlw	32
  8523  00100C  EC28  F013         	call	_LCD_HZ
  8524  001010  0E06               	movlw	6
  8525  001012  6E22               	movwf	LCD_HZ@y,c
  8526  001014  0E1F               	movlw	low _F16x16_HZ
  8527  001016  6E23               	movwf	LCD_HZ@data,c
  8528  001018  0E35               	movlw	high _F16x16_HZ
  8529  00101A  6E24               	movwf	LCD_HZ@data+1,c
  8530  00101C  0E0F               	movlw	15
  8531  00101E  6E25               	movwf	LCD_HZ@N,c
  8532  001020  0E30               	movlw	48
  8533  001022  EC28  F013         	call	_LCD_HZ
  8534  001026  0E06               	movlw	6
  8535  001028  6E22               	movwf	LCD_HZ@y,c
  8536  00102A  0E1F               	movlw	low _F16x16_HZ
  8537  00102C  6E23               	movwf	LCD_HZ@data,c
  8538  00102E  0E35               	movlw	high _F16x16_HZ
  8539  001030  6E24               	movwf	LCD_HZ@data+1,c
  8540  001032  0E10               	movlw	16
  8541  001034  6E25               	movwf	LCD_HZ@N,c
  8542  001036  0E40               	movlw	64
  8543  001038  EC28  F013         	call	_LCD_HZ
  8544  00103C  0E06               	movlw	6
  8545  00103E  6E22               	movwf	LCD_HZ@y,c
  8546  001040  0E1F               	movlw	low _F16x16_HZ
  8547  001042  6E23               	movwf	LCD_HZ@data,c
  8548  001044  0E35               	movlw	high _F16x16_HZ
  8549  001046  6E24               	movwf	LCD_HZ@data+1,c
  8550  001048  0E11               	movlw	17
  8551  00104A  6E25               	movwf	LCD_HZ@N,c
  8552  00104C  0E50               	movlw	80
  8553  00104E  EC28  F013         	call	_LCD_HZ
  8554  001052  0E06               	movlw	6
  8555  001054  6E22               	movwf	LCD_P8x16Str@y,c
  8556  001056  0EFD               	movlw	low STR_5
  8557  001058  6E23               	movwf	LCD_P8x16Str@ch,c
  8558  00105A  0E3F               	movlw	high STR_5
  8559  00105C  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8560  00105E  0E60               	movlw	96
  8561  001060  EC34  F00E         	call	_LCD_P8x16Str
  8562                           
  8563                           ;LCD.c: 404: itoa(buf,mp.hits,10);
  8564  001064  C08E  F087         	movff	SetPage@mp+1,itoa@val
  8565  001068  0100               	movlb	0	; () banked
  8566  00106A  6B88               	clrf	(itoa@val+1)& (0+255),b
  8567  00106C  6B8A               	clrf	(itoa@base+1)& (0+255),b
  8568  00106E  0E0A               	movlw	10
  8569  001070  6F89               	movwf	itoa@base& (0+255),b
  8570  001072  0E92               	movlw	SetPage@buf& (0+255)
  8571  001074  EC9A  F016         	call	_itoa
  8572                           
  8573                           ;LCD.c: 406: LCD_P8x16Str(104,6,buf);if(mp.hits<10){LCD_P8x16Str(112,6,"  ");}if(mp.hits
      +                          <100){LCD_P8x16Str(120,6," ");}
  8574  001078  0E06               	movlw	6
  8575  00107A  6E22               	movwf	LCD_P8x16Str@y,c
  8576  00107C  0E92               	movlw	low SetPage@buf
  8577  00107E  6E23               	movwf	LCD_P8x16Str@ch,c
  8578  001080  6A24               	clrf	LCD_P8x16Str@ch+1,c
  8579  001082  0E68               	movlw	104
  8580  001084  EC34  F00E         	call	_LCD_P8x16Str
  8581  001088  0E0A               	movlw	10
  8582  00108A  0100               	movlb	0	; () banked
  8583  00108C  618E               	cpfslt	(SetPage@mp+1)& (0+255),b
  8584  00108E  D009               	goto	l4910
  8585                           
  8586                           ; BSR set to: 0
  8587  001090  0E06               	movlw	6
  8588  001092  6E22               	movwf	LCD_P8x16Str@y,c
  8589  001094  0EEE               	movlw	low (STR_24+2)
  8590  001096  6E23               	movwf	LCD_P8x16Str@ch,c
  8591  001098  0E3F               	movlw	high (STR_24+2)
  8592  00109A  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8593  00109C  0E70               	movlw	112
  8594  00109E  EC34  F00E         	call	_LCD_P8x16Str
  8595  0010A2                     l4910:
  8596  0010A2  0E64               	movlw	100
  8597  0010A4  0100               	movlb	0	; () banked
  8598  0010A6  618E               	cpfslt	(SetPage@mp+1)& (0+255),b
  8599  0010A8  0C64               	retlw	100
  8600                           
  8601                           ; BSR set to: 0
  8602  0010AA  0E06               	movlw	6
  8603  0010AC  6E22               	movwf	LCD_P8x16Str@y,c
  8604  0010AE  0EEF               	movlw	low (STR_24+3)
  8605  0010B0  6E23               	movwf	LCD_P8x16Str@ch,c
  8606  0010B2  0E3F               	movlw	high (STR_24+3)
  8607  0010B4  6E24               	movwf	LCD_P8x16Str@ch+1,c
  8608  0010B6  0E78               	movlw	120
  8609  0010B8  EF34  F00E         	goto	_LCD_P8x16Str
  8610  0010BC                     __end_of_SetPage:
  8611                           	opt stack 0
  8612                           tblptru	equ	0xFF8
  8613                           tblptrh	equ	0xFF7
  8614                           tblptrl	equ	0xFF6
  8615                           tablat	equ	0xFF5
  8616                           prodl	equ	0xFF3
  8617                           intcon	equ	0xFF2
  8618                           postinc0	equ	0xFEE
  8619                           wreg	equ	0xFE8
  8620                           indf1	equ	0xFE7
  8621                           postinc1	equ	0xFE6
  8622                           postdec1	equ	0xFE5
  8623                           fsr1h	equ	0xFE2
  8624                           fsr1l	equ	0xFE1
  8625                           indf2	equ	0xFDF
  8626                           postinc2	equ	0xFDE
  8627                           postdec2	equ	0xFDD
  8628                           fsr2h	equ	0xFDA
  8629                           fsr2l	equ	0xFD9
  8630                           status	equ	0xFD8
  8631                           
  8632 ;; *************** function _SetOKPage *****************
  8633 ;; Defined at:
  8634 ;;		line 615 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;		None
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;		None
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  1    wreg      void 
  8641 ;; Registers used:
  8642 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8648 ;;      Params:         0       0       0       0
  8649 ;;      Locals:         0       0       0       0
  8650 ;;      Temps:          0       0       0       0
  8651 ;;      Totals:         0       0       0       0
  8652 ;;Total ram usage:        0 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; Hardware stack levels required when called:    8
  8655 ;; This function calls:
  8656 ;;		_LCD_HZ
  8657 ;;		_LCD_P8x16Sp
  8658 ;; This function is called by:
  8659 ;;		_main
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           	psect	text15
  8664  0026C8                     __ptext15:
  8665                           	opt stack 0
  8666  0026C8                     _SetOKPage:
  8667                           	opt stack 22
  8668                           
  8669                           ;LCD.c: 617: LCD_HZ(24,2,F16x16_HZ,28);
  8670                           
  8671                           ;incstack = 0
  8672  0026C8  0E02               	movlw	2
  8673  0026CA  6E22               	movwf	LCD_HZ@y,c
  8674  0026CC  0E1F               	movlw	low _F16x16_HZ
  8675  0026CE  6E23               	movwf	LCD_HZ@data,c
  8676  0026D0  0E35               	movlw	high _F16x16_HZ
  8677  0026D2  6E24               	movwf	LCD_HZ@data+1,c
  8678  0026D4  0E1C               	movlw	28
  8679  0026D6  6E25               	movwf	LCD_HZ@N,c
  8680  0026D8  0E18               	movlw	24
  8681  0026DA  EC28  F013         	call	_LCD_HZ
  8682                           
  8683                           ;LCD.c: 618: LCD_HZ(40,2,F16x16_HZ,29);
  8684  0026DE  0E02               	movlw	2
  8685  0026E0  6E22               	movwf	LCD_HZ@y,c
  8686  0026E2  0E1F               	movlw	low _F16x16_HZ
  8687  0026E4  6E23               	movwf	LCD_HZ@data,c
  8688  0026E6  0E35               	movlw	high _F16x16_HZ
  8689  0026E8  6E24               	movwf	LCD_HZ@data+1,c
  8690  0026EA  0E1D               	movlw	29
  8691  0026EC  6E25               	movwf	LCD_HZ@N,c
  8692  0026EE  0E28               	movlw	40
  8693  0026F0  EC28  F013         	call	_LCD_HZ
  8694                           
  8695                           ;LCD.c: 619: LCD_HZ(56,2,F16x16_HZ,42);
  8696  0026F4  0E02               	movlw	2
  8697  0026F6  6E22               	movwf	LCD_HZ@y,c
  8698  0026F8  0E1F               	movlw	low _F16x16_HZ
  8699  0026FA  6E23               	movwf	LCD_HZ@data,c
  8700  0026FC  0E35               	movlw	high _F16x16_HZ
  8701  0026FE  6E24               	movwf	LCD_HZ@data+1,c
  8702  002700  0E2A               	movlw	42
  8703  002702  6E25               	movwf	LCD_HZ@N,c
  8704  002704  0E38               	movlw	56
  8705  002706  EC28  F013         	call	_LCD_HZ
  8706                           
  8707                           ;LCD.c: 620: LCD_HZ(72,2,F16x16_HZ,43);
  8708  00270A  0E02               	movlw	2
  8709  00270C  6E22               	movwf	LCD_HZ@y,c
  8710  00270E  0E1F               	movlw	low _F16x16_HZ
  8711  002710  6E23               	movwf	LCD_HZ@data,c
  8712  002712  0E35               	movlw	high _F16x16_HZ
  8713  002714  6E24               	movwf	LCD_HZ@data+1,c
  8714  002716  0E2B               	movlw	43
  8715  002718  6E25               	movwf	LCD_HZ@N,c
  8716  00271A  0E48               	movlw	72
  8717  00271C  EC28  F013         	call	_LCD_HZ
  8718                           
  8719                           ;LCD.c: 621: LCD_P8x16Sp(88,2,'O');
  8720  002720  0E02               	movlw	2
  8721  002722  6E22               	movwf	LCD_P8x16Sp@y,c
  8722  002724  0E4F               	movlw	79
  8723  002726  6E23               	movwf	LCD_P8x16Sp@ch,c
  8724  002728  0E58               	movlw	88
  8725  00272A  ECC0  F00E         	call	_LCD_P8x16Sp
  8726                           
  8727                           ;LCD.c: 622: LCD_P8x16Sp(96,2,'K');
  8728  00272E  0E02               	movlw	2
  8729  002730  6E22               	movwf	LCD_P8x16Sp@y,c
  8730  002732  0E4B               	movlw	75
  8731  002734  6E23               	movwf	LCD_P8x16Sp@ch,c
  8732  002736  0E60               	movlw	96
  8733  002738  EFC0  F00E         	goto	_LCD_P8x16Sp
  8734  00273C                     __end_of_SetOKPage:
  8735                           	opt stack 0
  8736                           tblptru	equ	0xFF8
  8737                           tblptrh	equ	0xFF7
  8738                           tblptrl	equ	0xFF6
  8739                           tablat	equ	0xFF5
  8740                           prodl	equ	0xFF3
  8741                           intcon	equ	0xFF2
  8742                           postinc0	equ	0xFEE
  8743                           wreg	equ	0xFE8
  8744                           indf1	equ	0xFE7
  8745                           postinc1	equ	0xFE6
  8746                           postdec1	equ	0xFE5
  8747                           fsr1h	equ	0xFE2
  8748                           fsr1l	equ	0xFE1
  8749                           indf2	equ	0xFDF
  8750                           postinc2	equ	0xFDE
  8751                           postdec2	equ	0xFDD
  8752                           fsr2h	equ	0xFDA
  8753                           fsr2l	equ	0xFD9
  8754                           status	equ	0xFD8
  8755                           
  8756 ;; *************** function _SetDefaultPara *****************
  8757 ;; Defined at:
  8758 ;;		line 33 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/motor.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2, status,0, cstack
  8767 ;; Tracked objects:
  8768 ;;		On entry : F/0
  8769 ;;		On exit  : F/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8772 ;;      Params:         0       0       0       0
  8773 ;;      Locals:         0       0       0       0
  8774 ;;      Temps:          0       0       0       0
  8775 ;;      Totals:         0       0       0       0
  8776 ;;Total ram usage:        0 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; Hardware stack levels required when called:    6
  8779 ;; This function calls:
  8780 ;;		_write_F
  8781 ;; This function is called by:
  8782 ;;		_main
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text16
  8787  002242                     __ptext16:
  8788                           	opt stack 0
  8789  002242                     _SetDefaultPara:
  8790                           	opt stack 24
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;motor.c: 35: write_F(0x1e,0x00);write_F(0x64,0x01);
  8794                           
  8795                           ;incstack = 0
  8796  002242  6A22               	clrf	write_F@address+1,c
  8797  002244  6A21               	clrf	write_F@address,c
  8798  002246  0E1E               	movlw	30
  8799  002248  EC66  F015         	call	_write_F
  8800  00224C  6A22               	clrf	write_F@address+1,c
  8801  00224E  0E01               	movlw	1
  8802  002250  6E21               	movwf	write_F@address,c
  8803  002252  0E64               	movlw	100
  8804  002254  EC66  F015         	call	_write_F
  8805                           
  8806                           ;motor.c: 36: write_F(0x32,0x02);write_F(0x46,0x03);
  8807  002258  6A22               	clrf	write_F@address+1,c
  8808  00225A  0E02               	movlw	2
  8809  00225C  6E21               	movwf	write_F@address,c
  8810  00225E  0E32               	movlw	50
  8811  002260  EC66  F015         	call	_write_F
  8812  002264  6A22               	clrf	write_F@address+1,c
  8813  002266  0E03               	movlw	3
  8814  002268  6E21               	movwf	write_F@address,c
  8815  00226A  0E46               	movlw	70
  8816  00226C  EC66  F015         	call	_write_F
  8817                           
  8818                           ;motor.c: 37: write_F(0x32,0x04);write_F(0x32,0x05);
  8819  002270  6A22               	clrf	write_F@address+1,c
  8820  002272  0E04               	movlw	4
  8821  002274  6E21               	movwf	write_F@address,c
  8822  002276  0E32               	movlw	50
  8823  002278  EC66  F015         	call	_write_F
  8824  00227C  6A22               	clrf	write_F@address+1,c
  8825  00227E  0E05               	movlw	5
  8826  002280  6E21               	movwf	write_F@address,c
  8827  002282  0E32               	movlw	50
  8828  002284  EC66  F015         	call	_write_F
  8829                           
  8830                           ;motor.c: 38: write_F(0x50,0x06);write_F(0x1e,0x07);
  8831  002288  6A22               	clrf	write_F@address+1,c
  8832  00228A  0E06               	movlw	6
  8833  00228C  6E21               	movwf	write_F@address,c
  8834  00228E  0E50               	movlw	80
  8835  002290  EC66  F015         	call	_write_F
  8836  002294  6A22               	clrf	write_F@address+1,c
  8837  002296  0E07               	movlw	7
  8838  002298  6E21               	movwf	write_F@address,c
  8839  00229A  0E1E               	movlw	30
  8840  00229C  EC66  F015         	call	_write_F
  8841                           
  8842                           ;motor.c: 39: write_F(0x64,0x08);write_F(0x0f,0x09);
  8843  0022A0  6A22               	clrf	write_F@address+1,c
  8844  0022A2  0E08               	movlw	8
  8845  0022A4  6E21               	movwf	write_F@address,c
  8846  0022A6  0E64               	movlw	100
  8847  0022A8  EC66  F015         	call	_write_F
  8848  0022AC  6A22               	clrf	write_F@address+1,c
  8849  0022AE  0E09               	movlw	9
  8850  0022B0  6E21               	movwf	write_F@address,c
  8851  0022B2  0E0F               	movlw	15
  8852  0022B4  EC66  F015         	call	_write_F
  8853                           
  8854                           ;motor.c: 40: write_F(0x00,0x0a);write_F(0x1e,0x0b);
  8855  0022B8  6A22               	clrf	write_F@address+1,c
  8856  0022BA  0E0A               	movlw	10
  8857  0022BC  6E21               	movwf	write_F@address,c
  8858  0022BE  0E00               	movlw	0
  8859  0022C0  EC66  F015         	call	_write_F
  8860  0022C4  6A22               	clrf	write_F@address+1,c
  8861  0022C6  0E0B               	movlw	11
  8862  0022C8  6E21               	movwf	write_F@address,c
  8863  0022CA  0E1E               	movlw	30
  8864  0022CC  EC66  F015         	call	_write_F
  8865                           
  8866                           ;motor.c: 41: Lev[0].duty=0x1e;Lev[0].hits=0x64;
  8867  0022D0  0E1E               	movlw	30
  8868  0022D2  0100               	movlb	0	; () banked
  8869  0022D4  6FA9               	movwf	_Lev& (0+255),b
  8870                           
  8871                           ; BSR set to: 0
  8872  0022D6  0E64               	movlw	100
  8873  0022D8  6FAA               	movwf	(_Lev+1)& (0+255),b
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;motor.c: 42: Lev[1].duty=0x32;Lev[1].hits=0x46;
  8877  0022DA  0E32               	movlw	50
  8878  0022DC  6FAB               	movwf	(_Lev+2)& (0+255),b
  8879                           
  8880                           ; BSR set to: 0
  8881  0022DE  0E46               	movlw	70
  8882  0022E0  6FAC               	movwf	(_Lev+3)& (0+255),b
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;motor.c: 43: Lev[2].duty=0x32;Lev[2].hits=0x32;
  8886  0022E2  0E32               	movlw	50
  8887  0022E4  6FAD               	movwf	(_Lev+4)& (0+255),b
  8888                           
  8889                           ; BSR set to: 0
  8890  0022E6  6FAE               	movwf	(_Lev+5)& (0+255),b
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;motor.c: 44: Lev[3].duty=0x50;Lev[3].hits=0x1e;
  8894  0022E8  0E50               	movlw	80
  8895  0022EA  6FAF               	movwf	(_Lev+6)& (0+255),b
  8896                           
  8897                           ; BSR set to: 0
  8898  0022EC  0E1E               	movlw	30
  8899  0022EE  6FB0               	movwf	(_Lev+7)& (0+255),b
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;motor.c: 45: Lev[4].duty=0x64;Lev[4].hits=0x0f;
  8903  0022F0  0E64               	movlw	100
  8904  0022F2  6FB1               	movwf	(_Lev+8)& (0+255),b
  8905                           
  8906                           ; BSR set to: 0
  8907  0022F4  0E0F               	movlw	15
  8908  0022F6  6FB2               	movwf	(_Lev+9)& (0+255),b
  8909                           
  8910                           ; BSR set to: 0
  8911  0022F8  0C0F               	retlw	15	;funcret
  8912  0022FA                     __end_of_SetDefaultPara:
  8913                           	opt stack 0
  8914                           tblptru	equ	0xFF8
  8915                           tblptrh	equ	0xFF7
  8916                           tblptrl	equ	0xFF6
  8917                           tablat	equ	0xFF5
  8918                           prodl	equ	0xFF3
  8919                           intcon	equ	0xFF2
  8920                           postinc0	equ	0xFEE
  8921                           wreg	equ	0xFE8
  8922                           indf1	equ	0xFE7
  8923                           postinc1	equ	0xFE6
  8924                           postdec1	equ	0xFE5
  8925                           fsr1h	equ	0xFE2
  8926                           fsr1l	equ	0xFE1
  8927                           indf2	equ	0xFDF
  8928                           postinc2	equ	0xFDE
  8929                           postdec2	equ	0xFDD
  8930                           fsr2h	equ	0xFDA
  8931                           fsr2l	equ	0xFD9
  8932                           status	equ	0xFD8
  8933                           
  8934 ;; *************** function _SET_DUTY *****************
  8935 ;; Defined at:
  8936 ;;		line 48 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/PWM.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  n               1    wreg     unsigned char 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;  n               1   33[BANK0 ] unsigned char 
  8941 ;;  temp            2   34[BANK0 ] int 
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  1    wreg      void 
  8944 ;; Registers used:
  8945 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : F/0
  8948 ;;		On exit  : F/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8951 ;;      Params:         0       0       0       0
  8952 ;;      Locals:         0       3       0       0
  8953 ;;      Temps:          0       0       0       0
  8954 ;;      Totals:         0       3       0       0
  8955 ;;Total ram usage:        3 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:    6
  8958 ;; This function calls:
  8959 ;;		___ftdiv
  8960 ;;		___ftmul
  8961 ;;		___fttol
  8962 ;;		___lbtoft
  8963 ;; This function is called by:
  8964 ;;		_main
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text17
  8969  0025D8                     __ptext17:
  8970                           	opt stack 0
  8971  0025D8                     _SET_DUTY:
  8972                           	opt stack 24
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;incstack = 0
  8976                           ;SET_DUTY@n stored from wreg
  8977  0025D8  6F81               	movwf	SET_DUTY@n& (0+255),b
  8978                           
  8979                           ;PWM.c: 50: int temp = (periodH * 256 + periodL) * 4.0 * n / 100.0;
  8980  0025DA  0100               	movlb	0	; () banked
  8981  0025DC  6B66               	clrf	___ftdiv@f2& (0+255),b
  8982  0025DE  0EC8               	movlw	200
  8983  0025E0  6F67               	movwf	(___ftdiv@f2+1)& (0+255),b
  8984  0025E2  0E42               	movlw	66
  8985  0025E4  6F68               	movwf	(___ftdiv@f2+2)& (0+255),b
  8986  0025E6  6A2D               	clrf	___ftmul@f2,c
  8987  0025E8  0EAA               	movlw	170
  8988  0025EA  6E2E               	movwf	___ftmul@f2+1,c
  8989  0025EC  0E43               	movlw	67
  8990  0025EE  6E2F               	movwf	___ftmul@f2+2,c
  8991  0025F0  5181               	movf	SET_DUTY@n& (0+255),w,b
  8992  0025F2  EC8D  F017         	call	___lbtoft
  8993  0025F6  C026  F02A         	movff	?___lbtoft,___ftmul@f1
  8994  0025FA  C027  F02B         	movff	?___lbtoft+1,___ftmul@f1+1
  8995  0025FE  C028  F02C         	movff	?___lbtoft+2,___ftmul@f1+2
  8996  002602  EC2C  F00F         	call	___ftmul	;wreg free
  8997  002606  C02A  F063         	movff	?___ftmul,___ftdiv@f1
  8998  00260A  C02B  F064         	movff	?___ftmul+1,___ftdiv@f1+1
  8999  00260E  C02C  F065         	movff	?___ftmul+2,___ftdiv@f1+2
  9000  002612  EC65  F010         	call	___ftdiv	;wreg free
  9001  002616  C063  F072         	movff	?___ftdiv,___fttol@f1
  9002  00261A  C064  F073         	movff	?___ftdiv+1,___fttol@f1+1
  9003  00261E  C065  F074         	movff	?___ftdiv+2,___fttol@f1+2
  9004  002622  ECC3  F010         	call	___fttol	;wreg free
  9005  002626  C072  F082         	movff	?___fttol,SET_DUTY@temp
  9006  00262A  C073  F083         	movff	?___fttol+1,SET_DUTY@temp+1
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;PWM.c: 51: dutyH = temp >> 8;
  9010  00262E  5183               	movf	(SET_DUTY@temp+1)& (0+255),w,b
  9011  002630  6FCC               	movwf	_dutyH& (0+255),b
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;PWM.c: 52: dutyL = temp & 0xff;
  9015  002632  C082  F0CD         	movff	SET_DUTY@temp,_dutyL
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;PWM.c: 54: PDC0H=dutyH;
  9019  002636  C0CC  FF78         	movff	_dutyH,3960	;volatile
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;PWM.c: 55: PDC0L=dutyL;
  9023  00263A  C0CD  FF79         	movff	_dutyL,3961	;volatile
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;PWM.c: 56: PDC1H=dutyH;
  9027  00263E  C0CC  FF76         	movff	_dutyH,3958	;volatile
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;PWM.c: 57: PDC1L=dutyL;
  9031  002642  C0CD  FF77         	movff	_dutyL,3959	;volatile
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;PWM.c: 58: PDC2H=dutyH;
  9035  002646  C0CC  FF74         	movff	_dutyH,3956	;volatile
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;PWM.c: 59: PDC2L=dutyL;
  9039  00264A  C0CD  FF75         	movff	_dutyL,3957	;volatile
  9040                           
  9041                           ; BSR set to: 0
  9042  00264E  0012               	return		;funcret
  9043  002650                     __end_of_SET_DUTY:
  9044                           	opt stack 0
  9045                           tblptru	equ	0xFF8
  9046                           tblptrh	equ	0xFF7
  9047                           tblptrl	equ	0xFF6
  9048                           tablat	equ	0xFF5
  9049                           prodl	equ	0xFF3
  9050                           intcon	equ	0xFF2
  9051                           postinc0	equ	0xFEE
  9052                           wreg	equ	0xFE8
  9053                           indf1	equ	0xFE7
  9054                           postinc1	equ	0xFE6
  9055                           postdec1	equ	0xFE5
  9056                           fsr1h	equ	0xFE2
  9057                           fsr1l	equ	0xFE1
  9058                           indf2	equ	0xFDF
  9059                           postinc2	equ	0xFDE
  9060                           postdec2	equ	0xFDD
  9061                           fsr2h	equ	0xFDA
  9062                           fsr2l	equ	0xFD9
  9063                           status	equ	0xFD8
  9064                           
  9065 ;; *************** function ___lbtoft *****************
  9066 ;; Defined at:
  9067 ;;		line 27 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lbtoft.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  c               1    wreg     unsigned char 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;  c               1   40[COMRAM] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  3   37[COMRAM] float 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9081 ;;      Params:         3       0       0       0
  9082 ;;      Locals:         1       0       0       0
  9083 ;;      Temps:          0       0       0       0
  9084 ;;      Totals:         4       0       0       0
  9085 ;;Total ram usage:        4 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    5
  9088 ;; This function calls:
  9089 ;;		___ftpack
  9090 ;; This function is called by:
  9091 ;;		_readAD
  9092 ;;		_SET_DUTY
  9093 ;;		_main
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           	psect	text18
  9098  002F1A                     __ptext18:
  9099                           	opt stack 0
  9100  002F1A                     ___lbtoft:
  9101                           	opt stack 24
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;incstack = 0
  9105                           ;___lbtoft@c stored from wreg
  9106  002F1A  6E29               	movwf	___lbtoft@c,c
  9107  002F1C  5029               	movf	___lbtoft@c,w,c
  9108  002F1E  6E1E               	movwf	___ftpack@arg,c
  9109  002F20  6A1F               	clrf	___ftpack@arg+1,c
  9110  002F22  6A20               	clrf	___ftpack@arg+2,c
  9111  002F24  0E8E               	movlw	142
  9112  002F26  6E21               	movwf	___ftpack@exp,c
  9113  002F28  0E00               	movlw	0
  9114  002F2A  6E22               	movwf	___ftpack@sign,c
  9115  002F2C  EC67  F012         	call	___ftpack	;wreg free
  9116  002F30  C01E  F026         	movff	?___ftpack,?___lbtoft
  9117  002F34  C01F  F027         	movff	?___ftpack+1,?___lbtoft+1
  9118  002F38  C020  F028         	movff	?___ftpack+2,?___lbtoft+2
  9119  002F3C  0012               	return		;funcret
  9120  002F3E                     __end_of___lbtoft:
  9121                           	opt stack 0
  9122                           tblptru	equ	0xFF8
  9123                           tblptrh	equ	0xFF7
  9124                           tblptrl	equ	0xFF6
  9125                           tablat	equ	0xFF5
  9126                           prodl	equ	0xFF3
  9127                           intcon	equ	0xFF2
  9128                           postinc0	equ	0xFEE
  9129                           wreg	equ	0xFE8
  9130                           indf1	equ	0xFE7
  9131                           postinc1	equ	0xFE6
  9132                           postdec1	equ	0xFE5
  9133                           fsr1h	equ	0xFE2
  9134                           fsr1l	equ	0xFE1
  9135                           indf2	equ	0xFDF
  9136                           postinc2	equ	0xFDE
  9137                           postdec2	equ	0xFDD
  9138                           fsr2h	equ	0xFDA
  9139                           fsr2l	equ	0xFD9
  9140                           status	equ	0xFD8
  9141                           
  9142 ;; *************** function ___ftdiv *****************
  9143 ;; Defined at:
  9144 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  f1              3    3[BANK0 ] float 
  9147 ;;  f2              3    6[BANK0 ] float 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  f3              3   13[BANK0 ] float 
  9150 ;;  sign            1   17[BANK0 ] unsigned char 
  9151 ;;  exp             1   16[BANK0 ] unsigned char 
  9152 ;;  cntr            1   12[BANK0 ] unsigned char 
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  3    3[BANK0 ] float 
  9155 ;; Registers used:
  9156 ;;		wreg, status,2, status,0, cstack
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9162 ;;      Params:         0       6       0       0
  9163 ;;      Locals:         0       6       0       0
  9164 ;;      Temps:          0       3       0       0
  9165 ;;      Totals:         0      15       0       0
  9166 ;;Total ram usage:       15 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; Hardware stack levels required when called:    5
  9169 ;; This function calls:
  9170 ;;		___ftpack
  9171 ;; This function is called by:
  9172 ;;		_SET_DUTY
  9173 ;;		_main
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text19
  9178  0020CA                     __ptext19:
  9179                           	opt stack 0
  9180  0020CA                     ___ftdiv:
  9181                           	opt stack 25
  9182                           
  9183                           ;incstack = 0
  9184  0020CA  C065  F069         	movff	___ftdiv@f1+2,??___ftdiv
  9185  0020CE  0100               	movlb	0	; () banked
  9186  0020D0  6B6A               	clrf	(??___ftdiv+1)& (0+255),b
  9187  0020D2  6B6B               	clrf	(??___ftdiv+2)& (0+255),b
  9188  0020D4  3564               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9189  0020D6  3769               	rlcf	??___ftdiv& (0+255),f,b
  9190  0020D8  E301               	bnc	u3161
  9191  0020DA  816A               	bsf	(??___ftdiv+1)& (0+255),0,b
  9192  0020DC                     u3161:
  9193  0020DC  5169               	movf	??___ftdiv& (0+255),w,b
  9194  0020DE  6F70               	movwf	___ftdiv@exp& (0+255),b
  9195  0020E0  5170               	movf	___ftdiv@exp& (0+255),w,b
  9196  0020E2  E104               	bnz	l4450
  9197                           
  9198                           ; BSR set to: 0
  9199  0020E4  6B63               	clrf	?___ftdiv& (0+255),b
  9200  0020E6  6B64               	clrf	(?___ftdiv+1)& (0+255),b
  9201  0020E8  6B65               	clrf	(?___ftdiv+2)& (0+255),b
  9202  0020EA  0012               	return	
  9203  0020EC                     l4450:
  9204                           
  9205                           ; BSR set to: 0
  9206  0020EC  C068  F069         	movff	___ftdiv@f2+2,??___ftdiv
  9207  0020F0  6B6A               	clrf	(??___ftdiv+1)& (0+255),b
  9208  0020F2  6B6B               	clrf	(??___ftdiv+2)& (0+255),b
  9209  0020F4  3567               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9210  0020F6  3769               	rlcf	??___ftdiv& (0+255),f,b
  9211  0020F8  E301               	bnc	u3181
  9212  0020FA  816A               	bsf	(??___ftdiv+1)& (0+255),0,b
  9213  0020FC                     u3181:
  9214  0020FC  5169               	movf	??___ftdiv& (0+255),w,b
  9215  0020FE  6F71               	movwf	___ftdiv@sign& (0+255),b
  9216  002100  5171               	movf	___ftdiv@sign& (0+255),w,b
  9217  002102  E104               	bnz	l1284
  9218                           
  9219                           ; BSR set to: 0
  9220  002104  6B63               	clrf	?___ftdiv& (0+255),b
  9221  002106  6B64               	clrf	(?___ftdiv+1)& (0+255),b
  9222  002108  6B65               	clrf	(?___ftdiv+2)& (0+255),b
  9223  00210A  0012               	return	
  9224  00210C                     l1284:
  9225                           
  9226                           ; BSR set to: 0
  9227  00210C  6B6D               	clrf	___ftdiv@f3& (0+255),b
  9228  00210E  6B6E               	clrf	(___ftdiv@f3+1)& (0+255),b
  9229  002110  6B6F               	clrf	(___ftdiv@f3+2)& (0+255),b
  9230                           
  9231                           ; BSR set to: 0
  9232  002112  5171               	movf	___ftdiv@sign& (0+255),w,b
  9233  002114  0F89               	addlw	137
  9234  002116  5F70               	subwf	___ftdiv@exp& (0+255),f,b
  9235                           
  9236                           ; BSR set to: 0
  9237  002118  C065  F071         	movff	___ftdiv@f1+2,___ftdiv@sign
  9238  00211C  5168               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9239  00211E  1B71               	xorwf	___ftdiv@sign& (0+255),f,b
  9240  002120  0E80               	movlw	128
  9241  002122  1771               	andwf	___ftdiv@sign& (0+255),f,b
  9242                           
  9243                           ; BSR set to: 0
  9244  002124  8F64               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9245                           
  9246                           ; BSR set to: 0
  9247  002126  6B65               	clrf	(___ftdiv@f1+2)& (0+255),b
  9248                           
  9249                           ; BSR set to: 0
  9250  002128  8F67               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9251                           
  9252                           ; BSR set to: 0
  9253  00212A  6B68               	clrf	(___ftdiv@f2+2)& (0+255),b
  9254                           
  9255                           ; BSR set to: 0
  9256  00212C  0E18               	movlw	24
  9257  00212E  6F6C               	movwf	___ftdiv@cntr& (0+255),b
  9258  002130                     l4468:
  9259                           
  9260                           ; BSR set to: 0
  9261  002130  90D8               	bcf	status,0,c
  9262  002132  376D               	rlcf	___ftdiv@f3& (0+255),f,b
  9263  002134  376E               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9264  002136  376F               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9265                           
  9266                           ; BSR set to: 0
  9267  002138  5166               	movf	___ftdiv@f2& (0+255),w,b
  9268  00213A  5D63               	subwf	___ftdiv@f1& (0+255),w,b
  9269  00213C  5167               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9270  00213E  5964               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9271  002140  5168               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9272  002142  5965               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9273  002144  E307               	bnc	l1286
  9274                           
  9275                           ; BSR set to: 0
  9276  002146  5166               	movf	___ftdiv@f2& (0+255),w,b
  9277  002148  5F63               	subwf	___ftdiv@f1& (0+255),f,b
  9278  00214A  5167               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9279  00214C  5B64               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9280  00214E  5168               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9281  002150  5B65               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9282                           
  9283                           ; BSR set to: 0
  9284  002152  816D               	bsf	___ftdiv@f3& (0+255),0,b
  9285  002154                     l1286:
  9286                           
  9287                           ; BSR set to: 0
  9288  002154  90D8               	bcf	status,0,c
  9289  002156  3763               	rlcf	___ftdiv@f1& (0+255),f,b
  9290  002158  3764               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9291  00215A  3765               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9292                           
  9293                           ; BSR set to: 0
  9294  00215C  2F6C               	decfsz	___ftdiv@cntr& (0+255),f,b
  9295  00215E  D7E8               	goto	l4468
  9296                           
  9297                           ; BSR set to: 0
  9298  002160  C06D  F01E         	movff	___ftdiv@f3,___ftpack@arg
  9299  002164  C06E  F01F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9300  002168  C06F  F020         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9301  00216C  C070  F021         	movff	___ftdiv@exp,___ftpack@exp
  9302  002170  C071  F022         	movff	___ftdiv@sign,___ftpack@sign
  9303  002174  EC67  F012         	call	___ftpack	;wreg free
  9304  002178  C01E  F063         	movff	?___ftpack,?___ftdiv
  9305  00217C  C01F  F064         	movff	?___ftpack+1,?___ftdiv+1
  9306  002180  C020  F065         	movff	?___ftpack+2,?___ftdiv+2
  9307  002184  0012               	return		;funcret
  9308  002186                     __end_of___ftdiv:
  9309                           	opt stack 0
  9310                           tblptru	equ	0xFF8
  9311                           tblptrh	equ	0xFF7
  9312                           tblptrl	equ	0xFF6
  9313                           tablat	equ	0xFF5
  9314                           prodl	equ	0xFF3
  9315                           intcon	equ	0xFF2
  9316                           postinc0	equ	0xFEE
  9317                           wreg	equ	0xFE8
  9318                           indf1	equ	0xFE7
  9319                           postinc1	equ	0xFE6
  9320                           postdec1	equ	0xFE5
  9321                           fsr1h	equ	0xFE2
  9322                           fsr1l	equ	0xFE1
  9323                           indf2	equ	0xFDF
  9324                           postinc2	equ	0xFDE
  9325                           postdec2	equ	0xFDD
  9326                           fsr2h	equ	0xFDA
  9327                           fsr2l	equ	0xFD9
  9328                           status	equ	0xFD8
  9329                           
  9330 ;; *************** function _ResetPage *****************
  9331 ;; Defined at:
  9332 ;;		line 625 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  x               1    wreg     unsigned char 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  x               1   44[COMRAM] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : F/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9346 ;;      Params:         0       0       0       0
  9347 ;;      Locals:         1       0       0       0
  9348 ;;      Temps:          0       0       0       0
  9349 ;;      Totals:         1       0       0       0
  9350 ;;Total ram usage:        1 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    8
  9353 ;; This function calls:
  9354 ;;		_LCD_HZ
  9355 ;;		_LCD_P8x16Str
  9356 ;;		___lbmod
  9357 ;; This function is called by:
  9358 ;;		_main
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           	psect	text20
  9363  0012F6                     __ptext20:
  9364                           	opt stack 0
  9365  0012F6                     _ResetPage:
  9366                           	opt stack 22
  9367                           
  9368                           ;incstack = 0
  9369                           ;ResetPage@x stored from wreg
  9370  0012F6  6E2D               	movwf	ResetPage@x,c
  9371                           
  9372                           ;LCD.c: 627: LCD_P8x16Str(0,2,"  ");LCD_P8x16Str(0,4,"  ");LCD_P8x16Str(0,6,"  ");
  9373  0012F8  0E02               	movlw	2
  9374  0012FA  6E22               	movwf	LCD_P8x16Str@y,c
  9375  0012FC  0EEE               	movlw	low (STR_24+2)
  9376  0012FE  6E23               	movwf	LCD_P8x16Str@ch,c
  9377  001300  0E3F               	movlw	high (STR_24+2)
  9378  001302  6E24               	movwf	LCD_P8x16Str@ch+1,c
  9379  001304  0E00               	movlw	0
  9380  001306  EC34  F00E         	call	_LCD_P8x16Str
  9381  00130A  0E04               	movlw	4
  9382  00130C  6E22               	movwf	LCD_P8x16Str@y,c
  9383  00130E  0EEE               	movlw	low (STR_24+2)
  9384  001310  6E23               	movwf	LCD_P8x16Str@ch,c
  9385  001312  0E3F               	movlw	high (STR_24+2)
  9386  001314  6E24               	movwf	LCD_P8x16Str@ch+1,c
  9387  001316  0E00               	movlw	0
  9388  001318  EC34  F00E         	call	_LCD_P8x16Str
  9389  00131C  0E06               	movlw	6
  9390  00131E  6E22               	movwf	LCD_P8x16Str@y,c
  9391  001320  0EEE               	movlw	low (STR_24+2)
  9392  001322  6E23               	movwf	LCD_P8x16Str@ch,c
  9393  001324  0E3F               	movlw	high (STR_24+2)
  9394  001326  6E24               	movwf	LCD_P8x16Str@ch+1,c
  9395  001328  0E00               	movlw	0
  9396  00132A  EC34  F00E         	call	_LCD_P8x16Str
  9397                           
  9398                           ;LCD.c: 629: LCD_P8x16Str(0,(x%3+1)*2,"->");
  9399  00132E  0E03               	movlw	3
  9400  001330  6E1E               	movwf	___lbmod@divisor,c
  9401  001332  502D               	movf	ResetPage@x,w,c
  9402  001334  EC7A  F017         	call	___lbmod
  9403  001338  0D02               	mullw	2
  9404  00133A  50F3               	movf	prodl,w,c
  9405  00133C  0F02               	addlw	2
  9406  00133E  6E22               	movwf	LCD_P8x16Str@y,c
  9407  001340  0EF4               	movlw	low STR_4
  9408  001342  6E23               	movwf	LCD_P8x16Str@ch,c
  9409  001344  0E3F               	movlw	high STR_4
  9410  001346  6E24               	movwf	LCD_P8x16Str@ch+1,c
  9411  001348  0E00               	movlw	0
  9412  00134A  EC34  F00E         	call	_LCD_P8x16Str
  9413                           
  9414                           ;LCD.c: 631: LCD_HZ(32, 0, F16x16_HZ,40);
  9415  00134E  6A22               	clrf	LCD_HZ@y,c
  9416  001350  0E1F               	movlw	low _F16x16_HZ
  9417  001352  6E23               	movwf	LCD_HZ@data,c
  9418  001354  0E35               	movlw	high _F16x16_HZ
  9419  001356  6E24               	movwf	LCD_HZ@data+1,c
  9420  001358  0E28               	movlw	40
  9421  00135A  6E25               	movwf	LCD_HZ@N,c
  9422  00135C  0E20               	movlw	32
  9423  00135E  EC28  F013         	call	_LCD_HZ
  9424                           
  9425                           ;LCD.c: 632: LCD_HZ(48, 0, F16x16_HZ,41);
  9426  001362  6A22               	clrf	LCD_HZ@y,c
  9427  001364  0E1F               	movlw	low _F16x16_HZ
  9428  001366  6E23               	movwf	LCD_HZ@data,c
  9429  001368  0E35               	movlw	high _F16x16_HZ
  9430  00136A  6E24               	movwf	LCD_HZ@data+1,c
  9431  00136C  0E29               	movlw	41
  9432  00136E  6E25               	movwf	LCD_HZ@N,c
  9433  001370  0E30               	movlw	48
  9434  001372  EC28  F013         	call	_LCD_HZ
  9435                           
  9436                           ;LCD.c: 633: LCD_HZ(64, 0, F16x16_HZ,42);
  9437  001376  6A22               	clrf	LCD_HZ@y,c
  9438  001378  0E1F               	movlw	low _F16x16_HZ
  9439  00137A  6E23               	movwf	LCD_HZ@data,c
  9440  00137C  0E35               	movlw	high _F16x16_HZ
  9441  00137E  6E24               	movwf	LCD_HZ@data+1,c
  9442  001380  0E2A               	movlw	42
  9443  001382  6E25               	movwf	LCD_HZ@N,c
  9444  001384  0E40               	movlw	64
  9445  001386  EC28  F013         	call	_LCD_HZ
  9446                           
  9447                           ;LCD.c: 634: LCD_HZ(80, 0, F16x16_HZ,43);
  9448  00138A  6A22               	clrf	LCD_HZ@y,c
  9449  00138C  0E1F               	movlw	low _F16x16_HZ
  9450  00138E  6E23               	movwf	LCD_HZ@data,c
  9451  001390  0E35               	movlw	high _F16x16_HZ
  9452  001392  6E24               	movwf	LCD_HZ@data+1,c
  9453  001394  0E2B               	movlw	43
  9454  001396  6E25               	movwf	LCD_HZ@N,c
  9455  001398  0E50               	movlw	80
  9456  00139A  EC28  F013         	call	_LCD_HZ
  9457                           
  9458                           ;LCD.c: 636: LCD_HZ(16, 2, F16x16_HZ,51);
  9459  00139E  0E02               	movlw	2
  9460  0013A0  6E22               	movwf	LCD_HZ@y,c
  9461  0013A2  0E1F               	movlw	low _F16x16_HZ
  9462  0013A4  6E23               	movwf	LCD_HZ@data,c
  9463  0013A6  0E35               	movlw	high _F16x16_HZ
  9464  0013A8  6E24               	movwf	LCD_HZ@data+1,c
  9465  0013AA  0E33               	movlw	51
  9466  0013AC  6E25               	movwf	LCD_HZ@N,c
  9467  0013AE  0E10               	movlw	16
  9468  0013B0  EC28  F013         	call	_LCD_HZ
  9469                           
  9470                           ;LCD.c: 637: LCD_HZ(32, 2, F16x16_HZ,52);
  9471  0013B4  0E02               	movlw	2
  9472  0013B6  6E22               	movwf	LCD_HZ@y,c
  9473  0013B8  0E1F               	movlw	low _F16x16_HZ
  9474  0013BA  6E23               	movwf	LCD_HZ@data,c
  9475  0013BC  0E35               	movlw	high _F16x16_HZ
  9476  0013BE  6E24               	movwf	LCD_HZ@data+1,c
  9477  0013C0  0E34               	movlw	52
  9478  0013C2  6E25               	movwf	LCD_HZ@N,c
  9479  0013C4  0E20               	movlw	32
  9480  0013C6  EC28  F013         	call	_LCD_HZ
  9481                           
  9482                           ;LCD.c: 638: LCD_HZ(48, 2, F16x16_HZ,28);
  9483  0013CA  0E02               	movlw	2
  9484  0013CC  6E22               	movwf	LCD_HZ@y,c
  9485  0013CE  0E1F               	movlw	low _F16x16_HZ
  9486  0013D0  6E23               	movwf	LCD_HZ@data,c
  9487  0013D2  0E35               	movlw	high _F16x16_HZ
  9488  0013D4  6E24               	movwf	LCD_HZ@data+1,c
  9489  0013D6  0E1C               	movlw	28
  9490  0013D8  6E25               	movwf	LCD_HZ@N,c
  9491  0013DA  0E30               	movlw	48
  9492  0013DC  EC28  F013         	call	_LCD_HZ
  9493                           
  9494                           ;LCD.c: 639: LCD_HZ(64, 2, F16x16_HZ,29);
  9495  0013E0  0E02               	movlw	2
  9496  0013E2  6E22               	movwf	LCD_HZ@y,c
  9497  0013E4  0E1F               	movlw	low _F16x16_HZ
  9498  0013E6  6E23               	movwf	LCD_HZ@data,c
  9499  0013E8  0E35               	movlw	high _F16x16_HZ
  9500  0013EA  6E24               	movwf	LCD_HZ@data+1,c
  9501  0013EC  0E1D               	movlw	29
  9502  0013EE  6E25               	movwf	LCD_HZ@N,c
  9503  0013F0  0E40               	movlw	64
  9504  0013F2  EC28  F013         	call	_LCD_HZ
  9505                           
  9506                           ;LCD.c: 640: LCD_HZ(80, 2, F16x16_HZ,42);
  9507  0013F6  0E02               	movlw	2
  9508  0013F8  6E22               	movwf	LCD_HZ@y,c
  9509  0013FA  0E1F               	movlw	low _F16x16_HZ
  9510  0013FC  6E23               	movwf	LCD_HZ@data,c
  9511  0013FE  0E35               	movlw	high _F16x16_HZ
  9512  001400  6E24               	movwf	LCD_HZ@data+1,c
  9513  001402  0E2A               	movlw	42
  9514  001404  6E25               	movwf	LCD_HZ@N,c
  9515  001406  0E50               	movlw	80
  9516  001408  EC28  F013         	call	_LCD_HZ
  9517                           
  9518                           ;LCD.c: 641: LCD_HZ(96, 2, F16x16_HZ,43);
  9519  00140C  0E02               	movlw	2
  9520  00140E  6E22               	movwf	LCD_HZ@y,c
  9521  001410  0E1F               	movlw	low _F16x16_HZ
  9522  001412  6E23               	movwf	LCD_HZ@data,c
  9523  001414  0E35               	movlw	high _F16x16_HZ
  9524  001416  6E24               	movwf	LCD_HZ@data+1,c
  9525  001418  0E2B               	movlw	43
  9526  00141A  6E25               	movwf	LCD_HZ@N,c
  9527  00141C  0E60               	movlw	96
  9528  00141E  EC28  F013         	call	_LCD_HZ
  9529                           
  9530                           ;LCD.c: 643: LCD_HZ(16, 4, F16x16_HZ,51);
  9531  001422  0E04               	movlw	4
  9532  001424  6E22               	movwf	LCD_HZ@y,c
  9533  001426  0E1F               	movlw	low _F16x16_HZ
  9534  001428  6E23               	movwf	LCD_HZ@data,c
  9535  00142A  0E35               	movlw	high _F16x16_HZ
  9536  00142C  6E24               	movwf	LCD_HZ@data+1,c
  9537  00142E  0E33               	movlw	51
  9538  001430  6E25               	movwf	LCD_HZ@N,c
  9539  001432  0E10               	movlw	16
  9540  001434  EC28  F013         	call	_LCD_HZ
  9541                           
  9542                           ;LCD.c: 644: LCD_HZ(32, 4, F16x16_HZ,52);
  9543  001438  0E04               	movlw	4
  9544  00143A  6E22               	movwf	LCD_HZ@y,c
  9545  00143C  0E1F               	movlw	low _F16x16_HZ
  9546  00143E  6E23               	movwf	LCD_HZ@data,c
  9547  001440  0E35               	movlw	high _F16x16_HZ
  9548  001442  6E24               	movwf	LCD_HZ@data+1,c
  9549  001444  0E34               	movlw	52
  9550  001446  6E25               	movwf	LCD_HZ@N,c
  9551  001448  0E20               	movlw	32
  9552  00144A  EC28  F013         	call	_LCD_HZ
  9553                           
  9554                           ;LCD.c: 645: LCD_HZ(48, 4, F16x16_HZ,36);
  9555  00144E  0E04               	movlw	4
  9556  001450  6E22               	movwf	LCD_HZ@y,c
  9557  001452  0E1F               	movlw	low _F16x16_HZ
  9558  001454  6E23               	movwf	LCD_HZ@data,c
  9559  001456  0E35               	movlw	high _F16x16_HZ
  9560  001458  6E24               	movwf	LCD_HZ@data+1,c
  9561  00145A  0E24               	movlw	36
  9562  00145C  6E25               	movwf	LCD_HZ@N,c
  9563  00145E  0E30               	movlw	48
  9564  001460  EC28  F013         	call	_LCD_HZ
  9565                           
  9566                           ;LCD.c: 646: LCD_HZ(64, 4, F16x16_HZ,37);
  9567  001464  0E04               	movlw	4
  9568  001466  6E22               	movwf	LCD_HZ@y,c
  9569  001468  0E1F               	movlw	low _F16x16_HZ
  9570  00146A  6E23               	movwf	LCD_HZ@data,c
  9571  00146C  0E35               	movlw	high _F16x16_HZ
  9572  00146E  6E24               	movwf	LCD_HZ@data+1,c
  9573  001470  0E25               	movlw	37
  9574  001472  6E25               	movwf	LCD_HZ@N,c
  9575  001474  0E40               	movlw	64
  9576  001476  EC28  F013         	call	_LCD_HZ
  9577                           
  9578                           ;LCD.c: 647: LCD_HZ(80, 4, F16x16_HZ,42);
  9579  00147A  0E04               	movlw	4
  9580  00147C  6E22               	movwf	LCD_HZ@y,c
  9581  00147E  0E1F               	movlw	low _F16x16_HZ
  9582  001480  6E23               	movwf	LCD_HZ@data,c
  9583  001482  0E35               	movlw	high _F16x16_HZ
  9584  001484  6E24               	movwf	LCD_HZ@data+1,c
  9585  001486  0E2A               	movlw	42
  9586  001488  6E25               	movwf	LCD_HZ@N,c
  9587  00148A  0E50               	movlw	80
  9588  00148C  EC28  F013         	call	_LCD_HZ
  9589                           
  9590                           ;LCD.c: 648: LCD_HZ(96, 4, F16x16_HZ,43);
  9591  001490  0E04               	movlw	4
  9592  001492  6E22               	movwf	LCD_HZ@y,c
  9593  001494  0E1F               	movlw	low _F16x16_HZ
  9594  001496  6E23               	movwf	LCD_HZ@data,c
  9595  001498  0E35               	movlw	high _F16x16_HZ
  9596  00149A  6E24               	movwf	LCD_HZ@data+1,c
  9597  00149C  0E2B               	movlw	43
  9598  00149E  6E25               	movwf	LCD_HZ@N,c
  9599  0014A0  0E60               	movlw	96
  9600  0014A2  EC28  F013         	call	_LCD_HZ
  9601                           
  9602                           ;LCD.c: 650: LCD_HZ(16, 6, F16x16_HZ,53);
  9603  0014A6  0E06               	movlw	6
  9604  0014A8  6E22               	movwf	LCD_HZ@y,c
  9605  0014AA  0E1F               	movlw	low _F16x16_HZ
  9606  0014AC  6E23               	movwf	LCD_HZ@data,c
  9607  0014AE  0E35               	movlw	high _F16x16_HZ
  9608  0014B0  6E24               	movwf	LCD_HZ@data+1,c
  9609  0014B2  0E35               	movlw	53
  9610  0014B4  6E25               	movwf	LCD_HZ@N,c
  9611  0014B6  0E10               	movlw	16
  9612  0014B8  EC28  F013         	call	_LCD_HZ
  9613                           
  9614                           ;LCD.c: 651: LCD_HZ(32, 6, F16x16_HZ,54);
  9615  0014BC  0E06               	movlw	6
  9616  0014BE  6E22               	movwf	LCD_HZ@y,c
  9617  0014C0  0E1F               	movlw	low _F16x16_HZ
  9618  0014C2  6E23               	movwf	LCD_HZ@data,c
  9619  0014C4  0E35               	movlw	high _F16x16_HZ
  9620  0014C6  6E24               	movwf	LCD_HZ@data+1,c
  9621  0014C8  0E36               	movlw	54
  9622  0014CA  6E25               	movwf	LCD_HZ@N,c
  9623  0014CC  0E20               	movlw	32
  9624  0014CE  EC28  F013         	call	_LCD_HZ
  9625                           
  9626                           ;LCD.c: 652: LCD_HZ(48, 6, F16x16_HZ,55);
  9627  0014D2  0E06               	movlw	6
  9628  0014D4  6E22               	movwf	LCD_HZ@y,c
  9629  0014D6  0E1F               	movlw	low _F16x16_HZ
  9630  0014D8  6E23               	movwf	LCD_HZ@data,c
  9631  0014DA  0E35               	movlw	high _F16x16_HZ
  9632  0014DC  6E24               	movwf	LCD_HZ@data+1,c
  9633  0014DE  0E37               	movlw	55
  9634  0014E0  6E25               	movwf	LCD_HZ@N,c
  9635  0014E2  0E30               	movlw	48
  9636  0014E4  EC28  F013         	call	_LCD_HZ
  9637                           
  9638                           ;LCD.c: 653: LCD_HZ(64, 6, F16x16_HZ,56);
  9639  0014E8  0E06               	movlw	6
  9640  0014EA  6E22               	movwf	LCD_HZ@y,c
  9641  0014EC  0E1F               	movlw	low _F16x16_HZ
  9642  0014EE  6E23               	movwf	LCD_HZ@data,c
  9643  0014F0  0E35               	movlw	high _F16x16_HZ
  9644  0014F2  6E24               	movwf	LCD_HZ@data+1,c
  9645  0014F4  0E38               	movlw	56
  9646  0014F6  6E25               	movwf	LCD_HZ@N,c
  9647  0014F8  0E40               	movlw	64
  9648  0014FA  EC28  F013         	call	_LCD_HZ
  9649                           
  9650                           ;LCD.c: 654: LCD_HZ(80, 6, F16x16_HZ,57);
  9651  0014FE  0E06               	movlw	6
  9652  001500  6E22               	movwf	LCD_HZ@y,c
  9653  001502  0E1F               	movlw	low _F16x16_HZ
  9654  001504  6E23               	movwf	LCD_HZ@data,c
  9655  001506  0E35               	movlw	high _F16x16_HZ
  9656  001508  6E24               	movwf	LCD_HZ@data+1,c
  9657  00150A  0E39               	movlw	57
  9658  00150C  6E25               	movwf	LCD_HZ@N,c
  9659  00150E  0E50               	movlw	80
  9660  001510  EC28  F013         	call	_LCD_HZ
  9661                           
  9662                           ;LCD.c: 655: LCD_HZ(96, 6, F16x16_HZ,58);
  9663  001514  0E06               	movlw	6
  9664  001516  6E22               	movwf	LCD_HZ@y,c
  9665  001518  0E1F               	movlw	low _F16x16_HZ
  9666  00151A  6E23               	movwf	LCD_HZ@data,c
  9667  00151C  0E35               	movlw	high _F16x16_HZ
  9668  00151E  6E24               	movwf	LCD_HZ@data+1,c
  9669  001520  0E3A               	movlw	58
  9670  001522  6E25               	movwf	LCD_HZ@N,c
  9671  001524  0E60               	movlw	96
  9672  001526  EF28  F013         	goto	_LCD_HZ
  9673  00152A                     __end_of_ResetPage:
  9674                           	opt stack 0
  9675                           tblptru	equ	0xFF8
  9676                           tblptrh	equ	0xFF7
  9677                           tblptrl	equ	0xFF6
  9678                           tablat	equ	0xFF5
  9679                           prodl	equ	0xFF3
  9680                           intcon	equ	0xFF2
  9681                           postinc0	equ	0xFEE
  9682                           wreg	equ	0xFE8
  9683                           indf1	equ	0xFE7
  9684                           postinc1	equ	0xFE6
  9685                           postdec1	equ	0xFE5
  9686                           fsr1h	equ	0xFE2
  9687                           fsr1l	equ	0xFE1
  9688                           indf2	equ	0xFDF
  9689                           postinc2	equ	0xFDE
  9690                           postdec2	equ	0xFDD
  9691                           fsr2h	equ	0xFDA
  9692                           fsr2l	equ	0xFD9
  9693                           status	equ	0xFD8
  9694                           
  9695 ;; *************** function ___lbmod *****************
  9696 ;; Defined at:
  9697 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lbmod.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  dividend        1    wreg     unsigned char 
  9700 ;;  divisor         1   29[COMRAM] unsigned char 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;  dividend        1   30[COMRAM] unsigned char 
  9703 ;;  rem             1   32[COMRAM] unsigned char 
  9704 ;;  counter         1   31[COMRAM] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      unsigned char 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9714 ;;      Params:         1       0       0       0
  9715 ;;      Locals:         3       0       0       0
  9716 ;;      Temps:          0       0       0       0
  9717 ;;      Totals:         4       0       0       0
  9718 ;;Total ram usage:        4 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:    4
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_SetPage
  9725 ;;		_ResetPage
  9726 ;;		_main
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text21
  9731  002EF4                     __ptext21:
  9732                           	opt stack 0
  9733  002EF4                     ___lbmod:
  9734                           	opt stack 26
  9735                           
  9736                           ;incstack = 0
  9737                           ;___lbmod@dividend stored from wreg
  9738  002EF4  6E1F               	movwf	___lbmod@dividend,c
  9739  002EF6  0E08               	movlw	8
  9740  002EF8  6E20               	movwf	___lbmod@counter,c
  9741  002EFA  6A21               	clrf	___lbmod@rem,c
  9742  002EFC                     l4638:
  9743  002EFC  90D8               	bcf	status,0,c
  9744  002EFE  341F               	rlcf	___lbmod@dividend,w,c
  9745  002F00  3421               	rlcf	___lbmod@rem,w,c
  9746  002F02  6E21               	movwf	___lbmod@rem,c
  9747  002F04  90D8               	bcf	status,0,c
  9748  002F06  361F               	rlcf	___lbmod@dividend,f,c
  9749  002F08  501E               	movf	___lbmod@divisor,w,c
  9750  002F0A  5C21               	subwf	___lbmod@rem,w,c
  9751  002F0C  E302               	bnc	l4646
  9752  002F0E  501E               	movf	___lbmod@divisor,w,c
  9753  002F10  5E21               	subwf	___lbmod@rem,f,c
  9754  002F12                     l4646:
  9755  002F12  2E20               	decfsz	___lbmod@counter,f,c
  9756  002F14  D7F3               	goto	l4638
  9757  002F16  5021               	movf	___lbmod@rem,w,c
  9758  002F18  0012               	return		;funcret
  9759  002F1A                     __end_of___lbmod:
  9760                           	opt stack 0
  9761                           tblptru	equ	0xFF8
  9762                           tblptrh	equ	0xFF7
  9763                           tblptrl	equ	0xFF6
  9764                           tablat	equ	0xFF5
  9765                           prodl	equ	0xFF3
  9766                           intcon	equ	0xFF2
  9767                           postinc0	equ	0xFEE
  9768                           wreg	equ	0xFE8
  9769                           indf1	equ	0xFE7
  9770                           postinc1	equ	0xFE6
  9771                           postdec1	equ	0xFE5
  9772                           fsr1h	equ	0xFE2
  9773                           fsr1l	equ	0xFE1
  9774                           indf2	equ	0xFDF
  9775                           postinc2	equ	0xFDE
  9776                           postdec2	equ	0xFDD
  9777                           fsr2h	equ	0xFDA
  9778                           fsr2l	equ	0xFD9
  9779                           status	equ	0xFD8
  9780                           
  9781 ;; *************** function _PWM_INIT *****************
  9782 ;; Defined at:
  9783 ;;		line 64 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/PWM.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		wreg, status,2
  9792 ;; Tracked objects:
  9793 ;;		On entry : F/0
  9794 ;;		On exit  : F/0
  9795 ;;		Unchanged: F/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9797 ;;      Params:         0       0       0       0
  9798 ;;      Locals:         0       0       0       0
  9799 ;;      Temps:          0       0       0       0
  9800 ;;      Totals:         0       0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; Hardware stack levels required when called:    4
  9804 ;; This function calls:
  9805 ;;		Nothing
  9806 ;; This function is called by:
  9807 ;;		_main
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text22
  9812  002F3E                     __ptext22:
  9813                           	opt stack 0
  9814  002F3E                     _PWM_INIT:
  9815                           	opt stack 26
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;PWM.c: 66: TRISB0=0;TRISB1=0;TRISB2=0;TRISB3=0;TRISD5=0;TRISB4=0;
  9819                           
  9820                           ;incstack = 0
  9821  002F3E  9093               	bcf	3987,0,c	;volatile
  9822  002F40  9293               	bcf	3987,1,c	;volatile
  9823  002F42  9493               	bcf	3987,2,c	;volatile
  9824  002F44  9693               	bcf	3987,3,c	;volatile
  9825  002F46  9A95               	bcf	3989,5,c	;volatile
  9826  002F48  9893               	bcf	3987,4,c	;volatile
  9827                           
  9828                           ;PWM.c: 68: PTCON0=0x00;
  9829  002F4A  6A7F               	clrf	3967,c	;volatile
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;PWM.c: 69: PWMCON0=0x4f;
  9833  002F4C  0E4F               	movlw	79
  9834  002F4E  6E6F               	movwf	3951,c	;volatile
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;PWM.c: 70: PWMCON1=0x00;
  9838  002F50  6A6E               	clrf	3950,c	;volatile
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;PWM.c: 71: OVDCOND=0x00;
  9842  002F52  6A6B               	clrf	3947,c	;volatile
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;PWM.c: 73: PTPERH=periodH;
  9846  002F54  6A7A               	clrf	3962,c	;volatile
  9847                           
  9848                           ;PWM.c: 74: PTPERL=periodL;
  9849  002F56  0E55               	movlw	85
  9850  002F58  6E7B               	movwf	3963,c	;volatile
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;PWM.c: 85: PTMRL=0;
  9854  002F5A  6A7D               	clrf	3965,c	;volatile
  9855                           
  9856                           ; BSR set to: 0
  9857                           ;PWM.c: 86: PTMRH=0;
  9858  002F5C  6A7C               	clrf	3964,c	;volatile
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;PWM.c: 87: PTEN=1;
  9862  002F5E  8E7E               	bsf	3966,7,c	;volatile
  9863                           
  9864                           ; BSR set to: 0
  9865  002F60  0012               	return		;funcret
  9866  002F62                     __end_of_PWM_INIT:
  9867                           	opt stack 0
  9868                           tblptru	equ	0xFF8
  9869                           tblptrh	equ	0xFF7
  9870                           tblptrl	equ	0xFF6
  9871                           tablat	equ	0xFF5
  9872                           prodl	equ	0xFF3
  9873                           intcon	equ	0xFF2
  9874                           postinc0	equ	0xFEE
  9875                           wreg	equ	0xFE8
  9876                           indf1	equ	0xFE7
  9877                           postinc1	equ	0xFE6
  9878                           postdec1	equ	0xFE5
  9879                           fsr1h	equ	0xFE2
  9880                           fsr1l	equ	0xFE1
  9881                           indf2	equ	0xFDF
  9882                           postinc2	equ	0xFDE
  9883                           postdec2	equ	0xFDD
  9884                           fsr2h	equ	0xFDA
  9885                           fsr2l	equ	0xFD9
  9886                           status	equ	0xFD8
  9887                           
  9888 ;; *************** function _LCD_INIT *****************
  9889 ;; Defined at:
  9890 ;;		line 129 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, status,2, status,0, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : F/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9904 ;;      Params:         0       0       0       0
  9905 ;;      Locals:         0       0       0       0
  9906 ;;      Temps:          0       0       0       0
  9907 ;;      Totals:         0       0       0       0
  9908 ;;Total ram usage:        0 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    7
  9911 ;; This function calls:
  9912 ;;		_INIT_SPI
  9913 ;;		_LCD_CLS
  9914 ;;		_LCD_Set_Pos
  9915 ;;		_LCD_WrCmd
  9916 ;;		_delay
  9917 ;; This function is called by:
  9918 ;;		_main
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           	psect	text23
  9923  001F2E                     __ptext23:
  9924                           	opt stack 0
  9925  001F2E                     _LCD_INIT:
  9926                           	opt stack 23
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;LCD.c: 131: INIT_SPI();
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;incstack = 0
  9933  001F2E  EC03  F018         	call	_INIT_SPI	;wreg free
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;LCD.c: 132: TRISD2=0;TRISD1=0;TRISD0=0;
  9937  001F32  9495               	bcf	3989,2,c	;volatile
  9938                           
  9939                           ; BSR set to: 0
  9940  001F34  9295               	bcf	3989,1,c	;volatile
  9941                           
  9942                           ; BSR set to: 0
  9943  001F36  9095               	bcf	3989,0,c	;volatile
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;LCD.c: 133: RD1=0;
  9947  001F38  9283               	bcf	3971,1,c	;volatile
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;LCD.c: 134: delay(500);
  9951  001F3A  0E01               	movlw	1
  9952  001F3C  6E1F               	movwf	delay@t+1,c
  9953  001F3E  0EF4               	movlw	244
  9954  001F40  6E1E               	movwf	delay@t,c
  9955  001F42  EC47  F018         	call	_delay	;wreg free
  9956                           
  9957                           ;LCD.c: 135: RD1=1;
  9958  001F46  8283               	bsf	3971,1,c	;volatile
  9959                           
  9960                           ;LCD.c: 137: RD2=0;
  9961  001F48  9483               	bcf	3971,2,c	;volatile
  9962                           
  9963                           ;LCD.c: 138: LCD_WrCmd(0xae);
  9964  001F4A  0EAE               	movlw	174
  9965  001F4C  EC36  F018         	call	_LCD_WrCmd
  9966                           
  9967                           ;LCD.c: 139: LCD_WrCmd(0x00);
  9968  001F50  0E00               	movlw	0
  9969  001F52  EC36  F018         	call	_LCD_WrCmd
  9970                           
  9971                           ;LCD.c: 140: LCD_WrCmd(0x10);
  9972  001F56  0E10               	movlw	16
  9973  001F58  EC36  F018         	call	_LCD_WrCmd
  9974                           
  9975                           ;LCD.c: 141: LCD_WrCmd(0x40);
  9976  001F5C  0E40               	movlw	64
  9977  001F5E  EC36  F018         	call	_LCD_WrCmd
  9978                           
  9979                           ;LCD.c: 142: LCD_WrCmd(0x81);
  9980  001F62  0E81               	movlw	129
  9981  001F64  EC36  F018         	call	_LCD_WrCmd
  9982                           
  9983                           ;LCD.c: 143: LCD_WrCmd(0xcf);
  9984  001F68  0ECF               	movlw	207
  9985  001F6A  EC36  F018         	call	_LCD_WrCmd
  9986                           
  9987                           ;LCD.c: 144: LCD_WrCmd(0xa1);
  9988  001F6E  0EA1               	movlw	161
  9989  001F70  EC36  F018         	call	_LCD_WrCmd
  9990                           
  9991                           ;LCD.c: 145: LCD_WrCmd(0xc8);
  9992  001F74  0EC8               	movlw	200
  9993  001F76  EC36  F018         	call	_LCD_WrCmd
  9994                           
  9995                           ;LCD.c: 146: LCD_WrCmd(0xa6);
  9996  001F7A  0EA6               	movlw	166
  9997  001F7C  EC36  F018         	call	_LCD_WrCmd
  9998                           
  9999                           ;LCD.c: 147: LCD_WrCmd(0xa8);
 10000  001F80  0EA8               	movlw	168
 10001  001F82  EC36  F018         	call	_LCD_WrCmd
 10002                           
 10003                           ;LCD.c: 148: LCD_WrCmd(0x3f);
 10004  001F86  0E3F               	movlw	63
 10005  001F88  EC36  F018         	call	_LCD_WrCmd
 10006                           
 10007                           ;LCD.c: 149: LCD_WrCmd(0xd3);
 10008  001F8C  0ED3               	movlw	211
 10009  001F8E  EC36  F018         	call	_LCD_WrCmd
 10010                           
 10011                           ;LCD.c: 150: LCD_WrCmd(0x00);
 10012  001F92  0E00               	movlw	0
 10013  001F94  EC36  F018         	call	_LCD_WrCmd
 10014                           
 10015                           ;LCD.c: 151: LCD_WrCmd(0xd5);
 10016  001F98  0ED5               	movlw	213
 10017  001F9A  EC36  F018         	call	_LCD_WrCmd
 10018                           
 10019                           ;LCD.c: 152: LCD_WrCmd(0x80);
 10020  001F9E  0E80               	movlw	128
 10021  001FA0  EC36  F018         	call	_LCD_WrCmd
 10022                           
 10023                           ;LCD.c: 153: LCD_WrCmd(0xd9);
 10024  001FA4  0ED9               	movlw	217
 10025  001FA6  EC36  F018         	call	_LCD_WrCmd
 10026                           
 10027                           ;LCD.c: 154: LCD_WrCmd(0xf1);
 10028  001FAA  0EF1               	movlw	241
 10029  001FAC  EC36  F018         	call	_LCD_WrCmd
 10030                           
 10031                           ;LCD.c: 155: LCD_WrCmd(0xda);
 10032  001FB0  0EDA               	movlw	218
 10033  001FB2  EC36  F018         	call	_LCD_WrCmd
 10034                           
 10035                           ;LCD.c: 156: LCD_WrCmd(0x12);
 10036  001FB6  0E12               	movlw	18
 10037  001FB8  EC36  F018         	call	_LCD_WrCmd
 10038                           
 10039                           ;LCD.c: 157: LCD_WrCmd(0xdb);
 10040  001FBC  0EDB               	movlw	219
 10041  001FBE  EC36  F018         	call	_LCD_WrCmd
 10042                           
 10043                           ;LCD.c: 158: LCD_WrCmd(0x40);
 10044  001FC2  0E40               	movlw	64
 10045  001FC4  EC36  F018         	call	_LCD_WrCmd
 10046                           
 10047                           ;LCD.c: 159: LCD_WrCmd(0x20);
 10048  001FC8  0E20               	movlw	32
 10049  001FCA  EC36  F018         	call	_LCD_WrCmd
 10050                           
 10051                           ;LCD.c: 160: LCD_WrCmd(0x02);
 10052  001FCE  0E02               	movlw	2
 10053  001FD0  EC36  F018         	call	_LCD_WrCmd
 10054                           
 10055                           ;LCD.c: 161: LCD_WrCmd(0x8d);
 10056  001FD4  0E8D               	movlw	141
 10057  001FD6  EC36  F018         	call	_LCD_WrCmd
 10058                           
 10059                           ;LCD.c: 162: LCD_WrCmd(0x14);
 10060  001FDA  0E14               	movlw	20
 10061  001FDC  EC36  F018         	call	_LCD_WrCmd
 10062                           
 10063                           ;LCD.c: 163: LCD_WrCmd(0xa4);
 10064  001FE0  0EA4               	movlw	164
 10065  001FE2  EC36  F018         	call	_LCD_WrCmd
 10066                           
 10067                           ;LCD.c: 164: LCD_WrCmd(0xa6);
 10068  001FE6  0EA6               	movlw	166
 10069  001FE8  EC36  F018         	call	_LCD_WrCmd
 10070                           
 10071                           ;LCD.c: 165: LCD_WrCmd(0xaf);
 10072  001FEC  0EAF               	movlw	175
 10073  001FEE  EC36  F018         	call	_LCD_WrCmd
 10074                           
 10075                           ;LCD.c: 167: LCD_CLS();
 10076  001FF2  ECCB  F016         	call	_LCD_CLS	;wreg free
 10077                           
 10078                           ;LCD.c: 168: LCD_Set_Pos(0,0);
 10079  001FF6  0E00               	movlw	0
 10080  001FF8  6A20               	clrf	LCD_Set_Pos@y,c
 10081  001FFA  EFC2  F017         	goto	_LCD_Set_Pos
 10082  001FFE                     __end_of_LCD_INIT:
 10083                           	opt stack 0
 10084                           tblptru	equ	0xFF8
 10085                           tblptrh	equ	0xFF7
 10086                           tblptrl	equ	0xFF6
 10087                           tablat	equ	0xFF5
 10088                           prodl	equ	0xFF3
 10089                           intcon	equ	0xFF2
 10090                           postinc0	equ	0xFEE
 10091                           wreg	equ	0xFE8
 10092                           indf1	equ	0xFE7
 10093                           postinc1	equ	0xFE6
 10094                           postdec1	equ	0xFE5
 10095                           fsr1h	equ	0xFE2
 10096                           fsr1l	equ	0xFE1
 10097                           indf2	equ	0xFDF
 10098                           postinc2	equ	0xFDE
 10099                           postdec2	equ	0xFDD
 10100                           fsr2h	equ	0xFDA
 10101                           fsr2l	equ	0xFD9
 10102                           status	equ	0xFD8
 10103                           
 10104 ;; *************** function _LCD_CLS *****************
 10105 ;; Defined at:
 10106 ;;		line 69 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;		None
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;  y               1   32[COMRAM] unsigned char 
 10111 ;;  x               1   31[COMRAM] unsigned char 
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  1    wreg      void 
 10114 ;; Registers used:
 10115 ;;		wreg, status,2, status,0, cstack
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10121 ;;      Params:         0       0       0       0
 10122 ;;      Locals:         2       0       0       0
 10123 ;;      Temps:          0       0       0       0
 10124 ;;      Totals:         2       0       0       0
 10125 ;;Total ram usage:        2 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; Hardware stack levels required when called:    6
 10128 ;; This function calls:
 10129 ;;		_LCD_WrCmd
 10130 ;;		_LCD_WrDat
 10131 ;; This function is called by:
 10132 ;;		_LCD_INIT
 10133 ;;		_main
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text24
 10138  002D96                     __ptext24:
 10139                           	opt stack 0
 10140  002D96                     _LCD_CLS:
 10141                           	opt stack 23
 10142                           
 10143                           ;LCD.c: 71: unsigned char y,x;
 10144                           ;LCD.c: 72: for(y=0;y<8;y++)
 10145                           
 10146                           ;incstack = 0
 10147  002D96  6A21               	clrf	LCD_CLS@y,c
 10148  002D98                     l4182:
 10149                           
 10150                           ;LCD.c: 73: {
 10151                           ;LCD.c: 74: LCD_WrCmd(0xb0+y);
 10152  002D98  5021               	movf	LCD_CLS@y,w,c
 10153  002D9A  0FB0               	addlw	176
 10154  002D9C  EC36  F018         	call	_LCD_WrCmd
 10155                           
 10156                           ;LCD.c: 75: LCD_WrCmd(0x01);
 10157  002DA0  0E01               	movlw	1
 10158  002DA2  EC36  F018         	call	_LCD_WrCmd
 10159                           
 10160                           ;LCD.c: 76: LCD_WrCmd(0x10);
 10161  002DA6  0E10               	movlw	16
 10162  002DA8  EC36  F018         	call	_LCD_WrCmd
 10163                           
 10164                           ;LCD.c: 77: for(x=0;x<128;x++)
 10165  002DAC  6A20               	clrf	LCD_CLS@x,c
 10166  002DAE                     l4194:
 10167                           
 10168                           ;LCD.c: 78: LCD_WrDat(0);
 10169  002DAE  0E00               	movlw	0
 10170  002DB0  EC2D  F018         	call	_LCD_WrDat
 10171  002DB4  2A20               	incf	LCD_CLS@x,f,c
 10172  002DB6  0E7F               	movlw	127
 10173  002DB8  6420               	cpfsgt	LCD_CLS@x,c
 10174  002DBA  D7F9               	goto	l4194
 10175  002DBC  2A21               	incf	LCD_CLS@y,f,c
 10176  002DBE  0E07               	movlw	7
 10177  002DC0  6421               	cpfsgt	LCD_CLS@y,c
 10178  002DC2  D7EA               	goto	l4182
 10179  002DC4  0C07               	retlw	7
 10180  002DC6                     __end_of_LCD_CLS:
 10181                           	opt stack 0
 10182                           tblptru	equ	0xFF8
 10183                           tblptrh	equ	0xFF7
 10184                           tblptrl	equ	0xFF6
 10185                           tablat	equ	0xFF5
 10186                           prodl	equ	0xFF3
 10187                           intcon	equ	0xFF2
 10188                           postinc0	equ	0xFEE
 10189                           wreg	equ	0xFE8
 10190                           indf1	equ	0xFE7
 10191                           postinc1	equ	0xFE6
 10192                           postdec1	equ	0xFE5
 10193                           fsr1h	equ	0xFE2
 10194                           fsr1l	equ	0xFE1
 10195                           indf2	equ	0xFDF
 10196                           postinc2	equ	0xFDE
 10197                           postdec2	equ	0xFDD
 10198                           fsr2h	equ	0xFDA
 10199                           fsr2l	equ	0xFD9
 10200                           status	equ	0xFD8
 10201                           
 10202 ;; *************** function _KeyScan *****************
 10203 ;; Defined at:
 10204 ;;		line 12 in file "key.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  keytime         4   31[COMRAM] long 
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      unsigned char 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2, status,0, cstack
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10218 ;;      Params:         0       0       0       0
 10219 ;;      Locals:         4       0       0       0
 10220 ;;      Temps:          0       0       0       0
 10221 ;;      Totals:         4       0       0       0
 10222 ;;Total ram usage:        4 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    5
 10225 ;; This function calls:
 10226 ;;		_delay
 10227 ;; This function is called by:
 10228 ;;		_main
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text25
 10233  001B46                     __ptext25:
 10234                           	opt stack 0
 10235  001B46                     _KeyScan:
 10236                           	opt stack 25
 10237                           
 10238                           ;key.c: 14: long keytime=0;
 10239                           
 10240                           ;incstack = 0
 10241  001B46  6A20               	clrf	KeyScan@keytime,c
 10242  001B48  6A21               	clrf	KeyScan@keytime+1,c
 10243  001B4A  6A22               	clrf	KeyScan@keytime+2,c
 10244  001B4C  6A23               	clrf	KeyScan@keytime+3,c
 10245                           
 10246                           ;key.c: 15: if(RD6==0 || RD7==0 || RB6==0 || RB7==0)
 10247  001B4E  BC83               	btfsc	3971,6,c	;volatile
 10248  001B50  AE83               	btfss	3971,7,c	;volatile
 10249  001B52  D004               	goto	l5242
 10250  001B54  AC81               	btfss	3969,6,c	;volatile
 10251  001B56  D002               	goto	l5242
 10252  001B58  BE81               	btfsc	3969,7,c	;volatile
 10253  001B5A  0C00               	retlw	0
 10254  001B5C                     l5242:
 10255                           
 10256                           ;key.c: 16: {
 10257                           ;key.c: 17: delay(500);
 10258  001B5C  0E01               	movlw	1
 10259  001B5E  6E1F               	movwf	delay@t+1,c
 10260  001B60  0EF4               	movlw	244
 10261  001B62  6E1E               	movwf	delay@t,c
 10262  001B64  EC47  F018         	call	_delay	;wreg free
 10263                           
 10264                           ;key.c: 18: if(RD6==0)
 10265  001B68  BC83               	btfsc	3971,6,c	;volatile
 10266  001B6A  D01E               	goto	l972
 10267  001B6C  D00F               	goto	l5254
 10268  001B6E                     l5248:
 10269                           
 10270                           ;key.c: 21: {
 10271                           ;key.c: 22: if(keytime>=60000)
 10272  001B6E  BE23               	btfsc	KeyScan@keytime+3,7,c
 10273  001B70  D008               	goto	l5252
 10274  001B72  5023               	movf	KeyScan@keytime+3,w,c
 10275  001B74  1022               	iorwf	KeyScan@keytime+2,w,c
 10276  001B76  E10A               	bnz	l5254
 10277  001B78  0E60               	movlw	96
 10278  001B7A  5C20               	subwf	KeyScan@keytime,w,c
 10279  001B7C  0EEA               	movlw	234
 10280  001B7E  5821               	subwfb	KeyScan@keytime+1,w,c
 10281  001B80  E205               	bc	l5254
 10282  001B82                     l5252:
 10283                           
 10284                           ;key.c: 24: else
 10285                           ;key.c: 25: {keytime++;}
 10286  001B82  2A20               	incf	KeyScan@keytime,f,c
 10287  001B84  0E00               	movlw	0
 10288  001B86  2221               	addwfc	KeyScan@keytime+1,f,c
 10289  001B88  2222               	addwfc	KeyScan@keytime+2,f,c
 10290  001B8A  2223               	addwfc	KeyScan@keytime+3,f,c
 10291  001B8C                     l5254:
 10292  001B8C  AC83               	btfss	3971,6,c	;volatile
 10293  001B8E  D7EF               	goto	l5248
 10294                           
 10295                           ;key.c: 26: }
 10296                           ;key.c: 27: if(keytime>=59999)
 10297  001B90  BE23               	btfsc	KeyScan@keytime+3,7,c
 10298  001B92  0C01               	retlw	1
 10299  001B94  5023               	movf	KeyScan@keytime+3,w,c
 10300  001B96  1022               	iorwf	KeyScan@keytime+2,w,c
 10301  001B98  E106               	bnz	u3720
 10302  001B9A  0E5F               	movlw	95
 10303  001B9C  5C20               	subwf	KeyScan@keytime,w,c
 10304  001B9E  0EEA               	movlw	234
 10305  001BA0  5821               	subwfb	KeyScan@keytime+1,w,c
 10306  001BA2  A0D8               	btfss	status,0,c
 10307  001BA4  0C01               	retlw	1
 10308  001BA6                     u3720:
 10309                           
 10310                           ;key.c: 28: {return 5;}
 10311  001BA6  0C05               	retlw	5
 10312  001BA8                     l972:
 10313                           
 10314                           ;key.c: 31: }
 10315                           ;key.c: 32: if(RD7==0)
 10316  001BA8  BE83               	btfsc	3971,7,c	;volatile
 10317  001BAA  D01E               	goto	l981
 10318  001BAC  D00F               	goto	l5276
 10319  001BAE                     l5270:
 10320                           
 10321                           ;key.c: 35: {
 10322                           ;key.c: 36: if(keytime>=60000)
 10323  001BAE  BE23               	btfsc	KeyScan@keytime+3,7,c
 10324  001BB0  D008               	goto	l5274
 10325  001BB2  5023               	movf	KeyScan@keytime+3,w,c
 10326  001BB4  1022               	iorwf	KeyScan@keytime+2,w,c
 10327  001BB6  E10A               	bnz	l5276
 10328  001BB8  0E60               	movlw	96
 10329  001BBA  5C20               	subwf	KeyScan@keytime,w,c
 10330  001BBC  0EEA               	movlw	234
 10331  001BBE  5821               	subwfb	KeyScan@keytime+1,w,c
 10332  001BC0  E205               	bc	l5276
 10333  001BC2                     l5274:
 10334                           
 10335                           ;key.c: 38: else
 10336                           ;key.c: 39: {keytime++;}
 10337  001BC2  2A20               	incf	KeyScan@keytime,f,c
 10338  001BC4  0E00               	movlw	0
 10339  001BC6  2221               	addwfc	KeyScan@keytime+1,f,c
 10340  001BC8  2222               	addwfc	KeyScan@keytime+2,f,c
 10341  001BCA  2223               	addwfc	KeyScan@keytime+3,f,c
 10342  001BCC                     l5276:
 10343  001BCC  AE83               	btfss	3971,7,c	;volatile
 10344  001BCE  D7EF               	goto	l5270
 10345                           
 10346                           ;key.c: 40: }
 10347                           ;key.c: 41: if(keytime>=59999)
 10348  001BD0  BE23               	btfsc	KeyScan@keytime+3,7,c
 10349  001BD2  0C02               	retlw	2
 10350  001BD4  5023               	movf	KeyScan@keytime+3,w,c
 10351  001BD6  1022               	iorwf	KeyScan@keytime+2,w,c
 10352  001BD8  E106               	bnz	u3760
 10353  001BDA  0E5F               	movlw	95
 10354  001BDC  5C20               	subwf	KeyScan@keytime,w,c
 10355  001BDE  0EEA               	movlw	234
 10356  001BE0  5821               	subwfb	KeyScan@keytime+1,w,c
 10357  001BE2  A0D8               	btfss	status,0,c
 10358  001BE4  0C02               	retlw	2
 10359  001BE6                     u3760:
 10360                           
 10361                           ;key.c: 42: {return 6;}
 10362  001BE6  0C06               	retlw	6
 10363  001BE8                     l981:
 10364                           
 10365                           ;key.c: 45: }
 10366                           ;key.c: 46: if(RB6==0)
 10367  001BE8  BC81               	btfsc	3969,6,c	;volatile
 10368  001BEA  D01E               	goto	l989
 10369  001BEC  D00F               	goto	l5298
 10370  001BEE                     l5292:
 10371                           
 10372                           ;key.c: 49: {
 10373                           ;key.c: 50: if(keytime>=60000)
 10374  001BEE  BE23               	btfsc	KeyScan@keytime+3,7,c
 10375  001BF0  D008               	goto	l5296
 10376  001BF2  5023               	movf	KeyScan@keytime+3,w,c
 10377  001BF4  1022               	iorwf	KeyScan@keytime+2,w,c
 10378  001BF6  E10A               	bnz	l5298
 10379  001BF8  0E60               	movlw	96
 10380  001BFA  5C20               	subwf	KeyScan@keytime,w,c
 10381  001BFC  0EEA               	movlw	234
 10382  001BFE  5821               	subwfb	KeyScan@keytime+1,w,c
 10383  001C00  E205               	bc	l5298
 10384  001C02                     l5296:
 10385                           
 10386                           ;key.c: 52: else
 10387                           ;key.c: 53: {keytime++;}
 10388  001C02  2A20               	incf	KeyScan@keytime,f,c
 10389  001C04  0E00               	movlw	0
 10390  001C06  2221               	addwfc	KeyScan@keytime+1,f,c
 10391  001C08  2222               	addwfc	KeyScan@keytime+2,f,c
 10392  001C0A  2223               	addwfc	KeyScan@keytime+3,f,c
 10393  001C0C                     l5298:
 10394  001C0C  AC81               	btfss	3969,6,c	;volatile
 10395  001C0E  D7EF               	goto	l5292
 10396                           
 10397                           ;key.c: 54: }
 10398                           ;key.c: 55: if(keytime>=59999)
 10399  001C10  BE23               	btfsc	KeyScan@keytime+3,7,c
 10400  001C12  0C03               	retlw	3
 10401  001C14  5023               	movf	KeyScan@keytime+3,w,c
 10402  001C16  1022               	iorwf	KeyScan@keytime+2,w,c
 10403  001C18  E106               	bnz	u3800
 10404  001C1A  0E5F               	movlw	95
 10405  001C1C  5C20               	subwf	KeyScan@keytime,w,c
 10406  001C1E  0EEA               	movlw	234
 10407  001C20  5821               	subwfb	KeyScan@keytime+1,w,c
 10408  001C22  A0D8               	btfss	status,0,c
 10409  001C24  0C03               	retlw	3
 10410  001C26                     u3800:
 10411                           
 10412                           ;key.c: 56: {return 7;}
 10413  001C26  0C07               	retlw	7
 10414  001C28                     l989:
 10415                           
 10416                           ;key.c: 59: }
 10417                           ;key.c: 60: if(RB7==0)
 10418  001C28  BE81               	btfsc	3969,7,c	;volatile
 10419  001C2A  0C00               	retlw	0
 10420  001C2C  D00F               	goto	l5320
 10421  001C2E                     l5314:
 10422                           
 10423                           ;key.c: 63: {
 10424                           ;key.c: 64: if(keytime>=60000)
 10425  001C2E  BE23               	btfsc	KeyScan@keytime+3,7,c
 10426  001C30  D008               	goto	l5318
 10427  001C32  5023               	movf	KeyScan@keytime+3,w,c
 10428  001C34  1022               	iorwf	KeyScan@keytime+2,w,c
 10429  001C36  E10A               	bnz	l5320
 10430  001C38  0E60               	movlw	96
 10431  001C3A  5C20               	subwf	KeyScan@keytime,w,c
 10432  001C3C  0EEA               	movlw	234
 10433  001C3E  5821               	subwfb	KeyScan@keytime+1,w,c
 10434  001C40  E205               	bc	l5320
 10435  001C42                     l5318:
 10436                           
 10437                           ;key.c: 66: else
 10438                           ;key.c: 67: {keytime++;}
 10439  001C42  2A20               	incf	KeyScan@keytime,f,c
 10440  001C44  0E00               	movlw	0
 10441  001C46  2221               	addwfc	KeyScan@keytime+1,f,c
 10442  001C48  2222               	addwfc	KeyScan@keytime+2,f,c
 10443  001C4A  2223               	addwfc	KeyScan@keytime+3,f,c
 10444  001C4C                     l5320:
 10445  001C4C  AE81               	btfss	3969,7,c	;volatile
 10446  001C4E  D7EF               	goto	l5314
 10447                           
 10448                           ;key.c: 68: }
 10449                           ;key.c: 69: if(keytime>=59999)
 10450  001C50  BE23               	btfsc	KeyScan@keytime+3,7,c
 10451  001C52  0C04               	retlw	4
 10452  001C54  5023               	movf	KeyScan@keytime+3,w,c
 10453  001C56  1022               	iorwf	KeyScan@keytime+2,w,c
 10454  001C58  E106               	bnz	u3840
 10455  001C5A  0E5F               	movlw	95
 10456  001C5C  5C20               	subwf	KeyScan@keytime,w,c
 10457  001C5E  0EEA               	movlw	234
 10458  001C60  5821               	subwfb	KeyScan@keytime+1,w,c
 10459  001C62  A0D8               	btfss	status,0,c
 10460  001C64  0C04               	retlw	4
 10461  001C66                     u3840:
 10462                           
 10463                           ;key.c: 70: {return 8;}
 10464  001C66  0C08               	retlw	8
 10465  001C68                     __end_of_KeyScan:
 10466                           	opt stack 0
 10467                           tblptru	equ	0xFF8
 10468                           tblptrh	equ	0xFF7
 10469                           tblptrl	equ	0xFF6
 10470                           tablat	equ	0xFF5
 10471                           prodl	equ	0xFF3
 10472                           intcon	equ	0xFF2
 10473                           postinc0	equ	0xFEE
 10474                           wreg	equ	0xFE8
 10475                           indf1	equ	0xFE7
 10476                           postinc1	equ	0xFE6
 10477                           postdec1	equ	0xFE5
 10478                           fsr1h	equ	0xFE2
 10479                           fsr1l	equ	0xFE1
 10480                           indf2	equ	0xFDF
 10481                           postinc2	equ	0xFDE
 10482                           postdec2	equ	0xFDD
 10483                           fsr2h	equ	0xFDA
 10484                           fsr2l	equ	0xFD9
 10485                           status	equ	0xFD8
 10486                           
 10487 ;; *************** function _KEY_INIT *****************
 10488 ;; Defined at:
 10489 ;;		line 7 in file "key.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		None
 10498 ;; Tracked objects:
 10499 ;;		On entry : F/0
 10500 ;;		On exit  : F/0
 10501 ;;		Unchanged: F/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10503 ;;      Params:         0       0       0       0
 10504 ;;      Locals:         0       0       0       0
 10505 ;;      Temps:          0       0       0       0
 10506 ;;      Totals:         0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:    4
 10510 ;; This function calls:
 10511 ;;		Nothing
 10512 ;; This function is called by:
 10513 ;;		_main
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517                           	psect	text26
 10518  0030BE                     __ptext26:
 10519                           	opt stack 0
 10520  0030BE                     _KEY_INIT:
 10521                           	opt stack 26
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;key.c: 9: TRISD6=1;TRISD7=1;TRISB6=1;TRISB7=1;TRISC1=1;TRISC2=1;
 10525                           
 10526                           ;incstack = 0
 10527  0030BE  8C95               	bsf	3989,6,c	;volatile
 10528  0030C0  8E95               	bsf	3989,7,c	;volatile
 10529  0030C2  8C93               	bsf	3987,6,c	;volatile
 10530  0030C4  8E93               	bsf	3987,7,c	;volatile
 10531  0030C6  8294               	bsf	3988,1,c	;volatile
 10532  0030C8  8494               	bsf	3988,2,c	;volatile
 10533                           
 10534                           ; BSR set to: 0
 10535  0030CA  0012               	return		;funcret
 10536  0030CC                     __end_of_KEY_INIT:
 10537                           	opt stack 0
 10538                           tblptru	equ	0xFF8
 10539                           tblptrh	equ	0xFF7
 10540                           tblptrl	equ	0xFF6
 10541                           tablat	equ	0xFF5
 10542                           prodl	equ	0xFF3
 10543                           intcon	equ	0xFF2
 10544                           postinc0	equ	0xFEE
 10545                           wreg	equ	0xFE8
 10546                           indf1	equ	0xFE7
 10547                           postinc1	equ	0xFE6
 10548                           postdec1	equ	0xFE5
 10549                           fsr1h	equ	0xFE2
 10550                           fsr1l	equ	0xFE1
 10551                           indf2	equ	0xFDF
 10552                           postinc2	equ	0xFDE
 10553                           postdec2	equ	0xFDD
 10554                           fsr2h	equ	0xFDA
 10555                           fsr2l	equ	0xFD9
 10556                           status	equ	0xFD8
 10557                           
 10558 ;; *************** function _IDPage *****************
 10559 ;; Defined at:
 10560 ;;		line 484 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;		None
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;  buf             4   45[BANK0 ] unsigned char [4]
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  1    wreg      void 
 10567 ;; Registers used:
 10568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10574 ;;      Params:         0       0       0       0
 10575 ;;      Locals:         0       4       0       0
 10576 ;;      Temps:          0       0       0       0
 10577 ;;      Totals:         0       4       0       0
 10578 ;;Total ram usage:        4 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    8
 10581 ;; This function calls:
 10582 ;;		_Ascii2Str
 10583 ;;		_LCD_HZ
 10584 ;;		_LCD_P8x16Str
 10585 ;;		_itoa
 10586 ;; This function is called by:
 10587 ;;		_main
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text27
 10592  0010BC                     __ptext27:
 10593                           	opt stack 0
 10594  0010BC                     _IDPage:
 10595                           	opt stack 22
 10596                           
 10597                           ;LCD.c: 486: unsigned char buf[4];
 10598                           ;LCD.c: 488: LCD_HZ(24, 0, F16x16_HZ,0);
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;incstack = 0
 10602  0010BC  6A22               	clrf	LCD_HZ@y,c
 10603  0010BE  0E1F               	movlw	low _F16x16_HZ
 10604  0010C0  6E23               	movwf	LCD_HZ@data,c
 10605  0010C2  0E35               	movlw	high _F16x16_HZ
 10606  0010C4  6E24               	movwf	LCD_HZ@data+1,c
 10607  0010C6  6A25               	clrf	LCD_HZ@N,c
 10608  0010C8  0E18               	movlw	24
 10609  0010CA  EC28  F013         	call	_LCD_HZ
 10610                           
 10611                           ;LCD.c: 489: LCD_HZ(40, 0, F16x16_HZ,1);
 10612  0010CE  6A22               	clrf	LCD_HZ@y,c
 10613  0010D0  0E1F               	movlw	low _F16x16_HZ
 10614  0010D2  6E23               	movwf	LCD_HZ@data,c
 10615  0010D4  0E35               	movlw	high _F16x16_HZ
 10616  0010D6  6E24               	movwf	LCD_HZ@data+1,c
 10617  0010D8  0E01               	movlw	1
 10618  0010DA  6E25               	movwf	LCD_HZ@N,c
 10619  0010DC  0E28               	movlw	40
 10620  0010DE  EC28  F013         	call	_LCD_HZ
 10621                           
 10622                           ;LCD.c: 490: LCD_HZ(56, 0, F16x16_HZ,2);
 10623  0010E2  6A22               	clrf	LCD_HZ@y,c
 10624  0010E4  0E1F               	movlw	low _F16x16_HZ
 10625  0010E6  6E23               	movwf	LCD_HZ@data,c
 10626  0010E8  0E35               	movlw	high _F16x16_HZ
 10627  0010EA  6E24               	movwf	LCD_HZ@data+1,c
 10628  0010EC  0E02               	movlw	2
 10629  0010EE  6E25               	movwf	LCD_HZ@N,c
 10630  0010F0  0E38               	movlw	56
 10631  0010F2  EC28  F013         	call	_LCD_HZ
 10632                           
 10633                           ;LCD.c: 491: LCD_HZ(72, 0, F16x16_HZ,3);
 10634  0010F6  6A22               	clrf	LCD_HZ@y,c
 10635  0010F8  0E1F               	movlw	low _F16x16_HZ
 10636  0010FA  6E23               	movwf	LCD_HZ@data,c
 10637  0010FC  0E35               	movlw	high _F16x16_HZ
 10638  0010FE  6E24               	movwf	LCD_HZ@data+1,c
 10639  001100  0E03               	movlw	3
 10640  001102  6E25               	movwf	LCD_HZ@N,c
 10641  001104  0E48               	movlw	72
 10642  001106  EC28  F013         	call	_LCD_HZ
 10643                           
 10644                           ;LCD.c: 492: LCD_HZ(88, 0, F16x16_HZ,4);
 10645  00110A  6A22               	clrf	LCD_HZ@y,c
 10646  00110C  0E1F               	movlw	low _F16x16_HZ
 10647  00110E  6E23               	movwf	LCD_HZ@data,c
 10648  001110  0E35               	movlw	high _F16x16_HZ
 10649  001112  6E24               	movwf	LCD_HZ@data+1,c
 10650  001114  0E04               	movlw	4
 10651  001116  6E25               	movwf	LCD_HZ@N,c
 10652  001118  0E58               	movlw	88
 10653  00111A  EC28  F013         	call	_LCD_HZ
 10654                           
 10655                           ;LCD.c: 493: LCD_HZ(104, 0, F16x16_HZ,5);
 10656  00111E  6A22               	clrf	LCD_HZ@y,c
 10657  001120  0E1F               	movlw	low _F16x16_HZ
 10658  001122  6E23               	movwf	LCD_HZ@data,c
 10659  001124  0E35               	movlw	high _F16x16_HZ
 10660  001126  6E24               	movwf	LCD_HZ@data+1,c
 10661  001128  0E05               	movlw	5
 10662  00112A  6E25               	movwf	LCD_HZ@N,c
 10663  00112C  0E68               	movlw	104
 10664  00112E  EC28  F013         	call	_LCD_HZ
 10665                           
 10666                           ;LCD.c: 495: LCD_P8x16Str(8, 2, "->");
 10667  001132  0E02               	movlw	2
 10668  001134  6E22               	movwf	LCD_P8x16Str@y,c
 10669  001136  0EF4               	movlw	low STR_4
 10670  001138  6E23               	movwf	LCD_P8x16Str@ch,c
 10671  00113A  0E3F               	movlw	high STR_4
 10672  00113C  6E24               	movwf	LCD_P8x16Str@ch+1,c
 10673  00113E  0E08               	movlw	8
 10674  001140  EC34  F00E         	call	_LCD_P8x16Str
 10675                           
 10676                           ;LCD.c: 496: LCD_HZ(24, 2, F16x16_HZ,2);
 10677  001144  0E02               	movlw	2
 10678  001146  6E22               	movwf	LCD_HZ@y,c
 10679  001148  0E1F               	movlw	low _F16x16_HZ
 10680  00114A  6E23               	movwf	LCD_HZ@data,c
 10681  00114C  0E35               	movlw	high _F16x16_HZ
 10682  00114E  6E24               	movwf	LCD_HZ@data+1,c
 10683  001150  0E02               	movlw	2
 10684  001152  6E25               	movwf	LCD_HZ@N,c
 10685  001154  0E18               	movlw	24
 10686  001156  EC28  F013         	call	_LCD_HZ
 10687                           
 10688                           ;LCD.c: 497: LCD_HZ(40, 2, F16x16_HZ,3);
 10689  00115A  0E02               	movlw	2
 10690  00115C  6E22               	movwf	LCD_HZ@y,c
 10691  00115E  0E1F               	movlw	low _F16x16_HZ
 10692  001160  6E23               	movwf	LCD_HZ@data,c
 10693  001162  0E35               	movlw	high _F16x16_HZ
 10694  001164  6E24               	movwf	LCD_HZ@data+1,c
 10695  001166  0E03               	movlw	3
 10696  001168  6E25               	movwf	LCD_HZ@N,c
 10697  00116A  0E28               	movlw	40
 10698  00116C  EC28  F013         	call	_LCD_HZ
 10699                           
 10700                           ;LCD.c: 498: LCD_P8x16Str(56, 2, ":");
 10701  001170  0E02               	movlw	2
 10702  001172  6E22               	movwf	LCD_P8x16Str@y,c
 10703  001174  0EFD               	movlw	low STR_5
 10704  001176  6E23               	movwf	LCD_P8x16Str@ch,c
 10705  001178  0E3F               	movlw	high STR_5
 10706  00117A  6E24               	movwf	LCD_P8x16Str@ch+1,c
 10707  00117C  0E38               	movlw	56
 10708  00117E  EC34  F00E         	call	_LCD_P8x16Str
 10709                           
 10710                           ;LCD.c: 500: itoa(buf,OperatorID,10);
 10711  001182  C04A  F087         	movff	_OperatorID,itoa@val
 10712  001186  0100               	movlb	0	; () banked
 10713  001188  6B88               	clrf	(itoa@val+1)& (0+255),b
 10714  00118A  6B8A               	clrf	(itoa@base+1)& (0+255),b
 10715  00118C  0E0A               	movlw	10
 10716  00118E  6F89               	movwf	itoa@base& (0+255),b
 10717  001190  0E8D               	movlw	IDPage@buf& (0+255)
 10718  001192  EC9A  F016         	call	_itoa
 10719                           
 10720                           ;LCD.c: 501: if(OperatorID<=9){LCD_P8x16Str(72,2," ");}LCD_P8x16Str(64,2,buf);
 10721  001196  0E0A               	movlw	10
 10722  001198  604A               	cpfslt	_OperatorID,c
 10723  00119A  D009               	goto	l275
 10724  00119C  0E02               	movlw	2
 10725  00119E  6E22               	movwf	LCD_P8x16Str@y,c
 10726  0011A0  0EEF               	movlw	low (STR_24+3)
 10727  0011A2  6E23               	movwf	LCD_P8x16Str@ch,c
 10728  0011A4  0E3F               	movlw	high (STR_24+3)
 10729  0011A6  6E24               	movwf	LCD_P8x16Str@ch+1,c
 10730  0011A8  0E48               	movlw	72
 10731  0011AA  EC34  F00E         	call	_LCD_P8x16Str
 10732  0011AE                     l275:
 10733  0011AE  0E02               	movlw	2
 10734  0011B0  6E22               	movwf	LCD_P8x16Str@y,c
 10735  0011B2  0E8D               	movlw	low IDPage@buf
 10736  0011B4  6E23               	movwf	LCD_P8x16Str@ch,c
 10737  0011B6  6A24               	clrf	LCD_P8x16Str@ch+1,c
 10738  0011B8  0E40               	movlw	64
 10739  0011BA  EC34  F00E         	call	_LCD_P8x16Str
 10740                           
 10741                           ;LCD.c: 502: itoa(buf,OpenTimes,10);
 10742  0011BE  C0C9  F087         	movff	_OpenTimes,itoa@val
 10743  0011C2  0100               	movlb	0	; () banked
 10744  0011C4  6B88               	clrf	(itoa@val+1)& (0+255),b
 10745  0011C6  6B8A               	clrf	(itoa@base+1)& (0+255),b
 10746  0011C8  0E0A               	movlw	10
 10747  0011CA  6F89               	movwf	itoa@base& (0+255),b
 10748  0011CC  0E8D               	movlw	IDPage@buf& (0+255)
 10749  0011CE  EC9A  F016         	call	_itoa
 10750                           
 10751                           ;LCD.c: 504: LCD_P8x16Str(96,2,buf);
 10752  0011D2  0E02               	movlw	2
 10753  0011D4  6E22               	movwf	LCD_P8x16Str@y,c
 10754  0011D6  0E8D               	movlw	low IDPage@buf
 10755  0011D8  6E23               	movwf	LCD_P8x16Str@ch,c
 10756  0011DA  6A24               	clrf	LCD_P8x16Str@ch+1,c
 10757  0011DC  0E60               	movlw	96
 10758  0011DE  EC34  F00E         	call	_LCD_P8x16Str
 10759                           
 10760                           ;LCD.c: 506: Ascii2Str(table[6],buf);LCD_P8x16Str(24, 4, buf);LCD_P8x16Str(8, 4, "20");L
      +                          CD_HZ(40, 4, F16x16_HZ,6);
 10761  0011E2  0E8D               	movlw	low IDPage@buf
 10762  0011E4  6E1E               	movwf	Ascii2Str@buf,c
 10763  0011E6  5051               	movf	_table+6,w,c
 10764  0011E8  EC3F  F014         	call	_Ascii2Str
 10765  0011EC  0E04               	movlw	4
 10766  0011EE  6E22               	movwf	LCD_P8x16Str@y,c
 10767  0011F0  0E8D               	movlw	low IDPage@buf
 10768  0011F2  6E23               	movwf	LCD_P8x16Str@ch,c
 10769  0011F4  6A24               	clrf	LCD_P8x16Str@ch+1,c
 10770  0011F6  0E18               	movlw	24
 10771  0011F8  EC34  F00E         	call	_LCD_P8x16Str
 10772  0011FC  0E04               	movlw	4
 10773  0011FE  6E22               	movwf	LCD_P8x16Str@y,c
 10774  001200  0EF1               	movlw	low STR_12
 10775  001202  6E23               	movwf	LCD_P8x16Str@ch,c
 10776  001204  0E3F               	movlw	high STR_12
 10777  001206  6E24               	movwf	LCD_P8x16Str@ch+1,c
 10778  001208  0E08               	movlw	8
 10779  00120A  EC34  F00E         	call	_LCD_P8x16Str
 10780  00120E  0E04               	movlw	4
 10781  001210  6E22               	movwf	LCD_HZ@y,c
 10782  001212  0E1F               	movlw	low _F16x16_HZ
 10783  001214  6E23               	movwf	LCD_HZ@data,c
 10784  001216  0E35               	movlw	high _F16x16_HZ
 10785  001218  6E24               	movwf	LCD_HZ@data+1,c
 10786  00121A  0E06               	movlw	6
 10787  00121C  6E25               	movwf	LCD_HZ@N,c
 10788  00121E  0E28               	movlw	40
 10789  001220  EC28  F013         	call	_LCD_HZ
 10790                           
 10791                           ;LCD.c: 507: Ascii2Str(table[4],buf);LCD_P8x16Str(56, 4, buf);LCD_HZ(72, 4, F16x16_HZ,7)
      +                          ;
 10792  001224  0E8D               	movlw	low IDPage@buf
 10793  001226  6E1E               	movwf	Ascii2Str@buf,c
 10794  001228  504F               	movf	_table+4,w,c
 10795  00122A  EC3F  F014         	call	_Ascii2Str
 10796  00122E  0E04               	movlw	4
 10797  001230  6E22               	movwf	LCD_P8x16Str@y,c
 10798  001232  0E8D               	movlw	low IDPage@buf
 10799  001234  6E23               	movwf	LCD_P8x16Str@ch,c
 10800  001236  6A24               	clrf	LCD_P8x16Str@ch+1,c
 10801  001238  0E38               	movlw	56
 10802  00123A  EC34  F00E         	call	_LCD_P8x16Str
 10803  00123E  0E04               	movlw	4
 10804  001240  6E22               	movwf	LCD_HZ@y,c
 10805  001242  0E1F               	movlw	low _F16x16_HZ
 10806  001244  6E23               	movwf	LCD_HZ@data,c
 10807  001246  0E35               	movlw	high _F16x16_HZ
 10808  001248  6E24               	movwf	LCD_HZ@data+1,c
 10809  00124A  0E07               	movlw	7
 10810  00124C  6E25               	movwf	LCD_HZ@N,c
 10811  00124E  0E48               	movlw	72
 10812  001250  EC28  F013         	call	_LCD_HZ
 10813                           
 10814                           ;LCD.c: 508: Ascii2Str(table[3],buf);LCD_P8x16Str(88, 4, buf);LCD_HZ(104, 4, F16x16_HZ,8
      +                          );
 10815  001254  0E8D               	movlw	low IDPage@buf
 10816  001256  6E1E               	movwf	Ascii2Str@buf,c
 10817  001258  504E               	movf	_table+3,w,c
 10818  00125A  EC3F  F014         	call	_Ascii2Str
 10819  00125E  0E04               	movlw	4
 10820  001260  6E22               	movwf	LCD_P8x16Str@y,c
 10821  001262  0E8D               	movlw	low IDPage@buf
 10822  001264  6E23               	movwf	LCD_P8x16Str@ch,c
 10823  001266  6A24               	clrf	LCD_P8x16Str@ch+1,c
 10824  001268  0E58               	movlw	88
 10825  00126A  EC34  F00E         	call	_LCD_P8x16Str
 10826  00126E  0E04               	movlw	4
 10827  001270  6E22               	movwf	LCD_HZ@y,c
 10828  001272  0E1F               	movlw	low _F16x16_HZ
 10829  001274  6E23               	movwf	LCD_HZ@data,c
 10830  001276  0E35               	movlw	high _F16x16_HZ
 10831  001278  6E24               	movwf	LCD_HZ@data+1,c
 10832  00127A  0E08               	movlw	8
 10833  00127C  6E25               	movwf	LCD_HZ@N,c
 10834  00127E  0E68               	movlw	104
 10835  001280  EC28  F013         	call	_LCD_HZ
 10836                           
 10837                           ;LCD.c: 510: Ascii2Str(table[2],buf);LCD_P8x16Str(30, 6, buf); LCD_P8x16Str(46, 6, ":");
 10838  001284  0E8D               	movlw	low IDPage@buf
 10839  001286  6E1E               	movwf	Ascii2Str@buf,c
 10840  001288  504D               	movf	_table+2,w,c
 10841  00128A  EC3F  F014         	call	_Ascii2Str
 10842  00128E  0E06               	movlw	6
 10843  001290  6E22               	movwf	LCD_P8x16Str@y,c
 10844  001292  0E8D               	movlw	low IDPage@buf
 10845  001294  6E23               	movwf	LCD_P8x16Str@ch,c
 10846  001296  6A24               	clrf	LCD_P8x16Str@ch+1,c
 10847  001298  0E1E               	movlw	30
 10848  00129A  EC34  F00E         	call	_LCD_P8x16Str
 10849  00129E  0E06               	movlw	6
 10850  0012A0  6E22               	movwf	LCD_P8x16Str@y,c
 10851  0012A2  0EFD               	movlw	low STR_5
 10852  0012A4  6E23               	movwf	LCD_P8x16Str@ch,c
 10853  0012A6  0E3F               	movlw	high STR_5
 10854  0012A8  6E24               	movwf	LCD_P8x16Str@ch+1,c
 10855  0012AA  0E2E               	movlw	46
 10856  0012AC  EC34  F00E         	call	_LCD_P8x16Str
 10857                           
 10858                           ;LCD.c: 511: Ascii2Str(table[1],buf);LCD_P8x16Str(54, 6, buf); LCD_P8x16Str(70, 6, ":");
 10859  0012B0  0E8D               	movlw	low IDPage@buf
 10860  0012B2  6E1E               	movwf	Ascii2Str@buf,c
 10861  0012B4  504C               	movf	_table+1,w,c
 10862  0012B6  EC3F  F014         	call	_Ascii2Str
 10863  0012BA  0E06               	movlw	6
 10864  0012BC  6E22               	movwf	LCD_P8x16Str@y,c
 10865  0012BE  0E8D               	movlw	low IDPage@buf
 10866  0012C0  6E23               	movwf	LCD_P8x16Str@ch,c
 10867  0012C2  6A24               	clrf	LCD_P8x16Str@ch+1,c
 10868  0012C4  0E36               	movlw	54
 10869  0012C6  EC34  F00E         	call	_LCD_P8x16Str
 10870  0012CA  0E06               	movlw	6
 10871  0012CC  6E22               	movwf	LCD_P8x16Str@y,c
 10872  0012CE  0EFD               	movlw	low STR_5
 10873  0012D0  6E23               	movwf	LCD_P8x16Str@ch,c
 10874  0012D2  0E3F               	movlw	high STR_5
 10875  0012D4  6E24               	movwf	LCD_P8x16Str@ch+1,c
 10876  0012D6  0E46               	movlw	70
 10877  0012D8  EC34  F00E         	call	_LCD_P8x16Str
 10878                           
 10879                           ;LCD.c: 512: Ascii2Str(table[0],buf);LCD_P8x16Str(76, 6, buf);
 10880  0012DC  0E8D               	movlw	low IDPage@buf
 10881  0012DE  6E1E               	movwf	Ascii2Str@buf,c
 10882  0012E0  504B               	movf	_table,w,c
 10883  0012E2  EC3F  F014         	call	_Ascii2Str
 10884  0012E6  0E06               	movlw	6
 10885  0012E8  6E22               	movwf	LCD_P8x16Str@y,c
 10886  0012EA  0E8D               	movlw	low IDPage@buf
 10887  0012EC  6E23               	movwf	LCD_P8x16Str@ch,c
 10888  0012EE  6A24               	clrf	LCD_P8x16Str@ch+1,c
 10889  0012F0  0E4C               	movlw	76
 10890  0012F2  EF34  F00E         	goto	_LCD_P8x16Str
 10891  0012F6                     __end_of_IDPage:
 10892                           	opt stack 0
 10893                           tblptru	equ	0xFF8
 10894                           tblptrh	equ	0xFF7
 10895                           tblptrl	equ	0xFF6
 10896                           tablat	equ	0xFF5
 10897                           prodl	equ	0xFF3
 10898                           intcon	equ	0xFF2
 10899                           postinc0	equ	0xFEE
 10900                           wreg	equ	0xFE8
 10901                           indf1	equ	0xFE7
 10902                           postinc1	equ	0xFE6
 10903                           postdec1	equ	0xFE5
 10904                           fsr1h	equ	0xFE2
 10905                           fsr1l	equ	0xFE1
 10906                           indf2	equ	0xFDF
 10907                           postinc2	equ	0xFDE
 10908                           postdec2	equ	0xFDD
 10909                           fsr2h	equ	0xFDA
 10910                           fsr2l	equ	0xFD9
 10911                           status	equ	0xFD8
 10912                           
 10913 ;; *************** function _Ascii2Str *****************
 10914 ;; Defined at:
 10915 ;;		line 158 in file "DS1302.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  ascii           1    wreg     unsigned char 
 10918 ;;  buf             1   29[COMRAM] PTR unsigned char 
 10919 ;;		 -> IDPage@buf(4), TimePage@buf(3), 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;  ascii           1   30[COMRAM] unsigned char 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      void 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10931 ;;      Params:         1       0       0       0
 10932 ;;      Locals:         1       0       0       0
 10933 ;;      Temps:          0       0       0       0
 10934 ;;      Totals:         2       0       0       0
 10935 ;;Total ram usage:        2 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    4
 10938 ;; This function calls:
 10939 ;;		Nothing
 10940 ;; This function is called by:
 10941 ;;		_TimePage
 10942 ;;		_IDPage
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text28
 10947  00287E                     __ptext28:
 10948                           	opt stack 0
 10949  00287E                     _Ascii2Str:
 10950                           	opt stack 25
 10951                           
 10952                           ;incstack = 0
 10953                           ;Ascii2Str@ascii stored from wreg
 10954  00287E  6E1F               	movwf	Ascii2Str@ascii,c
 10955                           
 10956                           ;DS1302.c: 161: {
 10957                           ;DS1302.c: 162: if (ascii <= 0x09 && ascii >= 0x00)
 10958  002880  0E0A               	movlw	10
 10959  002882  601F               	cpfslt	Ascii2Str@ascii,c
 10960  002884  D013               	goto	l4384
 10961                           
 10962                           ;DS1302.c: 163: {
 10963                           ;DS1302.c: 164: buf[0] = '0';
 10964  002886  501E               	movf	Ascii2Str@buf,w,c
 10965  002888  6ED9               	movwf	fsr2l,c
 10966  00288A  6ADA               	clrf	fsr2h,c
 10967  00288C  0E30               	movlw	48
 10968  00288E  6EDF               	movwf	indf2,c
 10969                           
 10970                           ;DS1302.c: 165: buf[1] = ascii + 0x30;
 10971  002890  501E               	movf	Ascii2Str@buf,w,c
 10972  002892  6ED9               	movwf	fsr2l,c
 10973  002894  6ADA               	clrf	fsr2h,c
 10974  002896  2AD9               	incf	fsr2l,f,c
 10975  002898  501F               	movf	Ascii2Str@ascii,w,c
 10976  00289A  0F30               	addlw	48
 10977  00289C  6EDF               	movwf	indf2,c
 10978                           
 10979                           ;DS1302.c: 166: buf[2]='\0';
 10980  00289E  501E               	movf	Ascii2Str@buf,w,c
 10981  0028A0  6ED9               	movwf	fsr2l,c
 10982  0028A2  6ADA               	clrf	fsr2h,c
 10983  0028A4  0E02               	movlw	2
 10984  0028A6  26D9               	addwf	fsr2l,f,c
 10985  0028A8  6ADF               	clrf	indf2,c
 10986                           
 10987                           ;DS1302.c: 167: }
 10988  0028AA  0C00               	retlw	0
 10989  0028AC                     l4384:
 10990                           
 10991                           ;DS1302.c: 168: else
 10992                           ;DS1302.c: 169: {
 10993                           ;DS1302.c: 170: buf[0] = ((ascii & 0xf0)>>4) + 0x30;
 10994  0028AC  501E               	movf	Ascii2Str@buf,w,c
 10995  0028AE  6ED9               	movwf	fsr2l,c
 10996  0028B0  6ADA               	clrf	fsr2h,c
 10997  0028B2  381F               	swapf	Ascii2Str@ascii,w,c
 10998  0028B4  0B0F               	andlw	15
 10999  0028B6  0F30               	addlw	48
 11000  0028B8  6EDF               	movwf	indf2,c
 11001                           
 11002                           ;DS1302.c: 171: buf[1] = (ascii & 0x0f) + 0x30;
 11003  0028BA  501E               	movf	Ascii2Str@buf,w,c
 11004  0028BC  6ED9               	movwf	fsr2l,c
 11005  0028BE  6ADA               	clrf	fsr2h,c
 11006  0028C0  2AD9               	incf	fsr2l,f,c
 11007  0028C2  501F               	movf	Ascii2Str@ascii,w,c
 11008  0028C4  0B0F               	andlw	15
 11009  0028C6  0F30               	addlw	48
 11010  0028C8  6EDF               	movwf	indf2,c
 11011                           
 11012                           ;DS1302.c: 172: buf[2]='\0';
 11013  0028CA  501E               	movf	Ascii2Str@buf,w,c
 11014  0028CC  6ED9               	movwf	fsr2l,c
 11015  0028CE  6ADA               	clrf	fsr2h,c
 11016  0028D0  0E02               	movlw	2
 11017  0028D2  26D9               	addwf	fsr2l,f,c
 11018  0028D4  6ADF               	clrf	indf2,c
 11019  0028D6  0C00               	retlw	0	;funcret
 11020  0028D8                     __end_of_Ascii2Str:
 11021                           	opt stack 0
 11022                           tblptru	equ	0xFF8
 11023                           tblptrh	equ	0xFF7
 11024                           tblptrl	equ	0xFF6
 11025                           tablat	equ	0xFF5
 11026                           prodl	equ	0xFF3
 11027                           intcon	equ	0xFF2
 11028                           postinc0	equ	0xFEE
 11029                           wreg	equ	0xFE8
 11030                           indf1	equ	0xFE7
 11031                           postinc1	equ	0xFE6
 11032                           postdec1	equ	0xFE5
 11033                           fsr1h	equ	0xFE2
 11034                           fsr1l	equ	0xFE1
 11035                           indf2	equ	0xFDF
 11036                           postinc2	equ	0xFDE
 11037                           postdec2	equ	0xFDD
 11038                           fsr2h	equ	0xFDA
 11039                           fsr2l	equ	0xFD9
 11040                           status	equ	0xFD8
 11041                           
 11042 ;; *************** function _Fill_Data *****************
 11043 ;; Defined at:
 11044 ;;		line 68 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  num             1    wreg     unsigned char 
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;  num             1   39[COMRAM] unsigned char 
 11049 ;;  address         2   40[COMRAM] int 
 11050 ;; Return value:  Size  Location     Type
 11051 ;;                  1    wreg      void 
 11052 ;; Registers used:
 11053 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11054 ;; Tracked objects:
 11055 ;;		On entry : F/0
 11056 ;;		On exit  : 0/0
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11059 ;;      Params:         0       0       0       0
 11060 ;;      Locals:         3       0       0       0
 11061 ;;      Temps:          2       0       0       0
 11062 ;;      Totals:         5       0       0       0
 11063 ;;Total ram usage:        5 bytes
 11064 ;; Hardware stack levels used:    1
 11065 ;; Hardware stack levels required when called:    6
 11066 ;; This function calls:
 11067 ;;		_Hex2Dex
 11068 ;;		_write_F
 11069 ;; This function is called by:
 11070 ;;		_main
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           	psect	text29
 11075  001FFE                     __ptext29:
 11076                           	opt stack 0
 11077  001FFE                     _Fill_Data:
 11078                           	opt stack 24
 11079                           
 11080                           ;incstack = 0
 11081                           ;Fill_Data@num stored from wreg
 11082  001FFE  6E28               	movwf	Fill_Data@num,c
 11083                           
 11084                           ;FRAM.c: 70: int address=16+(num-1)*8;
 11085  002000  5028               	movf	Fill_Data@num,w,c
 11086  002002  6E26               	movwf	??_Fill_Data& (0+255),c
 11087  002004  6A27               	clrf	(??_Fill_Data+1)& (0+255),c
 11088  002006  90D8               	bcf	status,0,c
 11089  002008  3626               	rlcf	??_Fill_Data,f,c
 11090  00200A  3627               	rlcf	??_Fill_Data+1,f,c
 11091  00200C  90D8               	bcf	status,0,c
 11092  00200E  3626               	rlcf	??_Fill_Data,f,c
 11093  002010  3627               	rlcf	??_Fill_Data+1,f,c
 11094  002012  90D8               	bcf	status,0,c
 11095  002014  3626               	rlcf	??_Fill_Data,f,c
 11096  002016  3627               	rlcf	??_Fill_Data+1,f,c
 11097  002018  0E08               	movlw	8
 11098  00201A  2426               	addwf	??_Fill_Data,w,c
 11099  00201C  6E29               	movwf	Fill_Data@address,c
 11100  00201E  0E00               	movlw	0
 11101  002020  2027               	addwfc	??_Fill_Data+1,w,c
 11102  002022  6E2A               	movwf	Fill_Data@address+1,c
 11103                           
 11104                           ;FRAM.c: 71: write_F(OperatorID,address);write_F(Hex2Dex(table[6]),address+1);write_F(He
      +                          x2Dex(table[4]),address+2);write_F(Hex2Dex(table[3]),address+3);
 11105  002024  C029  F021         	movff	Fill_Data@address,write_F@address
 11106  002028  C02A  F022         	movff	Fill_Data@address+1,write_F@address+1
 11107  00202C  504A               	movf	_OperatorID,w,c
 11108  00202E  EC66  F015         	call	_write_F
 11109  002032  2829               	incf	Fill_Data@address,w,c
 11110  002034  6E21               	movwf	write_F@address,c
 11111  002036  0E00               	movlw	0
 11112  002038  202A               	addwfc	Fill_Data@address+1,w,c
 11113  00203A  6E22               	movwf	write_F@address+1,c
 11114  00203C  5051               	movf	_table+6,w,c
 11115  00203E  ECB1  F017         	call	_Hex2Dex
 11116  002042  EC66  F015         	call	_write_F
 11117  002046  0E02               	movlw	2
 11118  002048  2429               	addwf	Fill_Data@address,w,c
 11119  00204A  6E21               	movwf	write_F@address,c
 11120  00204C  0E00               	movlw	0
 11121  00204E  202A               	addwfc	Fill_Data@address+1,w,c
 11122  002050  6E22               	movwf	write_F@address+1,c
 11123  002052  504F               	movf	_table+4,w,c
 11124  002054  ECB1  F017         	call	_Hex2Dex
 11125  002058  EC66  F015         	call	_write_F
 11126  00205C  0E03               	movlw	3
 11127  00205E  2429               	addwf	Fill_Data@address,w,c
 11128  002060  6E21               	movwf	write_F@address,c
 11129  002062  0E00               	movlw	0
 11130  002064  202A               	addwfc	Fill_Data@address+1,w,c
 11131  002066  6E22               	movwf	write_F@address+1,c
 11132  002068  504E               	movf	_table+3,w,c
 11133  00206A  ECB1  F017         	call	_Hex2Dex
 11134  00206E  EC66  F015         	call	_write_F
 11135                           
 11136                           ;FRAM.c: 72: write_F(Hex2Dex(table[2]),address+4);write_F(Hex2Dex(table[1]),address+5);w
      +                          rite_F(Hex2Dex(table[0]),address+6);write_F(Hex2Dex(UseNum),address+7);
 11137  002072  0E04               	movlw	4
 11138  002074  2429               	addwf	Fill_Data@address,w,c
 11139  002076  6E21               	movwf	write_F@address,c
 11140  002078  0E00               	movlw	0
 11141  00207A  202A               	addwfc	Fill_Data@address+1,w,c
 11142  00207C  6E22               	movwf	write_F@address+1,c
 11143  00207E  504D               	movf	_table+2,w,c
 11144  002080  ECB1  F017         	call	_Hex2Dex
 11145  002084  EC66  F015         	call	_write_F
 11146  002088  0E05               	movlw	5
 11147  00208A  2429               	addwf	Fill_Data@address,w,c
 11148  00208C  6E21               	movwf	write_F@address,c
 11149  00208E  0E00               	movlw	0
 11150  002090  202A               	addwfc	Fill_Data@address+1,w,c
 11151  002092  6E22               	movwf	write_F@address+1,c
 11152  002094  504C               	movf	_table+1,w,c
 11153  002096  ECB1  F017         	call	_Hex2Dex
 11154  00209A  EC66  F015         	call	_write_F
 11155  00209E  0E06               	movlw	6
 11156  0020A0  2429               	addwf	Fill_Data@address,w,c
 11157  0020A2  6E21               	movwf	write_F@address,c
 11158  0020A4  0E00               	movlw	0
 11159  0020A6  202A               	addwfc	Fill_Data@address+1,w,c
 11160  0020A8  6E22               	movwf	write_F@address+1,c
 11161  0020AA  504B               	movf	_table,w,c
 11162  0020AC  ECB1  F017         	call	_Hex2Dex
 11163  0020B0  EC66  F015         	call	_write_F
 11164  0020B4  0E07               	movlw	7
 11165  0020B6  2429               	addwf	Fill_Data@address,w,c
 11166  0020B8  6E21               	movwf	write_F@address,c
 11167  0020BA  0E00               	movlw	0
 11168  0020BC  202A               	addwfc	Fill_Data@address+1,w,c
 11169  0020BE  6E22               	movwf	write_F@address+1,c
 11170  0020C0  5049               	movf	_UseNum,w,c
 11171  0020C2  ECB1  F017         	call	_Hex2Dex
 11172  0020C6  EF66  F015         	goto	_write_F
 11173  0020CA                     __end_of_Fill_Data:
 11174                           	opt stack 0
 11175                           tblptru	equ	0xFF8
 11176                           tblptrh	equ	0xFF7
 11177                           tblptrl	equ	0xFF6
 11178                           tablat	equ	0xFF5
 11179                           prodl	equ	0xFF3
 11180                           intcon	equ	0xFF2
 11181                           postinc0	equ	0xFEE
 11182                           wreg	equ	0xFE8
 11183                           indf1	equ	0xFE7
 11184                           postinc1	equ	0xFE6
 11185                           postdec1	equ	0xFE5
 11186                           fsr1h	equ	0xFE2
 11187                           fsr1l	equ	0xFE1
 11188                           indf2	equ	0xFDF
 11189                           postinc2	equ	0xFDE
 11190                           postdec2	equ	0xFDD
 11191                           fsr2h	equ	0xFDA
 11192                           fsr2l	equ	0xFD9
 11193                           status	equ	0xFD8
 11194                           
 11195 ;; *************** function _Hex2Dex *****************
 11196 ;; Defined at:
 11197 ;;		line 204 in file "DS1302.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;  Hex             1    wreg     unsigned char 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  Hex             1   31[COMRAM] unsigned char 
 11202 ;;  tmp             1   30[COMRAM] unsigned char 
 11203 ;;  res             1   29[COMRAM] unsigned char 
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  1    wreg      unsigned char 
 11206 ;; Registers used:
 11207 ;;		wreg, status,2, status,0, prodl, prodh
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11213 ;;      Params:         0       0       0       0
 11214 ;;      Locals:         3       0       0       0
 11215 ;;      Temps:          0       0       0       0
 11216 ;;      Totals:         3       0       0       0
 11217 ;;Total ram usage:        3 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; Hardware stack levels required when called:    4
 11220 ;; This function calls:
 11221 ;;		Nothing
 11222 ;; This function is called by:
 11223 ;;		_Fill_Data
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227                           	psect	text30
 11228  002F62                     __ptext30:
 11229                           	opt stack 0
 11230  002F62                     _Hex2Dex:
 11231                           	opt stack 25
 11232                           
 11233                           ;incstack = 0
 11234                           ;Hex2Dex@Hex stored from wreg
 11235  002F62  6E20               	movwf	Hex2Dex@Hex,c
 11236                           
 11237                           ;DS1302.c: 206: unsigned char res=0x00,tmp=0x00;
 11238  002F64  6A1E               	clrf	Hex2Dex@res,c
 11239  002F66  6A1F               	clrf	Hex2Dex@tmp,c
 11240                           
 11241                           ;DS1302.c: 207: if(Hex<=0x60)
 11242  002F68  0E61               	movlw	97
 11243  002F6A  6020               	cpfslt	Hex2Dex@Hex,c
 11244  002F6C  D006               	goto	l4172
 11245                           
 11246                           ;DS1302.c: 208: {
 11247                           ;DS1302.c: 209: res=Hex/16;
 11248  002F6E  3820               	swapf	Hex2Dex@Hex,w,c
 11249  002F70  0B0F               	andlw	15
 11250  002F72  6E1E               	movwf	Hex2Dex@res,c
 11251                           
 11252                           ;DS1302.c: 210: tmp=Hex%16;
 11253  002F74  5020               	movf	Hex2Dex@Hex,w,c
 11254  002F76  0B0F               	andlw	15
 11255  002F78  6E1F               	movwf	Hex2Dex@tmp,c
 11256  002F7A                     l4172:
 11257                           
 11258                           ;DS1302.c: 211: }
 11259                           ;DS1302.c: 212: return res*10+tmp;
 11260  002F7A  501E               	movf	Hex2Dex@res,w,c
 11261  002F7C  0D0A               	mullw	10
 11262  002F7E  50F3               	movf	prodl,w,c
 11263  002F80  241F               	addwf	Hex2Dex@tmp,w,c
 11264  002F82  0012               	return		;funcret
 11265  002F84                     __end_of_Hex2Dex:
 11266                           	opt stack 0
 11267                           tblptru	equ	0xFF8
 11268                           tblptrh	equ	0xFF7
 11269                           tblptrl	equ	0xFF6
 11270                           tablat	equ	0xFF5
 11271                           prodl	equ	0xFF3
 11272                           intcon	equ	0xFF2
 11273                           postinc0	equ	0xFEE
 11274                           wreg	equ	0xFE8
 11275                           indf1	equ	0xFE7
 11276                           postinc1	equ	0xFE6
 11277                           postdec1	equ	0xFE5
 11278                           fsr1h	equ	0xFE2
 11279                           fsr1l	equ	0xFE1
 11280                           indf2	equ	0xFDF
 11281                           postinc2	equ	0xFDE
 11282                           postdec2	equ	0xFDD
 11283                           fsr2h	equ	0xFDA
 11284                           fsr2l	equ	0xFD9
 11285                           status	equ	0xFD8
 11286                           
 11287 ;; *************** function _FRAM_INIT *****************
 11288 ;; Defined at:
 11289 ;;		line 14 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
 11290 ;; Parameters:    Size  Location     Type
 11291 ;;		None
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;		None
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  1    wreg      void 
 11296 ;; Registers used:
 11297 ;;		wreg, status,2, cstack
 11298 ;; Tracked objects:
 11299 ;;		On entry : F/0
 11300 ;;		On exit  : F/0
 11301 ;;		Unchanged: F/0
 11302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11303 ;;      Params:         0       0       0       0
 11304 ;;      Locals:         0       0       0       0
 11305 ;;      Temps:          0       0       0       0
 11306 ;;      Totals:         0       0       0       0
 11307 ;;Total ram usage:        0 bytes
 11308 ;; Hardware stack levels used:    1
 11309 ;; Hardware stack levels required when called:    5
 11310 ;; This function calls:
 11311 ;;		_INIT_SPI
 11312 ;; This function is called by:
 11313 ;;		_main
 11314 ;; This function uses a non-reentrant model
 11315 ;;
 11316                           
 11317                           	psect	text31
 11318  00310C                     __ptext31:
 11319                           	opt stack 0
 11320  00310C                     _FRAM_INIT:
 11321                           	opt stack 25
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;FRAM.c: 16: TRISD3=0;
 11325                           
 11326                           ;incstack = 0
 11327  00310C  9695               	bcf	3989,3,c	;volatile
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;FRAM.c: 17: INIT_SPI();
 11331  00310E  EF03  F018         	goto	_INIT_SPI	;wreg free
 11332  003112                     __end_of_FRAM_INIT:
 11333                           	opt stack 0
 11334                           tblptru	equ	0xFF8
 11335                           tblptrh	equ	0xFF7
 11336                           tblptrl	equ	0xFF6
 11337                           tablat	equ	0xFF5
 11338                           prodl	equ	0xFF3
 11339                           intcon	equ	0xFF2
 11340                           postinc0	equ	0xFEE
 11341                           wreg	equ	0xFE8
 11342                           indf1	equ	0xFE7
 11343                           postinc1	equ	0xFE6
 11344                           postdec1	equ	0xFE5
 11345                           fsr1h	equ	0xFE2
 11346                           fsr1l	equ	0xFE1
 11347                           indf2	equ	0xFDF
 11348                           postinc2	equ	0xFDE
 11349                           postdec2	equ	0xFDD
 11350                           fsr2h	equ	0xFDA
 11351                           fsr2l	equ	0xFD9
 11352                           status	equ	0xFD8
 11353                           
 11354 ;; *************** function _INIT_SPI *****************
 11355 ;; Defined at:
 11356 ;;		line 4 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/SPI.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;		None
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      void 
 11363 ;; Registers used:
 11364 ;;		wreg, status,2
 11365 ;; Tracked objects:
 11366 ;;		On entry : F/0
 11367 ;;		On exit  : F/0
 11368 ;;		Unchanged: F/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11370 ;;      Params:         0       0       0       0
 11371 ;;      Locals:         0       0       0       0
 11372 ;;      Temps:          0       0       0       0
 11373 ;;      Totals:         0       0       0       0
 11374 ;;Total ram usage:        0 bytes
 11375 ;; Hardware stack levels used:    1
 11376 ;; Hardware stack levels required when called:    4
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_FRAM_INIT
 11381 ;;		_LCD_INIT
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text32
 11386  003006                     __ptext32:
 11387                           	opt stack 0
 11388  003006                     _INIT_SPI:
 11389                           	opt stack 25
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;SPI.c: 6: TRISC4=1;TRISC5=0;TRISC7=0;
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;incstack = 0
 11396  003006  8894               	bsf	3988,4,c	;volatile
 11397  003008  9A94               	bcf	3988,5,c	;volatile
 11398  00300A  9E94               	bcf	3988,7,c	;volatile
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;SPI.c: 7: SSPSTAT=0xc0;
 11402  00300C  0EC0               	movlw	192
 11403  00300E  6EC7               	movwf	4039,c	;volatile
 11404                           
 11405                           ;SPI.c: 8: SSPCON=0x20;
 11406  003010  0E20               	movlw	32
 11407  003012  6EC6               	movwf	4038,c	;volatile
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;SPI.c: 9: CKP=1;CKE=0;
 11411  003014  88C6               	bsf	4038,4,c	;volatile
 11412                           
 11413                           ; BSR set to: 0
 11414  003016  9CC7               	bcf	4039,6,c	;volatile
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;SPI.c: 10: SMP=0;
 11418  003018  9EC7               	bcf	4039,7,c	;volatile
 11419                           
 11420                           ; BSR set to: 0
 11421  00301A  0C20               	retlw	32	;funcret
 11422  00301C                     __end_of_INIT_SPI:
 11423                           	opt stack 0
 11424                           tblptru	equ	0xFF8
 11425                           tblptrh	equ	0xFF7
 11426                           tblptrl	equ	0xFF6
 11427                           tablat	equ	0xFF5
 11428                           prodl	equ	0xFF3
 11429                           intcon	equ	0xFF2
 11430                           postinc0	equ	0xFEE
 11431                           wreg	equ	0xFE8
 11432                           indf1	equ	0xFE7
 11433                           postinc1	equ	0xFE6
 11434                           postdec1	equ	0xFE5
 11435                           fsr1h	equ	0xFE2
 11436                           fsr1l	equ	0xFE1
 11437                           indf2	equ	0xFDF
 11438                           postinc2	equ	0xFDE
 11439                           postdec2	equ	0xFDD
 11440                           fsr2h	equ	0xFDA
 11441                           fsr2l	equ	0xFD9
 11442                           status	equ	0xFD8
 11443                           
 11444 ;; *************** function _Display_Menu *****************
 11445 ;; Defined at:
 11446 ;;		line 8 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/motor.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;		None
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;		None
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11455 ;; Tracked objects:
 11456 ;;		On entry : F/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11460 ;;      Params:         0       0       0       0
 11461 ;;      Locals:         0       0       0       0
 11462 ;;      Temps:          0       0       0       0
 11463 ;;      Totals:         0       0       0       0
 11464 ;;Total ram usage:        0 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:    6
 11467 ;; This function calls:
 11468 ;;		_Send_Str
 11469 ;; This function is called by:
 11470 ;;		_main
 11471 ;; This function uses a non-reentrant model
 11472 ;;
 11473                           
 11474                           	psect	text33
 11475  002988                     __ptext33:
 11476                           	opt stack 0
 11477  002988                     _Display_Menu:
 11478                           	opt stack 24
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;motor.c: 10: Send_Str("Welcome!\r\n");
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;incstack = 0
 11485  002988  0EE1               	movlw	low STR_31
 11486  00298A  6E22               	movwf	Send_Str@data,c
 11487  00298C  0E3F               	movlw	high STR_31
 11488  00298E  6E23               	movwf	Send_Str@data+1,c
 11489  002990  ECB0  F015         	call	_Send_Str	;wreg free
 11490                           
 11491                           ;motor.c: 11: Send_Str("Please select:\r\n");
 11492  002994  0ED0               	movlw	low STR_32
 11493  002996  6E22               	movwf	Send_Str@data,c
 11494  002998  0E3F               	movlw	high STR_32
 11495  00299A  6E23               	movwf	Send_Str@data+1,c
 11496  00299C  ECB0  F015         	call	_Send_Str	;wreg free
 11497                           
 11498                           ;motor.c: 12: Send_Str("R-- Read the Parameters.\r\n");
 11499  0029A0  0E88               	movlw	low STR_33
 11500  0029A2  6E22               	movwf	Send_Str@data,c
 11501  0029A4  0E3F               	movlw	high STR_33
 11502  0029A6  6E23               	movwf	Send_Str@data+1,c
 11503  0029A8  ECB0  F015         	call	_Send_Str	;wreg free
 11504                           
 11505                           ;motor.c: 13: Send_Str("O-- Read All Data.\r\n");
 11506  0029AC  0EBB               	movlw	low STR_34
 11507  0029AE  6E22               	movwf	Send_Str@data,c
 11508  0029B0  0E3F               	movlw	high STR_34
 11509  0029B2  6E23               	movwf	Send_Str@data+1,c
 11510  0029B4  ECB0  F015         	call	_Send_Str	;wreg free
 11511                           
 11512                           ;motor.c: 14: Send_Str("S-- Set Default Parameters.\r\n");
 11513  0029B8  0E6A               	movlw	low STR_35
 11514  0029BA  6E22               	movwf	Send_Str@data,c
 11515  0029BC  0E3F               	movlw	high STR_35
 11516  0029BE  6E23               	movwf	Send_Str@data+1,c
 11517  0029C0  ECB0  F015         	call	_Send_Str	;wreg free
 11518                           
 11519                           ;motor.c: 15: Send_Str("F-- Set ALL Data=0x00\r\n");
 11520  0029C4  0EA3               	movlw	low STR_36
 11521  0029C6  6E22               	movwf	Send_Str@data,c
 11522  0029C8  0E3F               	movlw	high STR_36
 11523  0029CA  6E23               	movwf	Send_Str@data+1,c
 11524  0029CC  ECB0  F015         	call	_Send_Str	;wreg free
 11525                           
 11526                           ;motor.c: 16: Send_Str("*-- any other key to redispaly the menu.\r\n");
 11527  0029D0  0E3F               	movlw	low STR_37
 11528  0029D2  6E22               	movwf	Send_Str@data,c
 11529  0029D4  0E3F               	movlw	high STR_37
 11530  0029D6  6E23               	movwf	Send_Str@data+1,c
 11531  0029D8  EFB0  F015         	goto	_Send_Str	;wreg free
 11532  0029DC                     __end_of_Display_Menu:
 11533                           	opt stack 0
 11534                           tblptru	equ	0xFF8
 11535                           tblptrh	equ	0xFF7
 11536                           tblptrl	equ	0xFF6
 11537                           tablat	equ	0xFF5
 11538                           prodl	equ	0xFF3
 11539                           intcon	equ	0xFF2
 11540                           postinc0	equ	0xFEE
 11541                           wreg	equ	0xFE8
 11542                           indf1	equ	0xFE7
 11543                           postinc1	equ	0xFE6
 11544                           postdec1	equ	0xFE5
 11545                           fsr1h	equ	0xFE2
 11546                           fsr1l	equ	0xFE1
 11547                           indf2	equ	0xFDF
 11548                           postinc2	equ	0xFDE
 11549                           postdec2	equ	0xFDD
 11550                           fsr2h	equ	0xFDA
 11551                           fsr2l	equ	0xFD9
 11552                           status	equ	0xFD8
 11553                           
 11554 ;; *************** function _Send_Str *****************
 11555 ;; Defined at:
 11556 ;;		line 30 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/UART.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;  data            2   33[COMRAM] PTR unsigned char 
 11559 ;;		 -> STR_37(43), STR_36(24), STR_35(30), STR_34(21), 
 11560 ;;		 -> STR_33(27), STR_32(17), STR_31(11), 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;  i               2   37[COMRAM] int 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11572 ;;      Params:         2       0       0       0
 11573 ;;      Locals:         2       0       0       0
 11574 ;;      Temps:          2       0       0       0
 11575 ;;      Totals:         6       0       0       0
 11576 ;;Total ram usage:        6 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:    5
 11579 ;; This function calls:
 11580 ;;		_Send_Hex
 11581 ;;		_strlen
 11582 ;; This function is called by:
 11583 ;;		_Display_Menu
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           	psect	text34
 11588  002B60                     __ptext34:
 11589                           	opt stack 0
 11590  002B60                     _Send_Str:
 11591                           	opt stack 24
 11592                           
 11593                           ;UART.c: 32: int i=0;
 11594                           
 11595                           ;incstack = 0
 11596  002B60  6A26               	clrf	Send_Str@i,c
 11597  002B62  6A27               	clrf	Send_Str@i+1,c
 11598                           
 11599                           ;UART.c: 33: for(i=0;i<strlen(data);i++)
 11600  002B64  6A26               	clrf	Send_Str@i,c
 11601  002B66  6A27               	clrf	Send_Str@i+1,c
 11602  002B68  D010               	goto	l4392
 11603  002B6A                     l4388:
 11604                           
 11605                           ;UART.c: 34: {
 11606                           ;UART.c: 35: Send_Hex(data[i]);
 11607  002B6A  5026               	movf	Send_Str@i,w,c
 11608  002B6C  2422               	addwf	Send_Str@data,w,c
 11609  002B6E  6E24               	movwf	??_Send_Str& (0+255),c
 11610  002B70  5027               	movf	Send_Str@i+1,w,c
 11611  002B72  2023               	addwfc	Send_Str@data+1,w,c
 11612  002B74  6E25               	movwf	(??_Send_Str+1)& (0+255),c
 11613  002B76  C024  FFF6         	movff	??_Send_Str,tblptrl
 11614  002B7A  C025  FFF7         	movff	??_Send_Str+1,tblptrh
 11615  002B7E                     	if	0	;tblptru may be non-zero
 11616  002B7E                     	endif
 11617  002B7E                     	if	0	;tblptru may be non-zero
 11618  002B7E                     	endif
 11619  002B7E  0008               	tblrd		*
 11620  002B80  50F5               	movf	tablat,w,c
 11621  002B82  EC66  F018         	call	_Send_Hex
 11622  002B86  4A26               	infsnz	Send_Str@i,f,c
 11623  002B88  2A27               	incf	Send_Str@i+1,f,c
 11624  002B8A                     l4392:
 11625  002B8A  C022  F01E         	movff	Send_Str@data,strlen@s
 11626  002B8E  C023  F01F         	movff	Send_Str@data+1,strlen@s+1
 11627  002B92  EC3B  F017         	call	_strlen	;wreg free
 11628  002B96  501E               	movf	?_strlen,w,c
 11629  002B98  5C26               	subwf	Send_Str@i,w,c
 11630  002B9A  501F               	movf	?_strlen+1,w,c
 11631  002B9C  5827               	subwfb	Send_Str@i+1,w,c
 11632  002B9E  E3E5               	bnc	l4388
 11633  002BA0  0012               	return		;funcret
 11634  002BA2                     __end_of_Send_Str:
 11635                           	opt stack 0
 11636                           tblptru	equ	0xFF8
 11637                           tblptrh	equ	0xFF7
 11638                           tblptrl	equ	0xFF6
 11639                           tablat	equ	0xFF5
 11640                           prodl	equ	0xFF3
 11641                           intcon	equ	0xFF2
 11642                           postinc0	equ	0xFEE
 11643                           wreg	equ	0xFE8
 11644                           indf1	equ	0xFE7
 11645                           postinc1	equ	0xFE6
 11646                           postdec1	equ	0xFE5
 11647                           fsr1h	equ	0xFE2
 11648                           fsr1l	equ	0xFE1
 11649                           indf2	equ	0xFDF
 11650                           postinc2	equ	0xFDE
 11651                           postdec2	equ	0xFDD
 11652                           fsr2h	equ	0xFDA
 11653                           fsr2l	equ	0xFD9
 11654                           status	equ	0xFD8
 11655                           
 11656 ;; *************** function _strlen *****************
 11657 ;; Defined at:
 11658 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strlen.c"
 11659 ;; Parameters:    Size  Location     Type
 11660 ;;  s               2   29[COMRAM] PTR const unsigned char 
 11661 ;;		 -> STR_37(43), STR_36(24), STR_35(30), STR_34(21), 
 11662 ;;		 -> STR_33(27), STR_32(17), STR_31(11), 
 11663 ;; Auto vars:     Size  Location     Type
 11664 ;;  cp              2   31[COMRAM] PTR const unsigned char 
 11665 ;;		 -> STR_37(43), STR_36(24), STR_35(30), STR_34(21), 
 11666 ;;		 -> STR_33(27), STR_32(17), STR_31(11), 
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  2   29[COMRAM] unsigned int 
 11669 ;; Registers used:
 11670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11676 ;;      Params:         2       0       0       0
 11677 ;;      Locals:         2       0       0       0
 11678 ;;      Temps:          0       0       0       0
 11679 ;;      Totals:         4       0       0       0
 11680 ;;Total ram usage:        4 bytes
 11681 ;; Hardware stack levels used:    1
 11682 ;; Hardware stack levels required when called:    4
 11683 ;; This function calls:
 11684 ;;		Nothing
 11685 ;; This function is called by:
 11686 ;;		_Send_Str
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           
 11690                           	psect	text35
 11691  002E76                     __ptext35:
 11692                           	opt stack 0
 11693  002E76                     _strlen:
 11694                           	opt stack 24
 11695                           
 11696                           ;incstack = 0
 11697  002E76  C01E  F020         	movff	strlen@s,strlen@cp
 11698  002E7A  C01F  F021         	movff	strlen@s+1,strlen@cp+1
 11699  002E7E  D002               	goto	l4012
 11700  002E80                     l4010:
 11701  002E80  4A20               	infsnz	strlen@cp,f,c
 11702  002E82  2A21               	incf	strlen@cp+1,f,c
 11703  002E84                     l4012:
 11704  002E84  C020  FFF6         	movff	strlen@cp,tblptrl
 11705  002E88  C021  FFF7         	movff	strlen@cp+1,tblptrh
 11706  002E8C                     	if	0	;tblptru may be non-zero
 11707  002E8C                     	endif
 11708  002E8C                     	if	0	;tblptru may be non-zero
 11709  002E8C                     	endif
 11710  002E8C  0008               	tblrd		*
 11711  002E8E  50F5               	movf	tablat,w,c
 11712  002E90  E1F7               	bnz	l4010
 11713  002E92  501E               	movf	strlen@s,w,c
 11714  002E94  5C20               	subwf	strlen@cp,w,c
 11715  002E96  6E1E               	movwf	?_strlen,c
 11716  002E98  501F               	movf	strlen@s+1,w,c
 11717  002E9A  5821               	subwfb	strlen@cp+1,w,c
 11718  002E9C  6E1F               	movwf	?_strlen+1,c
 11719  002E9E  0012               	return		;funcret
 11720  002EA0                     __end_of_strlen:
 11721                           	opt stack 0
 11722                           tblptru	equ	0xFF8
 11723                           tblptrh	equ	0xFF7
 11724                           tblptrl	equ	0xFF6
 11725                           tablat	equ	0xFF5
 11726                           prodl	equ	0xFF3
 11727                           intcon	equ	0xFF2
 11728                           postinc0	equ	0xFEE
 11729                           wreg	equ	0xFE8
 11730                           indf1	equ	0xFE7
 11731                           postinc1	equ	0xFE6
 11732                           postdec1	equ	0xFE5
 11733                           fsr1h	equ	0xFE2
 11734                           fsr1l	equ	0xFE1
 11735                           indf2	equ	0xFDF
 11736                           postinc2	equ	0xFDE
 11737                           postdec2	equ	0xFDD
 11738                           fsr2h	equ	0xFDA
 11739                           fsr2l	equ	0xFD9
 11740                           status	equ	0xFD8
 11741                           
 11742 ;; *************** function _Send_Hex *****************
 11743 ;; Defined at:
 11744 ;;		line 23 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/UART.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;  data            1    wreg     unsigned char 
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;  data            1   29[COMRAM] unsigned char 
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      void 
 11751 ;; Registers used:
 11752 ;;		wreg
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11758 ;;      Params:         0       0       0       0
 11759 ;;      Locals:         1       0       0       0
 11760 ;;      Temps:          0       0       0       0
 11761 ;;      Totals:         1       0       0       0
 11762 ;;Total ram usage:        1 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    4
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		_Send_Str
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text36
 11773  0030CC                     __ptext36:
 11774                           	opt stack 0
 11775  0030CC                     _Send_Hex:
 11776                           	opt stack 24
 11777                           
 11778                           ;incstack = 0
 11779                           ;Send_Hex@data stored from wreg
 11780  0030CC  6E1E               	movwf	Send_Hex@data,c
 11781                           
 11782                           ;UART.c: 25: TXREG=data;
 11783  0030CE  C01E  FFAD         	movff	Send_Hex@data,4013	;volatile
 11784  0030D2                     l497:
 11785  0030D2  A2AC               	btfss	4012,1,c	;volatile
 11786  0030D4  D7FE               	goto	l497
 11787                           
 11788                           ;UART.c: 27: RCIF=0;
 11789  0030D6  9A9E               	bcf	3998,5,c	;volatile
 11790  0030D8  0012               	return		;funcret
 11791  0030DA                     __end_of_Send_Hex:
 11792                           	opt stack 0
 11793                           tblptru	equ	0xFF8
 11794                           tblptrh	equ	0xFF7
 11795                           tblptrl	equ	0xFF6
 11796                           tablat	equ	0xFF5
 11797                           prodl	equ	0xFF3
 11798                           intcon	equ	0xFF2
 11799                           postinc0	equ	0xFEE
 11800                           wreg	equ	0xFE8
 11801                           indf1	equ	0xFE7
 11802                           postinc1	equ	0xFE6
 11803                           postdec1	equ	0xFE5
 11804                           fsr1h	equ	0xFE2
 11805                           fsr1l	equ	0xFE1
 11806                           indf2	equ	0xFDF
 11807                           postinc2	equ	0xFDE
 11808                           postdec2	equ	0xFDD
 11809                           fsr2h	equ	0xFDA
 11810                           fsr2l	equ	0xFD9
 11811                           status	equ	0xFD8
 11812                           
 11813 ;; *************** function _DispPage1 *****************
 11814 ;; Defined at:
 11815 ;;		line 525 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 11816 ;; Parameters:    Size  Location     Type
 11817 ;;  mp              2   45[BANK0 ] struct MotorPara
 11818 ;;  lev             2   47[BANK0 ] int 
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;  buf             5   49[BANK0 ] unsigned char [5]
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : F/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11830 ;;      Params:         0       4       0       0
 11831 ;;      Locals:         0       5       0       0
 11832 ;;      Temps:          0       0       0       0
 11833 ;;      Totals:         0       9       0       0
 11834 ;;Total ram usage:        9 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:    8
 11837 ;; This function calls:
 11838 ;;		_LCD_HZ
 11839 ;;		_LCD_P8x16Sp
 11840 ;;		_LCD_P8x16Str
 11841 ;;		___awmod
 11842 ;;		___ftge
 11843 ;;		___ftmul
 11844 ;;		___fttol
 11845 ;;		_itoa
 11846 ;; This function is called by:
 11847 ;;		_main
 11848 ;; This function uses a non-reentrant model
 11849 ;;
 11850                           
 11851                           	psect	text37
 11852  000AAE                     __ptext37:
 11853                           	opt stack 0
 11854  000AAE                     _DispPage1:
 11855                           	opt stack 22
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;LCD.c: 527: unsigned char buf[5];
 11859                           ;LCD.c: 529: itoa(buf,lev,10);
 11860                           
 11861                           ;incstack = 0
 11862  000AAE  C08F  F087         	movff	DispPage1@lev,itoa@val
 11863  000AB2  C090  F088         	movff	DispPage1@lev+1,itoa@val+1
 11864  000AB6  6B8A               	clrf	(itoa@base+1)& (0+255),b
 11865  000AB8  0E0A               	movlw	10
 11866  000ABA  6F89               	movwf	itoa@base& (0+255),b
 11867  000ABC  0E91               	movlw	DispPage1@buf& (0+255)
 11868  000ABE  EC9A  F016         	call	_itoa
 11869                           
 11870                           ;LCD.c: 530: LCD_P8x16Str(8,0,buf);
 11871  000AC2  6A22               	clrf	LCD_P8x16Str@y,c
 11872  000AC4  0E91               	movlw	low DispPage1@buf
 11873  000AC6  6E23               	movwf	LCD_P8x16Str@ch,c
 11874  000AC8  6A24               	clrf	LCD_P8x16Str@ch+1,c
 11875  000ACA  0E08               	movlw	8
 11876  000ACC  EC34  F00E         	call	_LCD_P8x16Str
 11877                           
 11878                           ;LCD.c: 531: LCD_HZ(16,0,F16x16_HZ,12);
 11879  000AD0  6A22               	clrf	LCD_HZ@y,c
 11880  000AD2  0E1F               	movlw	low _F16x16_HZ
 11881  000AD4  6E23               	movwf	LCD_HZ@data,c
 11882  000AD6  0E35               	movlw	high _F16x16_HZ
 11883  000AD8  6E24               	movwf	LCD_HZ@data+1,c
 11884  000ADA  0E0C               	movlw	12
 11885  000ADC  6E25               	movwf	LCD_HZ@N,c
 11886  000ADE  0E10               	movlw	16
 11887  000AE0  EC28  F013         	call	_LCD_HZ
 11888                           
 11889                           ;LCD.c: 532: itoa(buf,mp.duty,10);
 11890  000AE4  C08D  F087         	movff	DispPage1@mp,itoa@val
 11891  000AE8  0100               	movlb	0	; () banked
 11892  000AEA  6B88               	clrf	(itoa@val+1)& (0+255),b
 11893  000AEC  6B8A               	clrf	(itoa@base+1)& (0+255),b
 11894  000AEE  0E0A               	movlw	10
 11895  000AF0  6F89               	movwf	itoa@base& (0+255),b
 11896  000AF2  0E91               	movlw	DispPage1@buf& (0+255)
 11897  000AF4  EC9A  F016         	call	_itoa
 11898                           
 11899                           ;LCD.c: 533: if(mp.duty>=100)
 11900  000AF8  0E63               	movlw	99
 11901  000AFA  0100               	movlb	0	; () banked
 11902  000AFC  658D               	cpfsgt	DispPage1@mp& (0+255),b
 11903  000AFE  D008               	goto	l5020
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;LCD.c: 534: {
 11907                           ;LCD.c: 535: LCD_P8x16Str(40,0,buf);
 11908  000B00  6A22               	clrf	LCD_P8x16Str@y,c
 11909  000B02  0E91               	movlw	low DispPage1@buf
 11910  000B04  6E23               	movwf	LCD_P8x16Str@ch,c
 11911  000B06  6A24               	clrf	LCD_P8x16Str@ch+1,c
 11912  000B08  0E28               	movlw	40
 11913  000B0A  EC34  F00E         	call	_LCD_P8x16Str
 11914                           
 11915                           ;LCD.c: 536: }
 11916  000B0E  D00F               	goto	l282
 11917  000B10                     l5020:
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;LCD.c: 537: else
 11921                           ;LCD.c: 538: {
 11922                           ;LCD.c: 539: LCD_P8x16Str(40,0," ");
 11923  000B10  6A22               	clrf	LCD_P8x16Str@y,c
 11924  000B12  0EEF               	movlw	low (STR_24+3)
 11925  000B14  6E23               	movwf	LCD_P8x16Str@ch,c
 11926  000B16  0E3F               	movlw	high (STR_24+3)
 11927  000B18  6E24               	movwf	LCD_P8x16Str@ch+1,c
 11928  000B1A  0E28               	movlw	40
 11929  000B1C  EC34  F00E         	call	_LCD_P8x16Str
 11930                           
 11931                           ;LCD.c: 540: LCD_P8x16Str(48,0,buf);
 11932  000B20  6A22               	clrf	LCD_P8x16Str@y,c
 11933  000B22  0E91               	movlw	low DispPage1@buf
 11934  000B24  6E23               	movwf	LCD_P8x16Str@ch,c
 11935  000B26  6A24               	clrf	LCD_P8x16Str@ch+1,c
 11936  000B28  0E30               	movlw	48
 11937  000B2A  EC34  F00E         	call	_LCD_P8x16Str
 11938  000B2E                     l282:
 11939                           
 11940                           ;LCD.c: 541: }
 11941                           ;LCD.c: 542: LCD_P8x16Str(64,0,"%");
 11942  000B2E  6A22               	clrf	LCD_P8x16Str@y,c
 11943  000B30  0EF7               	movlw	low STR_22
 11944  000B32  6E23               	movwf	LCD_P8x16Str@ch,c
 11945  000B34  0E3F               	movlw	high STR_22
 11946  000B36  6E24               	movwf	LCD_P8x16Str@ch+1,c
 11947  000B38  0E40               	movlw	64
 11948  000B3A  EC34  F00E         	call	_LCD_P8x16Str
 11949                           
 11950                           ;LCD.c: 543: itoa(buf,mp.hits,10);
 11951  000B3E  C08E  F087         	movff	DispPage1@mp+1,itoa@val
 11952  000B42  0100               	movlb	0	; () banked
 11953  000B44  6B88               	clrf	(itoa@val+1)& (0+255),b
 11954  000B46  6B8A               	clrf	(itoa@base+1)& (0+255),b
 11955  000B48  0E0A               	movlw	10
 11956  000B4A  6F89               	movwf	itoa@base& (0+255),b
 11957  000B4C  0E91               	movlw	DispPage1@buf& (0+255)
 11958  000B4E  EC9A  F016         	call	_itoa
 11959                           
 11960                           ;LCD.c: 544: if(mp.hits>=100)
 11961  000B52  0E63               	movlw	99
 11962  000B54  0100               	movlb	0	; () banked
 11963  000B56  658E               	cpfsgt	(DispPage1@mp+1)& (0+255),b
 11964  000B58  D008               	goto	l5028
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;LCD.c: 545: {
 11968                           ;LCD.c: 546: LCD_P8x16Str(80,0,buf);
 11969  000B5A  6A22               	clrf	LCD_P8x16Str@y,c
 11970  000B5C  0E91               	movlw	low DispPage1@buf
 11971  000B5E  6E23               	movwf	LCD_P8x16Str@ch,c
 11972  000B60  6A24               	clrf	LCD_P8x16Str@ch+1,c
 11973  000B62  0E50               	movlw	80
 11974  000B64  EC34  F00E         	call	_LCD_P8x16Str
 11975                           
 11976                           ;LCD.c: 547: }
 11977  000B68  D00F               	goto	l5030
 11978  000B6A                     l5028:
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;LCD.c: 548: else
 11982                           ;LCD.c: 549: {
 11983                           ;LCD.c: 550: LCD_P8x16Str(80,0," ");
 11984  000B6A  6A22               	clrf	LCD_P8x16Str@y,c
 11985  000B6C  0EEF               	movlw	low (STR_24+3)
 11986  000B6E  6E23               	movwf	LCD_P8x16Str@ch,c
 11987  000B70  0E3F               	movlw	high (STR_24+3)
 11988  000B72  6E24               	movwf	LCD_P8x16Str@ch+1,c
 11989  000B74  0E50               	movlw	80
 11990  000B76  EC34  F00E         	call	_LCD_P8x16Str
 11991                           
 11992                           ;LCD.c: 551: LCD_P8x16Str(88,0,buf);
 11993  000B7A  6A22               	clrf	LCD_P8x16Str@y,c
 11994  000B7C  0E91               	movlw	low DispPage1@buf
 11995  000B7E  6E23               	movwf	LCD_P8x16Str@ch,c
 11996  000B80  6A24               	clrf	LCD_P8x16Str@ch+1,c
 11997  000B82  0E58               	movlw	88
 11998  000B84  EC34  F00E         	call	_LCD_P8x16Str
 11999  000B88                     l5030:
 12000                           
 12001                           ;LCD.c: 552: }
 12002                           ;LCD.c: 553: itoa(buf,hits,10);
 12003  000B88  C0CE  F087         	movff	_hits,itoa@val
 12004  000B8C  0100               	movlb	0	; () banked
 12005  000B8E  6B88               	clrf	(itoa@val+1)& (0+255),b
 12006  000B90  6B8A               	clrf	(itoa@base+1)& (0+255),b
 12007  000B92  0E0A               	movlw	10
 12008  000B94  6F89               	movwf	itoa@base& (0+255),b
 12009  000B96  0E91               	movlw	DispPage1@buf& (0+255)
 12010  000B98  EC9A  F016         	call	_itoa
 12011                           
 12012                           ;LCD.c: 554: LCD_P8x16Str(88,2,buf);
 12013  000B9C  0E02               	movlw	2
 12014  000B9E  6E22               	movwf	LCD_P8x16Str@y,c
 12015  000BA0  0E91               	movlw	low DispPage1@buf
 12016  000BA2  6E23               	movwf	LCD_P8x16Str@ch,c
 12017  000BA4  6A24               	clrf	LCD_P8x16Str@ch+1,c
 12018  000BA6  0E58               	movlw	88
 12019  000BA8  EC34  F00E         	call	_LCD_P8x16Str
 12020                           
 12021                           ;LCD.c: 555: LCD_HZ(104,0,F16x16_HZ,16);
 12022  000BAC  6A22               	clrf	LCD_HZ@y,c
 12023  000BAE  0E1F               	movlw	low _F16x16_HZ
 12024  000BB0  6E23               	movwf	LCD_HZ@data,c
 12025  000BB2  0E35               	movlw	high _F16x16_HZ
 12026  000BB4  6E24               	movwf	LCD_HZ@data+1,c
 12027  000BB6  0E10               	movlw	16
 12028  000BB8  6E25               	movwf	LCD_HZ@N,c
 12029  000BBA  0E68               	movlw	104
 12030  000BBC  EC28  F013         	call	_LCD_HZ
 12031                           
 12032                           ;LCD.c: 557: if(time>=100)
 12033  000BC0  0100               	movlb	0	; () banked
 12034  000BC2  BFC8               	btfsc	(_time+1)& (0+255),7,b
 12035  000BC4  D021               	goto	l5044
 12036  000BC6  51C8               	movf	(_time+1)& (0+255),w,b
 12037  000BC8  E103               	bnz	u3580
 12038  000BCA  0E64               	movlw	100
 12039  000BCC  5DC7               	subwf	_time& (0+255),w,b
 12040  000BCE  E31C               	bnc	l5044
 12041  000BD0                     u3580:
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;LCD.c: 558: {
 12045                           ;LCD.c: 559: LCD_P8x16Str(16,2,"    ");
 12046  000BD0  0E02               	movlw	2
 12047  000BD2  6E22               	movwf	LCD_P8x16Str@y,c
 12048  000BD4  0EEC               	movlw	low STR_24
 12049  000BD6  6E23               	movwf	LCD_P8x16Str@ch,c
 12050  000BD8  0E3F               	movlw	high STR_24
 12051  000BDA  6E24               	movwf	LCD_P8x16Str@ch+1,c
 12052  000BDC  0E10               	movlw	16
 12053  000BDE  EC34  F00E         	call	_LCD_P8x16Str
 12054                           
 12055                           ;LCD.c: 560: itoa(buf,Speed,10);
 12056  000BE2  C0C5  F087         	movff	_Speed,itoa@val
 12057  000BE6  C0C6  F088         	movff	_Speed+1,itoa@val+1
 12058  000BEA  0100               	movlb	0	; () banked
 12059  000BEC  6B8A               	clrf	(itoa@base+1)& (0+255),b
 12060  000BEE  0E0A               	movlw	10
 12061  000BF0  6F89               	movwf	itoa@base& (0+255),b
 12062  000BF2  0E91               	movlw	DispPage1@buf& (0+255)
 12063  000BF4  EC9A  F016         	call	_itoa
 12064                           
 12065                           ;LCD.c: 561: LCD_P8x16Str(16,2,buf);
 12066  000BF8  0E02               	movlw	2
 12067  000BFA  6E22               	movwf	LCD_P8x16Str@y,c
 12068  000BFC  0E91               	movlw	low DispPage1@buf
 12069  000BFE  6E23               	movwf	LCD_P8x16Str@ch,c
 12070  000C00  6A24               	clrf	LCD_P8x16Str@ch+1,c
 12071  000C02  0E10               	movlw	16
 12072  000C04  EC34  F00E         	call	_LCD_P8x16Str
 12073  000C08                     l5044:
 12074                           
 12075                           ;LCD.c: 562: }
 12076                           ;LCD.c: 563: LCD_P8x16Sp(48,2,'r');LCD_P8x16Str(56,2,"/");LCD_P8x16Sp(64,2,'m');
 12077  000C08  0E02               	movlw	2
 12078  000C0A  6E22               	movwf	LCD_P8x16Sp@y,c
 12079  000C0C  0E72               	movlw	114
 12080  000C0E  6E23               	movwf	LCD_P8x16Sp@ch,c
 12081  000C10  0E30               	movlw	48
 12082  000C12  ECC0  F00E         	call	_LCD_P8x16Sp
 12083  000C16  0E02               	movlw	2
 12084  000C18  6E22               	movwf	LCD_P8x16Str@y,c
 12085  000C1A  0EFB               	movlw	low STR_25
 12086  000C1C  6E23               	movwf	LCD_P8x16Str@ch,c
 12087  000C1E  0E3F               	movlw	high STR_25
 12088  000C20  6E24               	movwf	LCD_P8x16Str@ch+1,c
 12089  000C22  0E38               	movlw	56
 12090  000C24  EC34  F00E         	call	_LCD_P8x16Str
 12091  000C28  0E02               	movlw	2
 12092  000C2A  6E22               	movwf	LCD_P8x16Sp@y,c
 12093  000C2C  0E6D               	movlw	109
 12094  000C2E  6E23               	movwf	LCD_P8x16Sp@ch,c
 12095  000C30  0E40               	movlw	64
 12096  000C32  ECC0  F00E         	call	_LCD_P8x16Sp
 12097                           
 12098                           ;LCD.c: 564: LCD_HZ(104,2,F16x16_HZ,16);
 12099  000C36  0E02               	movlw	2
 12100  000C38  6E22               	movwf	LCD_HZ@y,c
 12101  000C3A  0E1F               	movlw	low _F16x16_HZ
 12102  000C3C  6E23               	movwf	LCD_HZ@data,c
 12103  000C3E  0E35               	movlw	high _F16x16_HZ
 12104  000C40  6E24               	movwf	LCD_HZ@data+1,c
 12105  000C42  0E10               	movlw	16
 12106  000C44  6E25               	movwf	LCD_HZ@N,c
 12107  000C46  0E68               	movlw	104
 12108  000C48  EC28  F013         	call	_LCD_HZ
 12109                           
 12110                           ;LCD.c: 571: if(time>=100)
 12111  000C4C  0100               	movlb	0	; () banked
 12112  000C4E  BFC8               	btfsc	(_time+1)& (0+255),7,b
 12113  000C50  D022               	goto	l5060
 12114  000C52  51C8               	movf	(_time+1)& (0+255),w,b
 12115  000C54  E103               	bnz	u3590
 12116  000C56  0E64               	movlw	100
 12117  000C58  5DC7               	subwf	_time& (0+255),w,b
 12118  000C5A  E31D               	bnc	l5060
 12119  000C5C                     u3590:
 12120                           
 12121                           ; BSR set to: 0
 12122                           ;LCD.c: 572: {
 12123                           ;LCD.c: 573: itoa(buf,TEMP_VALUE,10);
 12124  000C5C  C0C0  F072         	movff	_TEMP_VALUE,___fttol@f1
 12125  000C60  C0C1  F073         	movff	_TEMP_VALUE+1,___fttol@f1+1
 12126  000C64  C0C2  F074         	movff	_TEMP_VALUE+2,___fttol@f1+2
 12127  000C68  ECC3  F010         	call	___fttol	;wreg free
 12128  000C6C  C072  F087         	movff	?___fttol,itoa@val
 12129  000C70  C073  F088         	movff	?___fttol+1,itoa@val+1
 12130  000C74  6B8A               	clrf	(itoa@base+1)& (0+255),b
 12131  000C76  0E0A               	movlw	10
 12132  000C78  6F89               	movwf	itoa@base& (0+255),b
 12133  000C7A  0E91               	movlw	DispPage1@buf& (0+255)
 12134  000C7C  EC9A  F016         	call	_itoa
 12135                           
 12136                           ;LCD.c: 574: LCD_P8x16Str(16,4,buf);
 12137  000C80  0E04               	movlw	4
 12138  000C82  6E22               	movwf	LCD_P8x16Str@y,c
 12139  000C84  0E91               	movlw	low DispPage1@buf
 12140  000C86  6E23               	movwf	LCD_P8x16Str@ch,c
 12141  000C88  6A24               	clrf	LCD_P8x16Str@ch+1,c
 12142  000C8A  0E10               	movlw	16
 12143  000C8C  EC34  F00E         	call	_LCD_P8x16Str
 12144                           
 12145                           ;LCD.c: 575: time=0;
 12146  000C90  0100               	movlb	0	; () banked
 12147  000C92  6BC7               	clrf	_time& (0+255),b
 12148  000C94  6BC8               	clrf	(_time+1)& (0+255),b
 12149  000C96                     l5060:
 12150                           
 12151                           ; BSR set to: 0
 12152                           ;LCD.c: 576: }
 12153                           ;LCD.c: 577: time++;
 12154  000C96  4BC7               	infsnz	_time& (0+255),f,b
 12155  000C98  2BC8               	incf	(_time+1)& (0+255),f,b
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;LCD.c: 581: LCD_HZ(48, 4, F16x16_HZ,33);
 12159  000C9A  0E04               	movlw	4
 12160  000C9C  6E22               	movwf	LCD_HZ@y,c
 12161  000C9E  0E1F               	movlw	low _F16x16_HZ
 12162  000CA0  6E23               	movwf	LCD_HZ@data,c
 12163  000CA2  0E35               	movlw	high _F16x16_HZ
 12164  000CA4  6E24               	movwf	LCD_HZ@data+1,c
 12165  000CA6  0E21               	movlw	33
 12166  000CA8  6E25               	movwf	LCD_HZ@N,c
 12167  000CAA  0E30               	movlw	48
 12168  000CAC  EC28  F013         	call	_LCD_HZ
 12169                           
 12170                           ;LCD.c: 583: itoa(buf,AD_RES,10);
 12171  000CB0  C0BD  F072         	movff	_AD_RES,___fttol@f1
 12172  000CB4  C0BE  F073         	movff	_AD_RES+1,___fttol@f1+1
 12173  000CB8  C0BF  F074         	movff	_AD_RES+2,___fttol@f1+2
 12174  000CBC  ECC3  F010         	call	___fttol	;wreg free
 12175  000CC0  C072  F087         	movff	?___fttol,itoa@val
 12176  000CC4  C073  F088         	movff	?___fttol+1,itoa@val+1
 12177  000CC8  6B8A               	clrf	(itoa@base+1)& (0+255),b
 12178  000CCA  0E0A               	movlw	10
 12179  000CCC  6F89               	movwf	itoa@base& (0+255),b
 12180  000CCE  0E91               	movlw	DispPage1@buf& (0+255)
 12181  000CD0  EC9A  F016         	call	_itoa
 12182                           
 12183                           ;LCD.c: 585: {
 12184                           ;LCD.c: 587: }
 12185                           ;LCD.c: 589: {
 12186                           ;LCD.c: 590: LCD_P8x16Str(80,4,buf);
 12187  000CD4  0E04               	movlw	4
 12188  000CD6  6E22               	movwf	LCD_P8x16Str@y,c
 12189  000CD8  0E91               	movlw	low DispPage1@buf
 12190  000CDA  6E23               	movwf	LCD_P8x16Str@ch,c
 12191  000CDC  6A24               	clrf	LCD_P8x16Str@ch+1,c
 12192  000CDE  0E50               	movlw	80
 12193  000CE0  EC34  F00E         	call	_LCD_P8x16Str
 12194                           
 12195                           ;LCD.c: 591: }
 12196                           ;LCD.c: 592: itoa(buf,(int)(AD_RES*10)%10,10);
 12197  000CE4  6A2D               	clrf	___ftmul@f2,c
 12198  000CE6  0E20               	movlw	32
 12199  000CE8  6E2E               	movwf	___ftmul@f2+1,c
 12200  000CEA  0E41               	movlw	65
 12201  000CEC  6E2F               	movwf	___ftmul@f2+2,c
 12202  000CEE  C0BD  F02A         	movff	_AD_RES,___ftmul@f1
 12203  000CF2  C0BE  F02B         	movff	_AD_RES+1,___ftmul@f1+1
 12204  000CF6  C0BF  F02C         	movff	_AD_RES+2,___ftmul@f1+2
 12205  000CFA  EC2C  F00F         	call	___ftmul	;wreg free
 12206  000CFE  C02A  F072         	movff	?___ftmul,___fttol@f1
 12207  000D02  C02B  F073         	movff	?___ftmul+1,___fttol@f1+1
 12208  000D06  C02C  F074         	movff	?___ftmul+2,___fttol@f1+2
 12209  000D0A  ECC3  F010         	call	___fttol	;wreg free
 12210  000D0E  C072  F081         	movff	?___fttol,___awmod@dividend
 12211  000D12  C073  F082         	movff	?___fttol+1,___awmod@dividend+1
 12212  000D16  6B84               	clrf	(___awmod@divisor+1)& (0+255),b
 12213  000D18  0E0A               	movlw	10
 12214  000D1A  6F83               	movwf	___awmod@divisor& (0+255),b
 12215  000D1C  EC0B  F014         	call	___awmod	;wreg free
 12216  000D20  C081  F087         	movff	?___awmod,itoa@val
 12217  000D24  C082  F088         	movff	?___awmod+1,itoa@val+1
 12218  000D28  6B8A               	clrf	(itoa@base+1)& (0+255),b
 12219  000D2A  0E0A               	movlw	10
 12220  000D2C  6F89               	movwf	itoa@base& (0+255),b
 12221  000D2E  0E91               	movlw	DispPage1@buf& (0+255)
 12222  000D30  EC9A  F016         	call	_itoa
 12223                           
 12224                           ;LCD.c: 593: LCD_P8x16Str(96,4,buf);
 12225  000D34  0E04               	movlw	4
 12226  000D36  6E22               	movwf	LCD_P8x16Str@y,c
 12227  000D38  0E91               	movlw	low DispPage1@buf
 12228  000D3A  6E23               	movwf	LCD_P8x16Str@ch,c
 12229  000D3C  6A24               	clrf	LCD_P8x16Str@ch+1,c
 12230  000D3E  0E60               	movlw	96
 12231  000D40  EC34  F00E         	call	_LCD_P8x16Str
 12232                           
 12233                           ;LCD.c: 594: LCD_P8x16Str(88,4,".");
 12234  000D44  0E04               	movlw	4
 12235  000D46  6E22               	movwf	LCD_P8x16Str@y,c
 12236  000D48  0EF9               	movlw	low STR_26
 12237  000D4A  6E23               	movwf	LCD_P8x16Str@ch,c
 12238  000D4C  0E3F               	movlw	high STR_26
 12239  000D4E  6E24               	movwf	LCD_P8x16Str@ch+1,c
 12240  000D50  0E58               	movlw	88
 12241  000D52  EC34  F00E         	call	_LCD_P8x16Str
 12242                           
 12243                           ;LCD.c: 595: LCD_P8x16Sp(104,4,'V');
 12244  000D56  0E04               	movlw	4
 12245  000D58  6E22               	movwf	LCD_P8x16Sp@y,c
 12246  000D5A  0E56               	movlw	86
 12247  000D5C  6E23               	movwf	LCD_P8x16Sp@ch,c
 12248  000D5E  0E68               	movlw	104
 12249  000D60  ECC0  F00E         	call	_LCD_P8x16Sp
 12250                           
 12251                           ;LCD.c: 597: if(TEMP_VALUE>=80)
 12252  000D64  C0C0  F01E         	movff	_TEMP_VALUE,___ftge@ff1
 12253  000D68  C0C1  F01F         	movff	_TEMP_VALUE+1,___ftge@ff1+1
 12254  000D6C  C0C2  F020         	movff	_TEMP_VALUE+2,___ftge@ff1+2
 12255  000D70  6A21               	clrf	___ftge@ff2,c
 12256  000D72  0EA0               	movlw	160
 12257  000D74  6E22               	movwf	___ftge@ff2+1,c
 12258  000D76  0E42               	movlw	66
 12259  000D78  6E23               	movwf	___ftge@ff2+2,c
 12260  000D7A  EC6C  F014         	call	___ftge	;wreg free
 12261  000D7E  E301               	bnc	l287
 12262                           
 12263                           ;LCD.c: 598: {
 12264                           ;LCD.c: 599: OverTEMP=1;
 12265  000D80  8452               	bsf	_OverTEMP/(0+8),_OverTEMP& (0+7),c
 12266  000D82                     l287:
 12267                           
 12268                           ;LCD.c: 600: }
 12269                           ;LCD.c: 601: MOTOR_BUTTON==1?LCD_HZ(0, 6, F16x16_HZ,24):LCD_HZ(0, 6, F16x16_HZ,25);
 12270  000D82  A052               	btfss	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
 12271  000D84  D00C               	goto	l5082
 12272  000D86  0E06               	movlw	6
 12273  000D88  6E22               	movwf	LCD_HZ@y,c
 12274  000D8A  0E1F               	movlw	low _F16x16_HZ
 12275  000D8C  6E23               	movwf	LCD_HZ@data,c
 12276  000D8E  0E35               	movlw	high _F16x16_HZ
 12277  000D90  6E24               	movwf	LCD_HZ@data+1,c
 12278  000D92  0E18               	movlw	24
 12279  000D94  6E25               	movwf	LCD_HZ@N,c
 12280  000D96  0E00               	movlw	0
 12281  000D98  EC28  F013         	call	_LCD_HZ
 12282  000D9C  D00B               	goto	l5084
 12283  000D9E                     l5082:
 12284  000D9E  0E06               	movlw	6
 12285  000DA0  6E22               	movwf	LCD_HZ@y,c
 12286  000DA2  0E1F               	movlw	low _F16x16_HZ
 12287  000DA4  6E23               	movwf	LCD_HZ@data,c
 12288  000DA6  0E35               	movlw	high _F16x16_HZ
 12289  000DA8  6E24               	movwf	LCD_HZ@data+1,c
 12290  000DAA  0E19               	movlw	25
 12291  000DAC  6E25               	movwf	LCD_HZ@N,c
 12292  000DAE  0E00               	movlw	0
 12293  000DB0  EC28  F013         	call	_LCD_HZ
 12294  000DB4                     l5084:
 12295                           
 12296                           ;LCD.c: 602: MOTOR_DIR==0?LCD_HZ(112, 6, F16x16_HZ,59):LCD_HZ(112, 6, F16x16_HZ,60);
 12297  000DB4  B252               	btfsc	_MOTOR_DIR/(0+8),_MOTOR_DIR& (0+7),c
 12298  000DB6  D00C               	goto	l5088
 12299  000DB8  0E06               	movlw	6
 12300  000DBA  6E22               	movwf	LCD_HZ@y,c
 12301  000DBC  0E1F               	movlw	low _F16x16_HZ
 12302  000DBE  6E23               	movwf	LCD_HZ@data,c
 12303  000DC0  0E35               	movlw	high _F16x16_HZ
 12304  000DC2  6E24               	movwf	LCD_HZ@data+1,c
 12305  000DC4  0E3B               	movlw	59
 12306  000DC6  6E25               	movwf	LCD_HZ@N,c
 12307  000DC8  0E70               	movlw	112
 12308  000DCA  EC28  F013         	call	_LCD_HZ
 12309  000DCE  D00B               	goto	l5090
 12310  000DD0                     l5088:
 12311  000DD0  0E06               	movlw	6
 12312  000DD2  6E22               	movwf	LCD_HZ@y,c
 12313  000DD4  0E1F               	movlw	low _F16x16_HZ
 12314  000DD6  6E23               	movwf	LCD_HZ@data,c
 12315  000DD8  0E35               	movlw	high _F16x16_HZ
 12316  000DDA  6E24               	movwf	LCD_HZ@data+1,c
 12317  000DDC  0E3C               	movlw	60
 12318  000DDE  6E25               	movwf	LCD_HZ@N,c
 12319  000DE0  0E70               	movlw	112
 12320  000DE2  EC28  F013         	call	_LCD_HZ
 12321  000DE6                     l5090:
 12322                           
 12323                           ;LCD.c: 603: if(OverTEMP==1)
 12324  000DE6  A452               	btfss	_OverTEMP/(0+8),_OverTEMP& (0+7),c
 12325  000DE8  0012               	return	
 12326                           
 12327                           ;LCD.c: 604: {
 12328                           ;LCD.c: 610: LCD_HZ(40,6,F16x16_HZ,64);
 12329  000DEA  0E06               	movlw	6
 12330  000DEC  6E22               	movwf	LCD_HZ@y,c
 12331  000DEE  0E1F               	movlw	low _F16x16_HZ
 12332  000DF0  6E23               	movwf	LCD_HZ@data,c
 12333  000DF2  0E35               	movlw	high _F16x16_HZ
 12334  000DF4  6E24               	movwf	LCD_HZ@data+1,c
 12335  000DF6  0E40               	movlw	64
 12336  000DF8  6E25               	movwf	LCD_HZ@N,c
 12337  000DFA  0E28               	movlw	40
 12338  000DFC  EC28  F013         	call	_LCD_HZ
 12339                           
 12340                           ;LCD.c: 611: LCD_HZ(56,6,F16x16_HZ,18);
 12341  000E00  0E06               	movlw	6
 12342  000E02  6E22               	movwf	LCD_HZ@y,c
 12343  000E04  0E1F               	movlw	low _F16x16_HZ
 12344  000E06  6E23               	movwf	LCD_HZ@data,c
 12345  000E08  0E35               	movlw	high _F16x16_HZ
 12346  000E0A  6E24               	movwf	LCD_HZ@data+1,c
 12347  000E0C  0E12               	movlw	18
 12348  000E0E  6E25               	movwf	LCD_HZ@N,c
 12349  000E10  0E38               	movlw	56
 12350  000E12  EC28  F013         	call	_LCD_HZ
 12351                           
 12352                           ;LCD.c: 612: MOTOR_BUTTON=0;
 12353  000E16  9052               	bcf	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
 12354  000E18  0012               	return		;funcret
 12355  000E1A                     __end_of_DispPage1:
 12356                           	opt stack 0
 12357                           tblptru	equ	0xFF8
 12358                           tblptrh	equ	0xFF7
 12359                           tblptrl	equ	0xFF6
 12360                           tablat	equ	0xFF5
 12361                           prodl	equ	0xFF3
 12362                           intcon	equ	0xFF2
 12363                           postinc0	equ	0xFEE
 12364                           wreg	equ	0xFE8
 12365                           indf1	equ	0xFE7
 12366                           postinc1	equ	0xFE6
 12367                           postdec1	equ	0xFE5
 12368                           fsr1h	equ	0xFE2
 12369                           fsr1l	equ	0xFE1
 12370                           indf2	equ	0xFDF
 12371                           postinc2	equ	0xFDE
 12372                           postdec2	equ	0xFDD
 12373                           fsr2h	equ	0xFDA
 12374                           fsr2l	equ	0xFD9
 12375                           status	equ	0xFD8
 12376                           
 12377 ;; *************** function _itoa *****************
 12378 ;; Defined at:
 12379 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;  buf             1    wreg     PTR unsigned char 
 12382 ;;		 -> DispPage1@buf(5), IDPage@buf(4), SetPage@buf(4), 
 12383 ;;  val             2   39[BANK0 ] int 
 12384 ;;  base            2   41[BANK0 ] int 
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;  buf             1   44[BANK0 ] PTR unsigned char 
 12387 ;;		 -> DispPage1@buf(5), IDPage@buf(4), SetPage@buf(4), 
 12388 ;;  cp              1    0        PTR unsigned char 
 12389 ;;		 -> DispPage1@buf(5), IDPage@buf(4), SetPage@buf(4), 
 12390 ;; Return value:  Size  Location     Type
 12391 ;;                  1    wreg      PTR unsigned char 
 12392 ;; Registers used:
 12393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12394 ;; Tracked objects:
 12395 ;;		On entry : F/0
 12396 ;;		On exit  : 0/0
 12397 ;;		Unchanged: 0/0
 12398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12399 ;;      Params:         0       4       0       0
 12400 ;;      Locals:         0       2       0       0
 12401 ;;      Temps:          0       0       0       0
 12402 ;;      Totals:         0       6       0       0
 12403 ;;Total ram usage:        6 bytes
 12404 ;; Hardware stack levels used:    1
 12405 ;; Hardware stack levels required when called:    6
 12406 ;; This function calls:
 12407 ;;		_utoa
 12408 ;; This function is called by:
 12409 ;;		_SetPage
 12410 ;;		_IDPage
 12411 ;;		_DispPage1
 12412 ;; This function uses a non-reentrant model
 12413 ;;
 12414                           
 12415                           	psect	text38
 12416  002D34                     __ptext38:
 12417                           	opt stack 0
 12418  002D34                     _itoa:
 12419                           	opt stack 23
 12420                           
 12421                           ;incstack = 0
 12422                           ;itoa@buf stored from wreg
 12423  002D34  6F8C               	movwf	itoa@buf& (0+255),b
 12424  002D36  0100               	movlb	0	; () banked
 12425  002D38  AF88               	btfss	(itoa@val+1)& (0+255),7,b
 12426  002D3A  D00A               	goto	l4372
 12427                           
 12428                           ; BSR set to: 0
 12429  002D3C  518C               	movf	itoa@buf& (0+255),w,b
 12430  002D3E  6ED9               	movwf	fsr2l,c
 12431  002D40  6ADA               	clrf	fsr2h,c
 12432  002D42  0E2D               	movlw	45
 12433  002D44  6EDF               	movwf	indf2,c
 12434                           
 12435                           ; BSR set to: 0
 12436  002D46  2B8C               	incf	itoa@buf& (0+255),f,b
 12437                           
 12438                           ; BSR set to: 0
 12439  002D48  6D87               	negf	itoa@val& (0+255),b
 12440  002D4A  1F88               	comf	(itoa@val+1)& (0+255),f,b
 12441  002D4C  B0D8               	btfsc	status,0,c
 12442  002D4E  2B88               	incf	(itoa@val+1)& (0+255),f,b
 12443  002D50                     l4372:
 12444                           
 12445                           ; BSR set to: 0
 12446  002D50  C087  F025         	movff	itoa@val,utoa@val
 12447  002D54  C088  F026         	movff	itoa@val+1,utoa@val+1
 12448  002D58  C089  F027         	movff	itoa@base,utoa@base
 12449  002D5C  C08A  F028         	movff	itoa@base+1,utoa@base+1
 12450  002D60  518C               	movf	itoa@buf& (0+255),w,b
 12451  002D62  EFD9  F011         	goto	_utoa
 12452  002D66                     __end_of_itoa:
 12453                           	opt stack 0
 12454                           tblptru	equ	0xFF8
 12455                           tblptrh	equ	0xFF7
 12456                           tblptrl	equ	0xFF6
 12457                           tablat	equ	0xFF5
 12458                           prodl	equ	0xFF3
 12459                           intcon	equ	0xFF2
 12460                           postinc0	equ	0xFEE
 12461                           wreg	equ	0xFE8
 12462                           indf1	equ	0xFE7
 12463                           postinc1	equ	0xFE6
 12464                           postdec1	equ	0xFE5
 12465                           fsr1h	equ	0xFE2
 12466                           fsr1l	equ	0xFE1
 12467                           indf2	equ	0xFDF
 12468                           postinc2	equ	0xFDE
 12469                           postdec2	equ	0xFDD
 12470                           fsr2h	equ	0xFDA
 12471                           fsr2l	equ	0xFD9
 12472                           status	equ	0xFD8
 12473                           
 12474 ;; *************** function _utoa *****************
 12475 ;; Defined at:
 12476 ;;		line 17 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  buf             1    wreg     PTR unsigned char 
 12479 ;;		 -> DispPage1@buf(5), IDPage@buf(4), SetPage@buf(4), 
 12480 ;;  val             2   36[COMRAM] unsigned int 
 12481 ;;  base            2   38[COMRAM] int 
 12482 ;; Auto vars:     Size  Location     Type
 12483 ;;  buf             1   43[COMRAM] PTR unsigned char 
 12484 ;;		 -> DispPage1@buf(5), IDPage@buf(4), SetPage@buf(4), 
 12485 ;;  v               2   40[COMRAM] unsigned int 
 12486 ;;  c               1   42[COMRAM] unsigned char 
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  1    wreg      PTR unsigned char 
 12489 ;; Registers used:
 12490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12491 ;; Tracked objects:
 12492 ;;		On entry : F/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12496 ;;      Params:         4       0       0       0
 12497 ;;      Locals:         4       0       0       0
 12498 ;;      Temps:          0       0       0       0
 12499 ;;      Totals:         8       0       0       0
 12500 ;;Total ram usage:        8 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:    5
 12503 ;; This function calls:
 12504 ;;		___lwdiv
 12505 ;;		___lwmod
 12506 ;; This function is called by:
 12507 ;;		_itoa
 12508 ;; This function uses a non-reentrant model
 12509 ;;
 12510                           
 12511                           	psect	text39
 12512  0023B2                     __ptext39:
 12513                           	opt stack 0
 12514  0023B2                     _utoa:
 12515                           	opt stack 23
 12516                           
 12517                           ;incstack = 0
 12518                           ;utoa@buf stored from wreg
 12519  0023B2  6E2C               	movwf	utoa@buf,c
 12520  0023B4  C025  F029         	movff	utoa@val,utoa@v
 12521  0023B8  C026  F02A         	movff	utoa@val+1,utoa@v+1
 12522  0023BC                     l4084:
 12523  0023BC  C029  F01E         	movff	utoa@v,___lwdiv@dividend
 12524  0023C0  C02A  F01F         	movff	utoa@v+1,___lwdiv@dividend+1
 12525  0023C4  C027  F020         	movff	utoa@base,___lwdiv@divisor
 12526  0023C8  C028  F021         	movff	utoa@base+1,___lwdiv@divisor+1
 12527  0023CC  EC41  F015         	call	___lwdiv	;wreg free
 12528  0023D0  C01E  F029         	movff	?___lwdiv,utoa@v
 12529  0023D4  C01F  F02A         	movff	?___lwdiv+1,utoa@v+1
 12530  0023D8  2A2C               	incf	utoa@buf,f,c
 12531  0023DA  5029               	movf	utoa@v,w,c
 12532  0023DC  102A               	iorwf	utoa@v+1,w,c
 12533  0023DE  E1EE               	bnz	l4084
 12534  0023E0  502C               	movf	utoa@buf,w,c
 12535  0023E2  6ED9               	movwf	fsr2l,c
 12536  0023E4  6ADA               	clrf	fsr2h,c
 12537  0023E6  6ADF               	clrf	indf2,c
 12538  0023E8  062C               	decf	utoa@buf,f,c
 12539  0023EA                     l4094:
 12540  0023EA  C025  F01E         	movff	utoa@val,___lwmod@dividend
 12541  0023EE  C026  F01F         	movff	utoa@val+1,___lwmod@dividend+1
 12542  0023F2  C027  F020         	movff	utoa@base,___lwmod@divisor
 12543  0023F6  C028  F021         	movff	utoa@base+1,___lwmod@divisor+1
 12544  0023FA  ECF2  F015         	call	___lwmod	;wreg free
 12545  0023FE  501E               	movf	?___lwmod,w,c
 12546  002400  6E2B               	movwf	utoa@c,c
 12547  002402  C025  F01E         	movff	utoa@val,___lwdiv@dividend
 12548  002406  C026  F01F         	movff	utoa@val+1,___lwdiv@dividend+1
 12549  00240A  C027  F020         	movff	utoa@base,___lwdiv@divisor
 12550  00240E  C028  F021         	movff	utoa@base+1,___lwdiv@divisor+1
 12551  002412  EC41  F015         	call	___lwdiv	;wreg free
 12552  002416  C01E  F025         	movff	?___lwdiv,utoa@val
 12553  00241A  C01F  F026         	movff	?___lwdiv+1,utoa@val+1
 12554  00241E  0E09               	movlw	9
 12555  002420  642B               	cpfsgt	utoa@c,c
 12556  002422  D002               	goto	l1336
 12557  002424  0E07               	movlw	7
 12558  002426  262B               	addwf	utoa@c,f,c
 12559  002428                     l1336:
 12560  002428  0E30               	movlw	48
 12561  00242A  262B               	addwf	utoa@c,f,c
 12562  00242C  502C               	movf	utoa@buf,w,c
 12563  00242E  6ED9               	movwf	fsr2l,c
 12564  002430  6ADA               	clrf	fsr2h,c
 12565  002432  C02B  FFDF         	movff	utoa@c,indf2
 12566  002436  062C               	decf	utoa@buf,f,c
 12567  002438  5025               	movf	utoa@val,w,c
 12568  00243A  1026               	iorwf	utoa@val+1,w,c
 12569  00243C  E1D6               	bnz	l4094
 12570                           
 12571                           ;	Return value of _utoa is never used
 12572  00243E  2A2C               	incf	utoa@buf,f,c
 12573  002440  0012               	return		;funcret
 12574  002442                     __end_of_utoa:
 12575                           	opt stack 0
 12576                           tblptru	equ	0xFF8
 12577                           tblptrh	equ	0xFF7
 12578                           tblptrl	equ	0xFF6
 12579                           tablat	equ	0xFF5
 12580                           prodl	equ	0xFF3
 12581                           intcon	equ	0xFF2
 12582                           postinc0	equ	0xFEE
 12583                           wreg	equ	0xFE8
 12584                           indf1	equ	0xFE7
 12585                           postinc1	equ	0xFE6
 12586                           postdec1	equ	0xFE5
 12587                           fsr1h	equ	0xFE2
 12588                           fsr1l	equ	0xFE1
 12589                           indf2	equ	0xFDF
 12590                           postinc2	equ	0xFDE
 12591                           postdec2	equ	0xFDD
 12592                           fsr2h	equ	0xFDA
 12593                           fsr2l	equ	0xFD9
 12594                           status	equ	0xFD8
 12595                           
 12596 ;; *************** function ___lwmod *****************
 12597 ;; Defined at:
 12598 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 12599 ;; Parameters:    Size  Location     Type
 12600 ;;  dividend        2   29[COMRAM] unsigned int 
 12601 ;;  divisor         2   31[COMRAM] unsigned int 
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;  counter         1   33[COMRAM] unsigned char 
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  2   29[COMRAM] unsigned int 
 12606 ;; Registers used:
 12607 ;;		wreg, status,2, status,0
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/0
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12613 ;;      Params:         4       0       0       0
 12614 ;;      Locals:         1       0       0       0
 12615 ;;      Temps:          0       0       0       0
 12616 ;;      Totals:         5       0       0       0
 12617 ;;Total ram usage:        5 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; Hardware stack levels required when called:    4
 12620 ;; This function calls:
 12621 ;;		Nothing
 12622 ;; This function is called by:
 12623 ;;		_utoa
 12624 ;; This function uses a non-reentrant model
 12625 ;;
 12626                           
 12627                           	psect	text40
 12628  002BE4                     __ptext40:
 12629                           	opt stack 0
 12630  002BE4                     ___lwmod:
 12631                           	opt stack 23
 12632                           
 12633                           ;incstack = 0
 12634  002BE4  5020               	movf	___lwmod@divisor,w,c
 12635  002BE6  1021               	iorwf	___lwmod@divisor+1,w,c
 12636  002BE8  E017               	bz	l1425
 12637  002BEA  0E01               	movlw	1
 12638  002BEC  6E22               	movwf	___lwmod@counter,c
 12639  002BEE  D004               	goto	l3968
 12640  002BF0                     l3966:
 12641  002BF0  90D8               	bcf	status,0,c
 12642  002BF2  3620               	rlcf	___lwmod@divisor,f,c
 12643  002BF4  3621               	rlcf	___lwmod@divisor+1,f,c
 12644  002BF6  2A22               	incf	___lwmod@counter,f,c
 12645  002BF8                     l3968:
 12646  002BF8  AE21               	btfss	___lwmod@divisor+1,7,c
 12647  002BFA  D7FA               	goto	l3966
 12648  002BFC                     l3970:
 12649  002BFC  5020               	movf	___lwmod@divisor,w,c
 12650  002BFE  5C1E               	subwf	___lwmod@dividend,w,c
 12651  002C00  5021               	movf	___lwmod@divisor+1,w,c
 12652  002C02  581F               	subwfb	___lwmod@dividend+1,w,c
 12653  002C04  E304               	bnc	l3974
 12654  002C06  5020               	movf	___lwmod@divisor,w,c
 12655  002C08  5E1E               	subwf	___lwmod@dividend,f,c
 12656  002C0A  5021               	movf	___lwmod@divisor+1,w,c
 12657  002C0C  5A1F               	subwfb	___lwmod@dividend+1,f,c
 12658  002C0E                     l3974:
 12659  002C0E  90D8               	bcf	status,0,c
 12660  002C10  3221               	rrcf	___lwmod@divisor+1,f,c
 12661  002C12  3220               	rrcf	___lwmod@divisor,f,c
 12662  002C14  2E22               	decfsz	___lwmod@counter,f,c
 12663  002C16  D7F2               	goto	l3970
 12664  002C18                     l1425:
 12665  002C18  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
 12666  002C1C  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
 12667  002C20  0012               	return		;funcret
 12668  002C22                     __end_of___lwmod:
 12669                           	opt stack 0
 12670                           tblptru	equ	0xFF8
 12671                           tblptrh	equ	0xFF7
 12672                           tblptrl	equ	0xFF6
 12673                           tablat	equ	0xFF5
 12674                           prodl	equ	0xFF3
 12675                           intcon	equ	0xFF2
 12676                           postinc0	equ	0xFEE
 12677                           wreg	equ	0xFE8
 12678                           indf1	equ	0xFE7
 12679                           postinc1	equ	0xFE6
 12680                           postdec1	equ	0xFE5
 12681                           fsr1h	equ	0xFE2
 12682                           fsr1l	equ	0xFE1
 12683                           indf2	equ	0xFDF
 12684                           postinc2	equ	0xFDE
 12685                           postdec2	equ	0xFDD
 12686                           fsr2h	equ	0xFDA
 12687                           fsr2l	equ	0xFD9
 12688                           status	equ	0xFD8
 12689                           
 12690 ;; *************** function ___lwdiv *****************
 12691 ;; Defined at:
 12692 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;  dividend        2   29[COMRAM] unsigned int 
 12695 ;;  divisor         2   31[COMRAM] unsigned int 
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  quotient        2   33[COMRAM] unsigned int 
 12698 ;;  counter         1   35[COMRAM] unsigned char 
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  2   29[COMRAM] unsigned int 
 12701 ;; Registers used:
 12702 ;;		wreg, status,2, status,0
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/0
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12708 ;;      Params:         4       0       0       0
 12709 ;;      Locals:         3       0       0       0
 12710 ;;      Temps:          0       0       0       0
 12711 ;;      Totals:         7       0       0       0
 12712 ;;Total ram usage:        7 bytes
 12713 ;; Hardware stack levels used:    1
 12714 ;; Hardware stack levels required when called:    4
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_utoa
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text41
 12723  002A82                     __ptext41:
 12724                           	opt stack 0
 12725  002A82                     ___lwdiv:
 12726                           	opt stack 23
 12727                           
 12728                           ;incstack = 0
 12729  002A82  6A22               	clrf	___lwdiv@quotient,c
 12730  002A84  6A23               	clrf	___lwdiv@quotient+1,c
 12731  002A86  5020               	movf	___lwdiv@divisor,w,c
 12732  002A88  1021               	iorwf	___lwdiv@divisor+1,w,c
 12733  002A8A  E01B               	bz	l1415
 12734  002A8C  0E01               	movlw	1
 12735  002A8E  6E24               	movwf	___lwdiv@counter,c
 12736  002A90  D004               	goto	l3948
 12737  002A92                     l3946:
 12738  002A92  90D8               	bcf	status,0,c
 12739  002A94  3620               	rlcf	___lwdiv@divisor,f,c
 12740  002A96  3621               	rlcf	___lwdiv@divisor+1,f,c
 12741  002A98  2A24               	incf	___lwdiv@counter,f,c
 12742  002A9A                     l3948:
 12743  002A9A  AE21               	btfss	___lwdiv@divisor+1,7,c
 12744  002A9C  D7FA               	goto	l3946
 12745  002A9E                     l3950:
 12746  002A9E  90D8               	bcf	status,0,c
 12747  002AA0  3622               	rlcf	___lwdiv@quotient,f,c
 12748  002AA2  3623               	rlcf	___lwdiv@quotient+1,f,c
 12749  002AA4  5020               	movf	___lwdiv@divisor,w,c
 12750  002AA6  5C1E               	subwf	___lwdiv@dividend,w,c
 12751  002AA8  5021               	movf	___lwdiv@divisor+1,w,c
 12752  002AAA  581F               	subwfb	___lwdiv@dividend+1,w,c
 12753  002AAC  E305               	bnc	l3958
 12754  002AAE  5020               	movf	___lwdiv@divisor,w,c
 12755  002AB0  5E1E               	subwf	___lwdiv@dividend,f,c
 12756  002AB2  5021               	movf	___lwdiv@divisor+1,w,c
 12757  002AB4  5A1F               	subwfb	___lwdiv@dividend+1,f,c
 12758  002AB6  8022               	bsf	___lwdiv@quotient,0,c
 12759  002AB8                     l3958:
 12760  002AB8  90D8               	bcf	status,0,c
 12761  002ABA  3221               	rrcf	___lwdiv@divisor+1,f,c
 12762  002ABC  3220               	rrcf	___lwdiv@divisor,f,c
 12763  002ABE  2E24               	decfsz	___lwdiv@counter,f,c
 12764  002AC0  D7EE               	goto	l3950
 12765  002AC2                     l1415:
 12766  002AC2  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
 12767  002AC6  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12768  002ACA  0012               	return		;funcret
 12769  002ACC                     __end_of___lwdiv:
 12770                           	opt stack 0
 12771                           tblptru	equ	0xFF8
 12772                           tblptrh	equ	0xFF7
 12773                           tblptrl	equ	0xFF6
 12774                           tablat	equ	0xFF5
 12775                           prodl	equ	0xFF3
 12776                           intcon	equ	0xFF2
 12777                           postinc0	equ	0xFEE
 12778                           wreg	equ	0xFE8
 12779                           indf1	equ	0xFE7
 12780                           postinc1	equ	0xFE6
 12781                           postdec1	equ	0xFE5
 12782                           fsr1h	equ	0xFE2
 12783                           fsr1l	equ	0xFE1
 12784                           indf2	equ	0xFDF
 12785                           postinc2	equ	0xFDE
 12786                           postdec2	equ	0xFDD
 12787                           fsr2h	equ	0xFDA
 12788                           fsr2l	equ	0xFD9
 12789                           status	equ	0xFD8
 12790                           
 12791 ;; *************** function ___fttol *****************
 12792 ;; Defined at:
 12793 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
 12794 ;; Parameters:    Size  Location     Type
 12795 ;;  f1              3   18[BANK0 ] float 
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;  lval            4   28[BANK0 ] unsigned long 
 12798 ;;  exp1            1   32[BANK0 ] unsigned char 
 12799 ;;  sign1           1   27[BANK0 ] unsigned char 
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  4   18[BANK0 ] long 
 12802 ;; Registers used:
 12803 ;;		wreg, status,2, status,0
 12804 ;; Tracked objects:
 12805 ;;		On entry : 0/0
 12806 ;;		On exit  : F/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12809 ;;      Params:         0       4       0       0
 12810 ;;      Locals:         0       6       0       0
 12811 ;;      Temps:          0       5       0       0
 12812 ;;      Totals:         0      15       0       0
 12813 ;;Total ram usage:       15 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:    4
 12816 ;; This function calls:
 12817 ;;		Nothing
 12818 ;; This function is called by:
 12819 ;;		_DispPage1
 12820 ;;		_SET_DUTY
 12821 ;;		_main
 12822 ;; This function uses a non-reentrant model
 12823 ;;
 12824                           
 12825                           	psect	text42
 12826  002186                     __ptext42:
 12827                           	opt stack 0
 12828  002186                     ___fttol:
 12829                           	opt stack 26
 12830                           
 12831                           ;incstack = 0
 12832  002186  C074  F076         	movff	___fttol@f1+2,??___fttol
 12833  00218A  0100               	movlb	0	; () banked
 12834  00218C  6B77               	clrf	(??___fttol+1)& (0+255),b
 12835  00218E  6B78               	clrf	(??___fttol+2)& (0+255),b
 12836  002190  3573               	rlcf	(___fttol@f1+1)& (0+255),w,b
 12837  002192  3776               	rlcf	??___fttol& (0+255),f,b
 12838  002194  E301               	bnc	u3371
 12839  002196  8177               	bsf	(??___fttol+1)& (0+255),0,b
 12840  002198                     u3371:
 12841  002198  5176               	movf	??___fttol& (0+255),w,b
 12842  00219A  6F80               	movwf	___fttol@exp1& (0+255),b
 12843  00219C  5180               	movf	___fttol@exp1& (0+255),w,b
 12844  00219E  E105               	bnz	l4598
 12845  0021A0                     l4596:
 12846                           
 12847                           ; BSR set to: 0
 12848  0021A0  6B72               	clrf	?___fttol& (0+255),b
 12849  0021A2  6B73               	clrf	(?___fttol+1)& (0+255),b
 12850  0021A4  6B74               	clrf	(?___fttol+2)& (0+255),b
 12851  0021A6  6B75               	clrf	(?___fttol+3)& (0+255),b
 12852  0021A8  0012               	return	
 12853  0021AA                     l4598:
 12854                           
 12855                           ; BSR set to: 0
 12856  0021AA  0E17               	movlw	23
 12857  0021AC  6F76               	movwf	??___fttol& (0+255),b
 12858  0021AE  C072  F077         	movff	___fttol@f1,??___fttol+1
 12859  0021B2  C073  F078         	movff	___fttol@f1+1,??___fttol+2
 12860  0021B6  C074  F079         	movff	___fttol@f1+2,??___fttol+3
 12861  0021BA  2976               	incf	??___fttol& (0+255),w,b
 12862  0021BC  6F7A               	movwf	(??___fttol+4)& (0+255),b
 12863  0021BE  D004               	goto	u3390
 12864  0021C0                     u3395:
 12865  0021C0  90D8               	bcf	status,0,c
 12866  0021C2  3379               	rrcf	(??___fttol+3)& (0+255),f,b
 12867  0021C4  3378               	rrcf	(??___fttol+2)& (0+255),f,b
 12868  0021C6  3377               	rrcf	(??___fttol+1)& (0+255),f,b
 12869  0021C8                     u3390:
 12870  0021C8  2F7A               	decfsz	(??___fttol+4)& (0+255),f,b
 12871  0021CA  D7FA               	goto	u3395
 12872  0021CC  0100               	movlb	0	; () banked
 12873  0021CE  5177               	movf	(??___fttol+1)& (0+255),w,b
 12874  0021D0  6F7B               	movwf	___fttol@sign1& (0+255),b
 12875                           
 12876                           ; BSR set to: 0
 12877  0021D2  8F73               	bsf	(___fttol@f1+1)& (0+255),7,b
 12878                           
 12879                           ; BSR set to: 0
 12880  0021D4  6B74               	clrf	(___fttol@f1+2)& (0+255),b
 12881                           
 12882                           ; BSR set to: 0
 12883  0021D6  5172               	movf	___fttol@f1& (0+255),w,b
 12884  0021D8  6F7C               	movwf	___fttol@lval& (0+255),b
 12885  0021DA  5173               	movf	(___fttol@f1+1)& (0+255),w,b
 12886  0021DC  6F7D               	movwf	(___fttol@lval+1)& (0+255),b
 12887  0021DE  5174               	movf	(___fttol@f1+2)& (0+255),w,b
 12888  0021E0  6F7E               	movwf	(___fttol@lval+2)& (0+255),b
 12889  0021E2  6B7F               	clrf	(___fttol@lval+3)& (0+255),b
 12890                           
 12891                           ; BSR set to: 0
 12892  0021E4  0E8E               	movlw	142
 12893  0021E6  5F80               	subwf	___fttol@exp1& (0+255),f,b
 12894                           
 12895                           ; BSR set to: 0
 12896  0021E8  AF80               	btfss	___fttol@exp1& (0+255),7,b
 12897  0021EA  D00C               	goto	l4618
 12898                           
 12899                           ; BSR set to: 0
 12900  0021EC  5180               	movf	___fttol@exp1& (0+255),w,b
 12901  0021EE  0A80               	xorlw	128
 12902  0021F0  0F8F               	addlw	143
 12903  0021F2  E3D6               	bnc	l4596
 12904  0021F4                     l4614:
 12905                           
 12906                           ; BSR set to: 0
 12907  0021F4  90D8               	bcf	status,0,c
 12908  0021F6  337F               	rrcf	(___fttol@lval+3)& (0+255),f,b
 12909  0021F8  337E               	rrcf	(___fttol@lval+2)& (0+255),f,b
 12910  0021FA  337D               	rrcf	(___fttol@lval+1)& (0+255),f,b
 12911  0021FC  337C               	rrcf	___fttol@lval& (0+255),f,b
 12912                           
 12913                           ; BSR set to: 0
 12914  0021FE  3F80               	incfsz	___fttol@exp1& (0+255),f,b
 12915  002200  D7F9               	goto	l4614
 12916  002202  D00C               	goto	l4626
 12917  002204                     l4618:
 12918                           
 12919                           ; BSR set to: 0
 12920  002204  0E17               	movlw	23
 12921  002206  6580               	cpfsgt	___fttol@exp1& (0+255),b
 12922  002208  D007               	goto	l4624
 12923  00220A  D7CA               	goto	l4596
 12924  00220C                     l4622:
 12925                           
 12926                           ; BSR set to: 0
 12927  00220C  90D8               	bcf	status,0,c
 12928  00220E  377C               	rlcf	___fttol@lval& (0+255),f,b
 12929  002210  377D               	rlcf	(___fttol@lval+1)& (0+255),f,b
 12930  002212  377E               	rlcf	(___fttol@lval+2)& (0+255),f,b
 12931  002214  377F               	rlcf	(___fttol@lval+3)& (0+255),f,b
 12932  002216  0780               	decf	___fttol@exp1& (0+255),f,b
 12933  002218                     l4624:
 12934                           
 12935                           ; BSR set to: 0
 12936  002218  5180               	movf	___fttol@exp1& (0+255),w,b
 12937  00221A  E1F8               	bnz	l4622
 12938  00221C                     l4626:
 12939                           
 12940                           ; BSR set to: 0
 12941  00221C  517B               	movf	___fttol@sign1& (0+255),w,b
 12942  00221E  E008               	bz	l4630
 12943                           
 12944                           ; BSR set to: 0
 12945  002220  1F7F               	comf	(___fttol@lval+3)& (0+255),f,b
 12946  002222  1F7E               	comf	(___fttol@lval+2)& (0+255),f,b
 12947  002224  1F7D               	comf	(___fttol@lval+1)& (0+255),f,b
 12948  002226  6D7C               	negf	___fttol@lval& (0+255),b
 12949  002228  0E00               	movlw	0
 12950  00222A  237D               	addwfc	(___fttol@lval+1)& (0+255),f,b
 12951  00222C  237E               	addwfc	(___fttol@lval+2)& (0+255),f,b
 12952  00222E  237F               	addwfc	(___fttol@lval+3)& (0+255),f,b
 12953  002230                     l4630:
 12954                           
 12955                           ; BSR set to: 0
 12956  002230  C07C  F072         	movff	___fttol@lval,?___fttol
 12957  002234  C07D  F073         	movff	___fttol@lval+1,?___fttol+1
 12958  002238  C07E  F074         	movff	___fttol@lval+2,?___fttol+2
 12959  00223C  C07F  F075         	movff	___fttol@lval+3,?___fttol+3
 12960                           
 12961                           ; BSR set to: 0
 12962  002240  0012               	return		;funcret
 12963  002242                     __end_of___fttol:
 12964                           	opt stack 0
 12965                           tblptru	equ	0xFF8
 12966                           tblptrh	equ	0xFF7
 12967                           tblptrl	equ	0xFF6
 12968                           tablat	equ	0xFF5
 12969                           prodl	equ	0xFF3
 12970                           intcon	equ	0xFF2
 12971                           postinc0	equ	0xFEE
 12972                           wreg	equ	0xFE8
 12973                           indf1	equ	0xFE7
 12974                           postinc1	equ	0xFE6
 12975                           postdec1	equ	0xFE5
 12976                           fsr1h	equ	0xFE2
 12977                           fsr1l	equ	0xFE1
 12978                           indf2	equ	0xFDF
 12979                           postinc2	equ	0xFDE
 12980                           postdec2	equ	0xFDD
 12981                           fsr2h	equ	0xFDA
 12982                           fsr2l	equ	0xFD9
 12983                           status	equ	0xFD8
 12984                           
 12985 ;; *************** function ___ftmul *****************
 12986 ;; Defined at:
 12987 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;  f1              3   41[COMRAM] float 
 12990 ;;  f2              3   44[COMRAM] float 
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;  f3_as_produc    3   52[COMRAM] unsigned um
 12993 ;;  sign            1   51[COMRAM] unsigned char 
 12994 ;;  exp             1   50[COMRAM] unsigned char 
 12995 ;;  cntr            1    0        unsigned char 
 12996 ;; Return value:  Size  Location     Type
 12997 ;;                  3   41[COMRAM] float 
 12998 ;; Registers used:
 12999 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13000 ;; Tracked objects:
 13001 ;;		On entry : 0/0
 13002 ;;		On exit  : 0/0
 13003 ;;		Unchanged: 0/0
 13004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13005 ;;      Params:         6       0       0       0
 13006 ;;      Locals:         5       0       0       0
 13007 ;;      Temps:          3       0       0       0
 13008 ;;      Totals:        14       0       0       0
 13009 ;;Total ram usage:       14 bytes
 13010 ;; Hardware stack levels used:    1
 13011 ;; Hardware stack levels required when called:    5
 13012 ;; This function calls:
 13013 ;;		___ftpack
 13014 ;; This function is called by:
 13015 ;;		_readAD
 13016 ;;		_DispPage1
 13017 ;;		_SET_DUTY
 13018 ;;		_main
 13019 ;; This function uses a non-reentrant model
 13020 ;;
 13021                           
 13022                           	psect	text43
 13023  001E58                     __ptext43:
 13024                           	opt stack 0
 13025  001E58                     ___ftmul:
 13026                           	opt stack 24
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;incstack = 0
 13030  001E58  C02C  F030         	movff	___ftmul@f1+2,??___ftmul
 13031  001E5C  6A31               	clrf	(??___ftmul+1)& (0+255),c
 13032  001E5E  6A32               	clrf	(??___ftmul+2)& (0+255),c
 13033  001E60  342B               	rlcf	___ftmul@f1+1,w,c
 13034  001E62  3630               	rlcf	??___ftmul& (0+255),f,c
 13035  001E64  E301               	bnc	u3211
 13036  001E66  8031               	bsf	(??___ftmul+1)& (0+255),0,c
 13037  001E68                     u3211:
 13038  001E68  5030               	movf	??___ftmul,w,c
 13039  001E6A  6E33               	movwf	___ftmul@exp,c
 13040  001E6C  5033               	movf	___ftmul@exp,w,c
 13041  001E6E  E104               	bnz	l4486
 13042  001E70  6A2A               	clrf	?___ftmul,c
 13043  001E72  6A2B               	clrf	?___ftmul+1,c
 13044  001E74  6A2C               	clrf	?___ftmul+2,c
 13045  001E76  0012               	return	
 13046  001E78                     l4486:
 13047  001E78  C02F  F030         	movff	___ftmul@f2+2,??___ftmul
 13048  001E7C  6A31               	clrf	(??___ftmul+1)& (0+255),c
 13049  001E7E  6A32               	clrf	(??___ftmul+2)& (0+255),c
 13050  001E80  342E               	rlcf	___ftmul@f2+1,w,c
 13051  001E82  3630               	rlcf	??___ftmul& (0+255),f,c
 13052  001E84  E301               	bnc	u3231
 13053  001E86  8031               	bsf	(??___ftmul+1)& (0+255),0,c
 13054  001E88                     u3231:
 13055  001E88  5030               	movf	??___ftmul,w,c
 13056  001E8A  6E34               	movwf	___ftmul@sign,c
 13057  001E8C  5034               	movf	___ftmul@sign,w,c
 13058  001E8E  E104               	bnz	l4490
 13059  001E90  6A2A               	clrf	?___ftmul,c
 13060  001E92  6A2B               	clrf	?___ftmul+1,c
 13061  001E94  6A2C               	clrf	?___ftmul+2,c
 13062  001E96  0012               	return	
 13063  001E98                     l4490:
 13064  001E98  5034               	movf	___ftmul@sign,w,c
 13065  001E9A  0F7B               	addlw	123
 13066  001E9C  2633               	addwf	___ftmul@exp,f,c
 13067  001E9E  C02C  F034         	movff	___ftmul@f1+2,___ftmul@sign
 13068  001EA2  502F               	movf	___ftmul@f2+2,w,c
 13069  001EA4  1A34               	xorwf	___ftmul@sign,f,c
 13070  001EA6  0E80               	movlw	128
 13071  001EA8  1634               	andwf	___ftmul@sign,f,c
 13072  001EAA  8E2B               	bsf	___ftmul@f1+1,7,c
 13073  001EAC  8E2E               	bsf	___ftmul@f2+1,7,c
 13074  001EAE  6A2F               	clrf	___ftmul@f2+2,c
 13075  001EB0  6A2C               	clrf	___ftmul@f1+2,c
 13076  001EB2  502A               	movf	___ftmul@f1,w,c
 13077  001EB4  022D               	mulwf	___ftmul@f2,c
 13078  001EB6  CFF4 FFF3          	movff	prodh,prodl
 13079  001EBA  6AF4               	clrf	prodh,c
 13080  001EBC  CFF3 F035          	movff	prodl,___ftmul@f3_as_product
 13081  001EC0  CFF4 F036          	movff	prodh,___ftmul@f3_as_product+1
 13082  001EC4  6A37               	clrf	___ftmul@f3_as_product+2,c
 13083  001EC6  502A               	movf	___ftmul@f1,w,c
 13084  001EC8  022E               	mulwf	___ftmul@f2+1,c
 13085  001ECA  50F3               	movf	prodl,w,c
 13086  001ECC  2635               	addwf	___ftmul@f3_as_product,f,c
 13087  001ECE  50F4               	movf	prodh,w,c
 13088  001ED0  2236               	addwfc	___ftmul@f3_as_product+1,f,c
 13089  001ED2  0E00               	movlw	0
 13090  001ED4  2237               	addwfc	___ftmul@f3_as_product+2,f,c
 13091  001ED6  502B               	movf	___ftmul@f1+1,w,c
 13092  001ED8  022D               	mulwf	___ftmul@f2,c
 13093  001EDA  50F3               	movf	prodl,w,c
 13094  001EDC  2635               	addwf	___ftmul@f3_as_product,f,c
 13095  001EDE  50F4               	movf	prodh,w,c
 13096  001EE0  2236               	addwfc	___ftmul@f3_as_product+1,f,c
 13097  001EE2  0E00               	movlw	0
 13098  001EE4  2237               	addwfc	___ftmul@f3_as_product+2,f,c
 13099  001EE6  502B               	movf	___ftmul@f1+1,w,c
 13100  001EE8  022E               	mulwf	___ftmul@f2+1,c
 13101  001EEA  50F3               	movf	prodl,w,c
 13102  001EEC  2636               	addwf	___ftmul@f3_as_product+1,f,c
 13103  001EEE  50F4               	movf	prodh,w,c
 13104  001EF0  2237               	addwfc	___ftmul@f3_as_product+2,f,c
 13105  001EF2  AE37               	btfss	___ftmul@f3_as_product+2,7,c
 13106  001EF4  D005               	goto	l1300
 13107  001EF6  90D8               	bcf	status,0,c
 13108  001EF8  3237               	rrcf	___ftmul@f3_as_product+2,f,c
 13109  001EFA  3236               	rrcf	___ftmul@f3_as_product+1,f,c
 13110  001EFC  3235               	rrcf	___ftmul@f3_as_product,f,c
 13111  001EFE  2A33               	incf	___ftmul@exp,f,c
 13112  001F00                     l1300:
 13113  001F00  90D8               	bcf	status,0,c
 13114  001F02  3237               	rrcf	___ftmul@f3_as_product+2,f,c
 13115  001F04  3236               	rrcf	___ftmul@f3_as_product+1,f,c
 13116  001F06  3235               	rrcf	___ftmul@f3_as_product,f,c
 13117  001F08  C035  F01E         	movff	___ftmul@f3_as_product,___ftpack@arg
 13118  001F0C  C036  F01F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13119  001F10  C037  F020         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13120  001F14  C033  F021         	movff	___ftmul@exp,___ftpack@exp
 13121  001F18  C034  F022         	movff	___ftmul@sign,___ftpack@sign
 13122  001F1C  EC67  F012         	call	___ftpack	;wreg free
 13123  001F20  C01E  F02A         	movff	?___ftpack,?___ftmul
 13124  001F24  C01F  F02B         	movff	?___ftpack+1,?___ftmul+1
 13125  001F28  C020  F02C         	movff	?___ftpack+2,?___ftmul+2
 13126  001F2C  0012               	return		;funcret
 13127  001F2E                     __end_of___ftmul:
 13128                           	opt stack 0
 13129                           tblptru	equ	0xFF8
 13130                           tblptrh	equ	0xFF7
 13131                           tblptrl	equ	0xFF6
 13132                           tablat	equ	0xFF5
 13133                           prodh	equ	0xFF4
 13134                           prodl	equ	0xFF3
 13135                           intcon	equ	0xFF2
 13136                           postinc0	equ	0xFEE
 13137                           wreg	equ	0xFE8
 13138                           indf1	equ	0xFE7
 13139                           postinc1	equ	0xFE6
 13140                           postdec1	equ	0xFE5
 13141                           fsr1h	equ	0xFE2
 13142                           fsr1l	equ	0xFE1
 13143                           indf2	equ	0xFDF
 13144                           postinc2	equ	0xFDE
 13145                           postdec2	equ	0xFDD
 13146                           fsr2h	equ	0xFDA
 13147                           fsr2l	equ	0xFD9
 13148                           status	equ	0xFD8
 13149                           
 13150 ;; *************** function ___ftpack *****************
 13151 ;; Defined at:
 13152 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 13153 ;; Parameters:    Size  Location     Type
 13154 ;;  arg             3   29[COMRAM] unsigned um
 13155 ;;  exp             1   32[COMRAM] unsigned char 
 13156 ;;  sign            1   33[COMRAM] unsigned char 
 13157 ;; Auto vars:     Size  Location     Type
 13158 ;;		None
 13159 ;; Return value:  Size  Location     Type
 13160 ;;                  3   29[COMRAM] float 
 13161 ;; Registers used:
 13162 ;;		wreg, status,2, status,0
 13163 ;; Tracked objects:
 13164 ;;		On entry : 0/0
 13165 ;;		On exit  : 0/0
 13166 ;;		Unchanged: 0/0
 13167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13168 ;;      Params:         5       0       0       0
 13169 ;;      Locals:         0       0       0       0
 13170 ;;      Temps:          3       0       0       0
 13171 ;;      Totals:         8       0       0       0
 13172 ;;Total ram usage:        8 bytes
 13173 ;; Hardware stack levels used:    1
 13174 ;; Hardware stack levels required when called:    4
 13175 ;; This function calls:
 13176 ;;		Nothing
 13177 ;; This function is called by:
 13178 ;;		___awtoft
 13179 ;;		___ftadd
 13180 ;;		___ftdiv
 13181 ;;		___ftmul
 13182 ;;		___lbtoft
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           	psect	text44
 13187  0024CE                     __ptext44:
 13188                           	opt stack 0
 13189  0024CE                     ___ftpack:
 13190                           	opt stack 24
 13191                           
 13192                           ;incstack = 0
 13193  0024CE  5021               	movf	___ftpack@exp,w,c
 13194  0024D0  E004               	bz	l1216
 13195  0024D2  501E               	movf	___ftpack@arg,w,c
 13196  0024D4  101F               	iorwf	___ftpack@arg+1,w,c
 13197  0024D6  1020               	iorwf	___ftpack@arg+2,w,c
 13198  0024D8  E109               	bnz	l3912
 13199  0024DA                     l1216:
 13200  0024DA  6A1E               	clrf	?___ftpack,c
 13201  0024DC  6A1F               	clrf	?___ftpack+1,c
 13202  0024DE  6A20               	clrf	?___ftpack+2,c
 13203  0024E0  0012               	return	
 13204  0024E2                     l3910:
 13205  0024E2  2A21               	incf	___ftpack@exp,f,c
 13206  0024E4  90D8               	bcf	status,0,c
 13207  0024E6  3220               	rrcf	___ftpack@arg+2,f,c
 13208  0024E8  321F               	rrcf	___ftpack@arg+1,f,c
 13209  0024EA  321E               	rrcf	___ftpack@arg,f,c
 13210  0024EC                     l3912:
 13211  0024EC  6A23               	clrf	??___ftpack& (0+255),c
 13212  0024EE  6A24               	clrf	(??___ftpack+1)& (0+255),c
 13213  0024F0  0EFE               	movlw	254
 13214  0024F2  1420               	andwf	___ftpack@arg+2,w,c
 13215  0024F4  6E25               	movwf	(??___ftpack+2)& (0+255),c
 13216  0024F6  5023               	movf	??___ftpack,w,c
 13217  0024F8  1024               	iorwf	??___ftpack+1,w,c
 13218  0024FA  1025               	iorwf	??___ftpack+2,w,c
 13219  0024FC  E00A               	bz	l3918
 13220  0024FE  D7F1               	goto	l3910
 13221  002500                     l3914:
 13222  002500  2A21               	incf	___ftpack@exp,f,c
 13223  002502  2A1E               	incf	___ftpack@arg,f,c
 13224  002504  0E00               	movlw	0
 13225  002506  221F               	addwfc	___ftpack@arg+1,f,c
 13226  002508  2220               	addwfc	___ftpack@arg+2,f,c
 13227  00250A  90D8               	bcf	status,0,c
 13228  00250C  3220               	rrcf	___ftpack@arg+2,f,c
 13229  00250E  321F               	rrcf	___ftpack@arg+1,f,c
 13230  002510  321E               	rrcf	___ftpack@arg,f,c
 13231  002512                     l3918:
 13232  002512  6A23               	clrf	??___ftpack& (0+255),c
 13233  002514  6A24               	clrf	(??___ftpack+1)& (0+255),c
 13234  002516  5020               	movf	___ftpack@arg+2,w,c
 13235  002518  6E25               	movwf	(??___ftpack+2)& (0+255),c
 13236  00251A  5023               	movf	??___ftpack,w,c
 13237  00251C  1024               	iorwf	??___ftpack+1,w,c
 13238  00251E  1025               	iorwf	??___ftpack+2,w,c
 13239  002520  E006               	bz	l3922
 13240  002522  D7EE               	goto	l3914
 13241  002524                     l3920:
 13242  002524  0621               	decf	___ftpack@exp,f,c
 13243  002526  90D8               	bcf	status,0,c
 13244  002528  361E               	rlcf	___ftpack@arg,f,c
 13245  00252A  361F               	rlcf	___ftpack@arg+1,f,c
 13246  00252C  3620               	rlcf	___ftpack@arg+2,f,c
 13247  00252E                     l3922:
 13248  00252E  BE1F               	btfsc	___ftpack@arg+1,7,c
 13249  002530  D003               	goto	l1228
 13250  002532  0E02               	movlw	2
 13251  002534  6021               	cpfslt	___ftpack@exp,c
 13252  002536  D7F6               	goto	l3920
 13253  002538                     l1228:
 13254  002538  A021               	btfss	___ftpack@exp,0,c
 13255  00253A  9E1F               	bcf	___ftpack@arg+1,7,c
 13256  00253C  90D8               	bcf	status,0,c
 13257  00253E  3221               	rrcf	___ftpack@exp,f,c
 13258  002540  5021               	movf	___ftpack@exp,w,c
 13259  002542  1220               	iorwf	___ftpack@arg+2,f,c
 13260  002544  5022               	movf	___ftpack@sign,w,c
 13261  002546  E001               	bz	l3936
 13262  002548  8E20               	bsf	___ftpack@arg+2,7,c
 13263  00254A                     l3936:
 13264  00254A  C01E  F01E         	movff	___ftpack@arg,?___ftpack
 13265  00254E  C01F  F01F         	movff	___ftpack@arg+1,?___ftpack+1
 13266  002552  C020  F020         	movff	___ftpack@arg+2,?___ftpack+2
 13267  002556  0012               	return		;funcret
 13268  002558                     __end_of___ftpack:
 13269                           	opt stack 0
 13270                           tblptru	equ	0xFF8
 13271                           tblptrh	equ	0xFF7
 13272                           tblptrl	equ	0xFF6
 13273                           tablat	equ	0xFF5
 13274                           prodh	equ	0xFF4
 13275                           prodl	equ	0xFF3
 13276                           intcon	equ	0xFF2
 13277                           postinc0	equ	0xFEE
 13278                           wreg	equ	0xFE8
 13279                           indf1	equ	0xFE7
 13280                           postinc1	equ	0xFE6
 13281                           postdec1	equ	0xFE5
 13282                           fsr1h	equ	0xFE2
 13283                           fsr1l	equ	0xFE1
 13284                           indf2	equ	0xFDF
 13285                           postinc2	equ	0xFDE
 13286                           postdec2	equ	0xFDD
 13287                           fsr2h	equ	0xFDA
 13288                           fsr2l	equ	0xFD9
 13289                           status	equ	0xFD8
 13290                           
 13291 ;; *************** function ___ftge *****************
 13292 ;; Defined at:
 13293 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;  ff1             3   29[COMRAM] float 
 13296 ;;  ff2             3   32[COMRAM] float 
 13297 ;; Auto vars:     Size  Location     Type
 13298 ;;		None
 13299 ;; Return value:  Size  Location     Type
 13300 ;;		None               void
 13301 ;; Registers used:
 13302 ;;		wreg, status,2, status,0
 13303 ;; Tracked objects:
 13304 ;;		On entry : 0/0
 13305 ;;		On exit  : 0/0
 13306 ;;		Unchanged: 0/0
 13307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13308 ;;      Params:         6       0       0       0
 13309 ;;      Locals:         0       0       0       0
 13310 ;;      Temps:          3       0       0       0
 13311 ;;      Totals:         9       0       0       0
 13312 ;;Total ram usage:        9 bytes
 13313 ;; Hardware stack levels used:    1
 13314 ;; Hardware stack levels required when called:    4
 13315 ;; This function calls:
 13316 ;;		Nothing
 13317 ;; This function is called by:
 13318 ;;		_DispPage1
 13319 ;; This function uses a non-reentrant model
 13320 ;;
 13321                           
 13322                           	psect	text45
 13323  0028D8                     __ptext45:
 13324                           	opt stack 0
 13325  0028D8                     ___ftge:
 13326                           	opt stack 25
 13327                           
 13328                           ;incstack = 0
 13329  0028D8  AE20               	btfss	___ftge@ff1+2,7,c
 13330  0028DA  D00D               	goto	l4580
 13331  0028DC  6A24               	clrf	??___ftge& (0+255),c
 13332  0028DE  6A25               	clrf	(??___ftge+1)& (0+255),c
 13333  0028E0  0E80               	movlw	128
 13334  0028E2  6E26               	movwf	(??___ftge+2)& (0+255),c
 13335  0028E4  501E               	movf	___ftge@ff1,w,c
 13336  0028E6  5C24               	subwf	??___ftge,w,c
 13337  0028E8  6E1E               	movwf	___ftge@ff1,c
 13338  0028EA  501F               	movf	___ftge@ff1+1,w,c
 13339  0028EC  5825               	subwfb	??___ftge+1,w,c
 13340  0028EE  6E1F               	movwf	___ftge@ff1+1,c
 13341  0028F0  5020               	movf	___ftge@ff1+2,w,c
 13342  0028F2  5826               	subwfb	??___ftge+2,w,c
 13343  0028F4  6E20               	movwf	___ftge@ff1+2,c
 13344  0028F6                     l4580:
 13345  0028F6  AE23               	btfss	___ftge@ff2+2,7,c
 13346  0028F8  D00D               	goto	l4584
 13347  0028FA  6A24               	clrf	??___ftge& (0+255),c
 13348  0028FC  6A25               	clrf	(??___ftge+1)& (0+255),c
 13349  0028FE  0E80               	movlw	128
 13350  002900  6E26               	movwf	(??___ftge+2)& (0+255),c
 13351  002902  5021               	movf	___ftge@ff2,w,c
 13352  002904  5C24               	subwf	??___ftge,w,c
 13353  002906  6E21               	movwf	___ftge@ff2,c
 13354  002908  5022               	movf	___ftge@ff2+1,w,c
 13355  00290A  5825               	subwfb	??___ftge+1,w,c
 13356  00290C  6E22               	movwf	___ftge@ff2+1,c
 13357  00290E  5023               	movf	___ftge@ff2+2,w,c
 13358  002910  5826               	subwfb	??___ftge+2,w,c
 13359  002912  6E23               	movwf	___ftge@ff2+2,c
 13360  002914                     l4584:
 13361  002914  0E80               	movlw	128
 13362  002916  1A20               	xorwf	___ftge@ff1+2,f,c
 13363  002918  1A23               	xorwf	___ftge@ff2+2,f,c
 13364  00291A  5021               	movf	___ftge@ff2,w,c
 13365  00291C  5C1E               	subwf	___ftge@ff1,w,c
 13366  00291E  5022               	movf	___ftge@ff2+1,w,c
 13367  002920  581F               	subwfb	___ftge@ff1+1,w,c
 13368  002922  5023               	movf	___ftge@ff2+2,w,c
 13369  002924  5820               	subwfb	___ftge@ff1+2,w,c
 13370  002926  E202               	bc	l4590
 13371  002928  90D8               	bcf	status,0,c
 13372  00292A  0012               	return	
 13373  00292C                     l4590:
 13374  00292C  80D8               	bsf	status,0,c
 13375  00292E  0012               	return		;funcret
 13376  002930                     __end_of___ftge:
 13377                           	opt stack 0
 13378                           tblptru	equ	0xFF8
 13379                           tblptrh	equ	0xFF7
 13380                           tblptrl	equ	0xFF6
 13381                           tablat	equ	0xFF5
 13382                           prodh	equ	0xFF4
 13383                           prodl	equ	0xFF3
 13384                           intcon	equ	0xFF2
 13385                           postinc0	equ	0xFEE
 13386                           wreg	equ	0xFE8
 13387                           indf1	equ	0xFE7
 13388                           postinc1	equ	0xFE6
 13389                           postdec1	equ	0xFE5
 13390                           fsr1h	equ	0xFE2
 13391                           fsr1l	equ	0xFE1
 13392                           indf2	equ	0xFDF
 13393                           postinc2	equ	0xFDE
 13394                           postdec2	equ	0xFDD
 13395                           fsr2h	equ	0xFDA
 13396                           fsr2l	equ	0xFD9
 13397                           status	equ	0xFD8
 13398                           
 13399 ;; *************** function ___awmod *****************
 13400 ;; Defined at:
 13401 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
 13402 ;; Parameters:    Size  Location     Type
 13403 ;;  dividend        2   33[BANK0 ] int 
 13404 ;;  divisor         2   35[BANK0 ] int 
 13405 ;; Auto vars:     Size  Location     Type
 13406 ;;  sign            1   38[BANK0 ] unsigned char 
 13407 ;;  counter         1   37[BANK0 ] unsigned char 
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  2   33[BANK0 ] int 
 13410 ;; Registers used:
 13411 ;;		wreg, status,2, status,0
 13412 ;; Tracked objects:
 13413 ;;		On entry : F/0
 13414 ;;		On exit  : F/0
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13417 ;;      Params:         0       4       0       0
 13418 ;;      Locals:         0       2       0       0
 13419 ;;      Temps:          0       0       0       0
 13420 ;;      Totals:         0       6       0       0
 13421 ;;Total ram usage:        6 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:    4
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		_DispPage1
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           	psect	text46
 13432  002816                     __ptext46:
 13433                           	opt stack 0
 13434  002816                     ___awmod:
 13435                           	opt stack 25
 13436                           
 13437                           ; BSR set to: 0
 13438                           
 13439                           ;incstack = 0
 13440  002816  6B86               	clrf	___awmod@sign& (0+255),b
 13441                           
 13442                           ; BSR set to: 0
 13443  002818  AF82               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13444  00281A  D006               	goto	l4536
 13445                           
 13446                           ; BSR set to: 0
 13447  00281C  6D81               	negf	___awmod@dividend& (0+255),b
 13448  00281E  1F82               	comf	(___awmod@dividend+1)& (0+255),f,b
 13449  002820  B0D8               	btfsc	status,0,c
 13450  002822  2B82               	incf	(___awmod@dividend+1)& (0+255),f,b
 13451                           
 13452                           ; BSR set to: 0
 13453  002824  0E01               	movlw	1
 13454  002826  6F86               	movwf	___awmod@sign& (0+255),b
 13455  002828                     l4536:
 13456                           
 13457                           ; BSR set to: 0
 13458  002828  AF84               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13459  00282A  D004               	goto	l4540
 13460                           
 13461                           ; BSR set to: 0
 13462  00282C  6D83               	negf	___awmod@divisor& (0+255),b
 13463  00282E  1F84               	comf	(___awmod@divisor+1)& (0+255),f,b
 13464  002830  B0D8               	btfsc	status,0,c
 13465  002832  2B84               	incf	(___awmod@divisor+1)& (0+255),f,b
 13466  002834                     l4540:
 13467                           
 13468                           ; BSR set to: 0
 13469  002834  5183               	movf	___awmod@divisor& (0+255),w,b
 13470  002836  1184               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13471  002838  E017               	bz	l4556
 13472                           
 13473                           ; BSR set to: 0
 13474  00283A  0E01               	movlw	1
 13475  00283C  6F85               	movwf	___awmod@counter& (0+255),b
 13476  00283E  D004               	goto	l4546
 13477  002840                     l4544:
 13478                           
 13479                           ; BSR set to: 0
 13480  002840  90D8               	bcf	status,0,c
 13481  002842  3783               	rlcf	___awmod@divisor& (0+255),f,b
 13482  002844  3784               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13483  002846  2B85               	incf	___awmod@counter& (0+255),f,b
 13484  002848                     l4546:
 13485                           
 13486                           ; BSR set to: 0
 13487  002848  AF84               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13488  00284A  D7FA               	goto	l4544
 13489  00284C                     l4548:
 13490                           
 13491                           ; BSR set to: 0
 13492  00284C  5183               	movf	___awmod@divisor& (0+255),w,b
 13493  00284E  5D81               	subwf	___awmod@dividend& (0+255),w,b
 13494  002850  5184               	movf	(___awmod@divisor+1)& (0+255),w,b
 13495  002852  5982               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13496  002854  E304               	bnc	l4552
 13497                           
 13498                           ; BSR set to: 0
 13499  002856  5183               	movf	___awmod@divisor& (0+255),w,b
 13500  002858  5F81               	subwf	___awmod@dividend& (0+255),f,b
 13501  00285A  5184               	movf	(___awmod@divisor+1)& (0+255),w,b
 13502  00285C  5B82               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13503  00285E                     l4552:
 13504                           
 13505                           ; BSR set to: 0
 13506  00285E  90D8               	bcf	status,0,c
 13507  002860  3384               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13508  002862  3383               	rrcf	___awmod@divisor& (0+255),f,b
 13509                           
 13510                           ; BSR set to: 0
 13511  002864  2F85               	decfsz	___awmod@counter& (0+255),f,b
 13512  002866  D7F2               	goto	l4548
 13513  002868                     l4556:
 13514                           
 13515                           ; BSR set to: 0
 13516  002868  5186               	movf	___awmod@sign& (0+255),w,b
 13517  00286A  E004               	bz	l4560
 13518                           
 13519                           ; BSR set to: 0
 13520  00286C  6D81               	negf	___awmod@dividend& (0+255),b
 13521  00286E  1F82               	comf	(___awmod@dividend+1)& (0+255),f,b
 13522  002870  B0D8               	btfsc	status,0,c
 13523  002872  2B82               	incf	(___awmod@dividend+1)& (0+255),f,b
 13524  002874                     l4560:
 13525                           
 13526                           ; BSR set to: 0
 13527  002874  C081  F081         	movff	___awmod@dividend,?___awmod
 13528  002878  C082  F082         	movff	___awmod@dividend+1,?___awmod+1
 13529                           
 13530                           ; BSR set to: 0
 13531  00287C  0012               	return		;funcret
 13532  00287E                     __end_of___awmod:
 13533                           	opt stack 0
 13534                           tblptru	equ	0xFF8
 13535                           tblptrh	equ	0xFF7
 13536                           tblptrl	equ	0xFF6
 13537                           tablat	equ	0xFF5
 13538                           prodh	equ	0xFF4
 13539                           prodl	equ	0xFF3
 13540                           intcon	equ	0xFF2
 13541                           postinc0	equ	0xFEE
 13542                           wreg	equ	0xFE8
 13543                           indf1	equ	0xFE7
 13544                           postinc1	equ	0xFE6
 13545                           postdec1	equ	0xFE5
 13546                           fsr1h	equ	0xFE2
 13547                           fsr1l	equ	0xFE1
 13548                           indf2	equ	0xFDF
 13549                           postinc2	equ	0xFDE
 13550                           postdec2	equ	0xFDD
 13551                           fsr2h	equ	0xFDA
 13552                           fsr2l	equ	0xFD9
 13553                           status	equ	0xFD8
 13554                           
 13555 ;; *************** function _LCD_P8x16Str *****************
 13556 ;; Defined at:
 13557 ;;		line 226 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;  x               1    wreg     unsigned char 
 13560 ;;  y               1   33[COMRAM] unsigned char 
 13561 ;;  ch              2   34[COMRAM] PTR unsigned char 
 13562 ;;		 -> STR_30(3), STR_29(3), STR_28(3), STR_27(3), 
 13563 ;;		 -> STR_26(2), STR_25(2), STR_24(5), STR_23(2), 
 13564 ;;		 -> STR_22(2), STR_21(2), DispPage1@buf(5), STR_20(2), 
 13565 ;;		 -> STR_19(2), STR_18(3), STR_17(2), IDPage@buf(4), 
 13566 ;;		 -> STR_16(2), STR_15(3), STR_14(2), STR_13(2), 
 13567 ;;		 -> TimePage@buf(3), STR_12(3), STR_11(2), STR_10(3), 
 13568 ;;		 -> STR_9(2), STR_8(2), STR_7(3), STR_6(2), 
 13569 ;;		 -> SetPage@buf(4), STR_5(2), STR_4(3), STR_3(3), 
 13570 ;;		 -> STR_2(3), STR_1(3), 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  x               1   42[COMRAM] unsigned char 
 13573 ;;  i               1   43[COMRAM] unsigned char 
 13574 ;;  j               1   41[COMRAM] unsigned char 
 13575 ;;  c               1   40[COMRAM] unsigned char 
 13576 ;; Return value:  Size  Location     Type
 13577 ;;                  1    wreg      void 
 13578 ;; Registers used:
 13579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13580 ;; Tracked objects:
 13581 ;;		On entry : 0/0
 13582 ;;		On exit  : 0/0
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13585 ;;      Params:         3       0       0       0
 13586 ;;      Locals:         4       0       0       0
 13587 ;;      Temps:          4       0       0       0
 13588 ;;      Totals:        11       0       0       0
 13589 ;;Total ram usage:       11 bytes
 13590 ;; Hardware stack levels used:    1
 13591 ;; Hardware stack levels required when called:    7
 13592 ;; This function calls:
 13593 ;;		_LCD_Set_Pos
 13594 ;;		_LCD_WrDat
 13595 ;; This function is called by:
 13596 ;;		_SetPage
 13597 ;;		_TimePage
 13598 ;;		_IDPage
 13599 ;;		_DispPage1
 13600 ;;		_ResetPage
 13601 ;; This function uses a non-reentrant model
 13602 ;;
 13603                           
 13604                           	psect	text47
 13605  001C68                     __ptext47:
 13606                           	opt stack 0
 13607  001C68                     _LCD_P8x16Str:
 13608                           	opt stack 22
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;incstack = 0
 13612                           ;LCD_P8x16Str@x stored from wreg
 13613  001C68  6E2B               	movwf	LCD_P8x16Str@x,c
 13614  001C6A  6A2C               	clrf	LCD_P8x16Str@i,c
 13615  001C6C  6A2A               	clrf	LCD_P8x16Str@j,c
 13616                           
 13617                           ;LCD.c: 229: while (ch[j]!='\0')
 13618  001C6E  D06E               	goto	l4252
 13619  001C70                     l4212:
 13620                           
 13621                           ;LCD.c: 230: {
 13622                           ;LCD.c: 231: c =ch[j]-32;
 13623  001C70  502A               	movf	LCD_P8x16Str@j,w,c
 13624  001C72  2423               	addwf	LCD_P8x16Str@ch,w,c
 13625  001C74  6E25               	movwf	??_LCD_P8x16Str& (0+255),c
 13626  001C76  0E00               	movlw	0
 13627  001C78  2024               	addwfc	LCD_P8x16Str@ch+1,w,c
 13628  001C7A  6E26               	movwf	(??_LCD_P8x16Str+1)& (0+255),c
 13629  001C7C  C025  FFF6         	movff	??_LCD_P8x16Str,tblptrl
 13630  001C80  C026  FFF7         	movff	??_LCD_P8x16Str+1,tblptrh
 13631  001C84  6AF8               	clrf	tblptru,c
 13632  001C86  0E02               	movlw	(high __ramtop+-1)
 13633  001C88  64F7               	cpfsgt	tblptrh,c
 13634  001C8A  D003               	bra	u2947
 13635  001C8C  0008               	tblrd		*
 13636  001C8E  50F5               	movf	tablat,w,c
 13637  001C90  D005               	bra	u2940
 13638  001C92                     u2947:
 13639  001C92  CFF6 FFE1          	movff	tblptrl,fsr1l
 13640  001C96  CFF7 FFE2          	movff	tblptrh,fsr1h
 13641  001C9A  50E7               	movf	indf1,w,c
 13642  001C9C                     u2940:
 13643  001C9C  0FE0               	addlw	224
 13644  001C9E  6E29               	movwf	LCD_P8x16Str@c,c
 13645                           
 13646                           ;LCD.c: 232: if(x>120){x=0;y++;}
 13647  001CA0  0E78               	movlw	120
 13648  001CA2  642B               	cpfsgt	LCD_P8x16Str@x,c
 13649  001CA4  D002               	goto	l4220
 13650  001CA6  6A2B               	clrf	LCD_P8x16Str@x,c
 13651  001CA8  2A22               	incf	LCD_P8x16Str@y,f,c
 13652  001CAA                     l4220:
 13653                           
 13654                           ;LCD.c: 233: LCD_Set_Pos(x,y);
 13655  001CAA  C022  F020         	movff	LCD_P8x16Str@y,LCD_Set_Pos@y
 13656  001CAE  502B               	movf	LCD_P8x16Str@x,w,c
 13657  001CB0  ECC2  F017         	call	_LCD_Set_Pos
 13658                           
 13659                           ;LCD.c: 234: for(i=0;i<8;i++)
 13660  001CB4  6A2C               	clrf	LCD_P8x16Str@i,c
 13661  001CB6                     l4228:
 13662                           
 13663                           ;LCD.c: 235: LCD_WrDat(F8X16[c*16+i]);
 13664  001CB6  5029               	movf	LCD_P8x16Str@c,w,c
 13665  001CB8  0D10               	mullw	16
 13666  001CBA  0E69               	movlw	low _F8X16
 13667  001CBC  6E25               	movwf	??_LCD_P8x16Str& (0+255),c
 13668  001CBE  0E32               	movlw	high _F8X16
 13669  001CC0  6E26               	movwf	(??_LCD_P8x16Str+1)& (0+255),c
 13670  001CC2  50F3               	movf	prodl,w,c
 13671  001CC4  2625               	addwf	??_LCD_P8x16Str,f,c
 13672  001CC6  50F4               	movf	prodh,w,c
 13673  001CC8  2226               	addwfc	??_LCD_P8x16Str+1,f,c
 13674  001CCA  502C               	movf	LCD_P8x16Str@i,w,c
 13675  001CCC  2625               	addwf	??_LCD_P8x16Str,f,c
 13676  001CCE  0E00               	movlw	0
 13677  001CD0  2226               	addwfc	??_LCD_P8x16Str+1,f,c
 13678  001CD2  C025  FFF6         	movff	??_LCD_P8x16Str,tblptrl
 13679  001CD6  C026  FFF7         	movff	??_LCD_P8x16Str+1,tblptrh
 13680  001CDA                     	if	0	;tblptru may be non-zero
 13681  001CDA                     	endif
 13682  001CDA                     	if	0	;tblptru may be non-zero
 13683  001CDA                     	endif
 13684  001CDA  0008               	tblrd		*
 13685  001CDC  50F5               	movf	tablat,w,c
 13686  001CDE  EC2D  F018         	call	_LCD_WrDat
 13687  001CE2  2A2C               	incf	LCD_P8x16Str@i,f,c
 13688  001CE4  0E07               	movlw	7
 13689  001CE6  642C               	cpfsgt	LCD_P8x16Str@i,c
 13690  001CE8  D7E6               	goto	l4228
 13691                           
 13692                           ;LCD.c: 236: LCD_Set_Pos(x,y+1);
 13693  001CEA  2822               	incf	LCD_P8x16Str@y,w,c
 13694  001CEC  6E20               	movwf	LCD_Set_Pos@y,c
 13695  001CEE  502B               	movf	LCD_P8x16Str@x,w,c
 13696  001CF0  ECC2  F017         	call	_LCD_Set_Pos
 13697                           
 13698                           ;LCD.c: 237: for(i=0;i<8;i++)
 13699  001CF4  6A2C               	clrf	LCD_P8x16Str@i,c
 13700  001CF6                     l4242:
 13701                           
 13702                           ;LCD.c: 238: LCD_WrDat(F8X16[c*16+i+8]);
 13703  001CF6  5029               	movf	LCD_P8x16Str@c,w,c
 13704  001CF8  6E25               	movwf	??_LCD_P8x16Str& (0+255),c
 13705  001CFA  6A26               	clrf	(??_LCD_P8x16Str+1)& (0+255),c
 13706  001CFC  3A25               	swapf	??_LCD_P8x16Str,f,c
 13707  001CFE  3A26               	swapf	??_LCD_P8x16Str+1,f,c
 13708  001D00  0EF0               	movlw	240
 13709  001D02  1626               	andwf	??_LCD_P8x16Str+1,f,c
 13710  001D04  5025               	movf	??_LCD_P8x16Str,w,c
 13711  001D06  0B0F               	andlw	15
 13712  001D08  1226               	iorwf	??_LCD_P8x16Str+1,f,c
 13713  001D0A  0EF0               	movlw	240
 13714  001D0C  1625               	andwf	??_LCD_P8x16Str,f,c
 13715  001D0E  0E69               	movlw	low _F8X16
 13716  001D10  6E27               	movwf	(??_LCD_P8x16Str+2)& (0+255),c
 13717  001D12  0E32               	movlw	high _F8X16
 13718  001D14  6E28               	movwf	(??_LCD_P8x16Str+3)& (0+255),c
 13719  001D16  5025               	movf	??_LCD_P8x16Str,w,c
 13720  001D18  2627               	addwf	??_LCD_P8x16Str+2,f,c
 13721  001D1A  5026               	movf	??_LCD_P8x16Str+1,w,c
 13722  001D1C  2228               	addwfc	??_LCD_P8x16Str+3,f,c
 13723  001D1E  502C               	movf	LCD_P8x16Str@i,w,c
 13724  001D20  2627               	addwf	??_LCD_P8x16Str+2,f,c
 13725  001D22  0E00               	movlw	0
 13726  001D24  2228               	addwfc	??_LCD_P8x16Str+3,f,c
 13727  001D26  0E08               	movlw	8
 13728  001D28  2627               	addwf	??_LCD_P8x16Str+2,f,c
 13729  001D2A  0E00               	movlw	0
 13730  001D2C  2228               	addwfc	??_LCD_P8x16Str+3,f,c
 13731  001D2E  C027  FFF6         	movff	??_LCD_P8x16Str+2,tblptrl
 13732  001D32  C028  FFF7         	movff	??_LCD_P8x16Str+3,tblptrh
 13733  001D36                     	if	0	;tblptru may be non-zero
 13734  001D36                     	endif
 13735  001D36                     	if	0	;tblptru may be non-zero
 13736  001D36                     	endif
 13737  001D36  0008               	tblrd		*
 13738  001D38  50F5               	movf	tablat,w,c
 13739  001D3A  EC2D  F018         	call	_LCD_WrDat
 13740  001D3E  2A2C               	incf	LCD_P8x16Str@i,f,c
 13741  001D40  0E07               	movlw	7
 13742  001D42  642C               	cpfsgt	LCD_P8x16Str@i,c
 13743  001D44  D7D8               	goto	l4242
 13744                           
 13745                           ;LCD.c: 239: x+=8;
 13746  001D46  0E08               	movlw	8
 13747  001D48  262B               	addwf	LCD_P8x16Str@x,f,c
 13748                           
 13749                           ;LCD.c: 240: j++;
 13750  001D4A  2A2A               	incf	LCD_P8x16Str@j,f,c
 13751  001D4C                     l4252:
 13752  001D4C  502A               	movf	LCD_P8x16Str@j,w,c
 13753  001D4E  2423               	addwf	LCD_P8x16Str@ch,w,c
 13754  001D50  6E25               	movwf	??_LCD_P8x16Str& (0+255),c
 13755  001D52  0E00               	movlw	0
 13756  001D54  2024               	addwfc	LCD_P8x16Str@ch+1,w,c
 13757  001D56  6E26               	movwf	(??_LCD_P8x16Str+1)& (0+255),c
 13758  001D58  C025  FFF6         	movff	??_LCD_P8x16Str,tblptrl
 13759  001D5C  C026  FFF7         	movff	??_LCD_P8x16Str+1,tblptrh
 13760  001D60  6AF8               	clrf	tblptru,c
 13761  001D62  0E02               	movlw	(high __ramtop+-1)
 13762  001D64  64F7               	cpfsgt	tblptrh,c
 13763  001D66  D003               	bra	u2987
 13764  001D68  0008               	tblrd		*
 13765  001D6A  50F5               	movf	tablat,w,c
 13766  001D6C  D005               	bra	u2980
 13767  001D6E                     u2987:
 13768  001D6E  CFF6 FFE1          	movff	tblptrl,fsr1l
 13769  001D72  CFF7 FFE2          	movff	tblptrh,fsr1h
 13770  001D76  50E7               	movf	indf1,w,c
 13771  001D78                     u2980:
 13772  001D78  0900               	iorlw	0
 13773  001D7A  E001 D779          	bnz	l4212
 13774  001D7E  0012               	return		;funcret
 13775  001D80                     __end_of_LCD_P8x16Str:
 13776                           	opt stack 0
 13777                           tblptru	equ	0xFF8
 13778                           tblptrh	equ	0xFF7
 13779                           tblptrl	equ	0xFF6
 13780                           tablat	equ	0xFF5
 13781                           prodh	equ	0xFF4
 13782                           prodl	equ	0xFF3
 13783                           intcon	equ	0xFF2
 13784                           postinc0	equ	0xFEE
 13785                           wreg	equ	0xFE8
 13786                           indf1	equ	0xFE7
 13787                           postinc1	equ	0xFE6
 13788                           postdec1	equ	0xFE5
 13789                           fsr1h	equ	0xFE2
 13790                           fsr1l	equ	0xFE1
 13791                           indf2	equ	0xFDF
 13792                           postinc2	equ	0xFDE
 13793                           postdec2	equ	0xFDD
 13794                           fsr2h	equ	0xFDA
 13795                           fsr2l	equ	0xFD9
 13796                           status	equ	0xFD8
 13797                           
 13798 ;; *************** function _LCD_P8x16Sp *****************
 13799 ;; Defined at:
 13800 ;;		line 243 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 13801 ;; Parameters:    Size  Location     Type
 13802 ;;  x               1    wreg     unsigned char 
 13803 ;;  y               1   33[COMRAM] unsigned char 
 13804 ;;  ch              1   34[COMRAM] unsigned char 
 13805 ;; Auto vars:     Size  Location     Type
 13806 ;;  x               1   39[COMRAM] unsigned char 
 13807 ;;  i               1   41[COMRAM] unsigned char 
 13808 ;;  c               1   40[COMRAM] unsigned char 
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  1    wreg      void 
 13811 ;; Registers used:
 13812 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13818 ;;      Params:         2       0       0       0
 13819 ;;      Locals:         3       0       0       0
 13820 ;;      Temps:          4       0       0       0
 13821 ;;      Totals:         9       0       0       0
 13822 ;;Total ram usage:        9 bytes
 13823 ;; Hardware stack levels used:    1
 13824 ;; Hardware stack levels required when called:    7
 13825 ;; This function calls:
 13826 ;;		_LCD_Set_Pos
 13827 ;;		_LCD_WrDat
 13828 ;; This function is called by:
 13829 ;;		_TimePage
 13830 ;;		_DispPage1
 13831 ;;		_SetOKPage
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835                           	psect	text48
 13836  001D80                     __ptext48:
 13837                           	opt stack 0
 13838  001D80                     _LCD_P8x16Sp:
 13839                           	opt stack 22
 13840                           
 13841                           ;incstack = 0
 13842                           ;LCD_P8x16Sp@x stored from wreg
 13843  001D80  6E28               	movwf	LCD_P8x16Sp@x,c
 13844                           
 13845                           ;LCD.c: 245: unsigned char c=0,i=0;
 13846  001D82  6A29               	clrf	LCD_P8x16Sp@c,c
 13847                           
 13848                           ;LCD.c: 246: switch (ch)
 13849  001D84  D00D               	goto	l4270
 13850  001D86                     l4256:
 13851  001D86  0E1F               	movlw	31
 13852  001D88  D009               	goto	L6
 13853  001D8A                     l4258:
 13854  001D8A  0E20               	movlw	32
 13855  001D8C  D007               	goto	L6
 13856  001D8E                     l4260:
 13857  001D8E  0E21               	movlw	33
 13858  001D90  D005               	goto	L6
 13859  001D92                     l4262:
 13860  001D92  0E22               	movlw	34
 13861  001D94  D003               	goto	L6
 13862  001D96                     l4264:
 13863  001D96  0E23               	movlw	35
 13864  001D98  D001               	goto	L6
 13865  001D9A                     l4266:
 13866  001D9A  0E24               	movlw	36
 13867  001D9C                     L6:
 13868  001D9C  6E29               	movwf	LCD_P8x16Sp@c,c
 13869  001D9E  D00D               	goto	l4272
 13870  001DA0                     l4270:
 13871  001DA0  5023               	movf	LCD_P8x16Sp@ch,w,c
 13872                           
 13873                           ; Switch size 1, requested type "speed"
 13874                           ; Number of cases is 6, Range of values is 75 to 114
 13875                           ; switch strategies available:
 13876                           ; Name         Instructions Cycles
 13877                           ; simple_byte           19    10 (average)
 13878                           ;	Chosen strategy is simple_byte
 13879  001DA2  0A4B               	xorlw	75	; case 75
 13880  001DA4  E0F8               	bz	l4264
 13881  001DA6  0A04               	xorlw	4	; case 79
 13882  001DA8  E0F4               	bz	l4262
 13883  001DAA  0A19               	xorlw	25	; case 86
 13884  001DAC  E0EC               	bz	l4256
 13885  001DAE  0A09               	xorlw	9	; case 95
 13886  001DB0  E0F4               	bz	l4266
 13887  001DB2  0A32               	xorlw	50	; case 109
 13888  001DB4  E0EC               	bz	l4260
 13889  001DB6  0A1F               	xorlw	31	; case 114
 13890  001DB8  E0E8               	bz	l4258
 13891  001DBA                     l4272:
 13892                           
 13893                           ;LCD.c: 255: LCD_Set_Pos(x,y);
 13894  001DBA  C022  F020         	movff	LCD_P8x16Sp@y,LCD_Set_Pos@y
 13895  001DBE  5028               	movf	LCD_P8x16Sp@x,w,c
 13896  001DC0  ECC2  F017         	call	_LCD_Set_Pos
 13897                           
 13898                           ;LCD.c: 256: for(i=0;i<8;i++)
 13899  001DC4  6A2A               	clrf	LCD_P8x16Sp@i,c
 13900  001DC6                     l4280:
 13901                           
 13902                           ;LCD.c: 257: LCD_WrDat(F8X16[c*16+i]);
 13903  001DC6  5029               	movf	LCD_P8x16Sp@c,w,c
 13904  001DC8  0D10               	mullw	16
 13905  001DCA  0E69               	movlw	low _F8X16
 13906  001DCC  6E24               	movwf	??_LCD_P8x16Sp& (0+255),c
 13907  001DCE  0E32               	movlw	high _F8X16
 13908  001DD0  6E25               	movwf	(??_LCD_P8x16Sp+1)& (0+255),c
 13909  001DD2  50F3               	movf	prodl,w,c
 13910  001DD4  2624               	addwf	??_LCD_P8x16Sp,f,c
 13911  001DD6  50F4               	movf	prodh,w,c
 13912  001DD8  2225               	addwfc	??_LCD_P8x16Sp+1,f,c
 13913  001DDA  502A               	movf	LCD_P8x16Sp@i,w,c
 13914  001DDC  2624               	addwf	??_LCD_P8x16Sp,f,c
 13915  001DDE  0E00               	movlw	0
 13916  001DE0  2225               	addwfc	??_LCD_P8x16Sp+1,f,c
 13917  001DE2  C024  FFF6         	movff	??_LCD_P8x16Sp,tblptrl
 13918  001DE6  C025  FFF7         	movff	??_LCD_P8x16Sp+1,tblptrh
 13919  001DEA                     	if	0	;tblptru may be non-zero
 13920  001DEA                     	endif
 13921  001DEA                     	if	0	;tblptru may be non-zero
 13922  001DEA                     	endif
 13923  001DEA  0008               	tblrd		*
 13924  001DEC  50F5               	movf	tablat,w,c
 13925  001DEE  EC2D  F018         	call	_LCD_WrDat
 13926  001DF2  2A2A               	incf	LCD_P8x16Sp@i,f,c
 13927  001DF4  0E07               	movlw	7
 13928  001DF6  642A               	cpfsgt	LCD_P8x16Sp@i,c
 13929  001DF8  D7E6               	goto	l4280
 13930                           
 13931                           ;LCD.c: 258: LCD_Set_Pos(x,y+1);
 13932  001DFA  2822               	incf	LCD_P8x16Sp@y,w,c
 13933  001DFC  6E20               	movwf	LCD_Set_Pos@y,c
 13934  001DFE  5028               	movf	LCD_P8x16Sp@x,w,c
 13935  001E00  ECC2  F017         	call	_LCD_Set_Pos
 13936                           
 13937                           ;LCD.c: 259: for(i=0;i<8;i++)
 13938  001E04  6A2A               	clrf	LCD_P8x16Sp@i,c
 13939  001E06                     l4294:
 13940                           
 13941                           ;LCD.c: 260: LCD_WrDat(F8X16[c*16+i+8]);
 13942  001E06  5029               	movf	LCD_P8x16Sp@c,w,c
 13943  001E08  6E24               	movwf	??_LCD_P8x16Sp& (0+255),c
 13944  001E0A  6A25               	clrf	(??_LCD_P8x16Sp+1)& (0+255),c
 13945  001E0C  3A24               	swapf	??_LCD_P8x16Sp,f,c
 13946  001E0E  3A25               	swapf	??_LCD_P8x16Sp+1,f,c
 13947  001E10  0EF0               	movlw	240
 13948  001E12  1625               	andwf	??_LCD_P8x16Sp+1,f,c
 13949  001E14  5024               	movf	??_LCD_P8x16Sp,w,c
 13950  001E16  0B0F               	andlw	15
 13951  001E18  1225               	iorwf	??_LCD_P8x16Sp+1,f,c
 13952  001E1A  0EF0               	movlw	240
 13953  001E1C  1624               	andwf	??_LCD_P8x16Sp,f,c
 13954  001E1E  0E69               	movlw	low _F8X16
 13955  001E20  6E26               	movwf	(??_LCD_P8x16Sp+2)& (0+255),c
 13956  001E22  0E32               	movlw	high _F8X16
 13957  001E24  6E27               	movwf	(??_LCD_P8x16Sp+3)& (0+255),c
 13958  001E26  5024               	movf	??_LCD_P8x16Sp,w,c
 13959  001E28  2626               	addwf	??_LCD_P8x16Sp+2,f,c
 13960  001E2A  5025               	movf	??_LCD_P8x16Sp+1,w,c
 13961  001E2C  2227               	addwfc	??_LCD_P8x16Sp+3,f,c
 13962  001E2E  502A               	movf	LCD_P8x16Sp@i,w,c
 13963  001E30  2626               	addwf	??_LCD_P8x16Sp+2,f,c
 13964  001E32  0E00               	movlw	0
 13965  001E34  2227               	addwfc	??_LCD_P8x16Sp+3,f,c
 13966  001E36  0E08               	movlw	8
 13967  001E38  2626               	addwf	??_LCD_P8x16Sp+2,f,c
 13968  001E3A  0E00               	movlw	0
 13969  001E3C  2227               	addwfc	??_LCD_P8x16Sp+3,f,c
 13970  001E3E  C026  FFF6         	movff	??_LCD_P8x16Sp+2,tblptrl
 13971  001E42  C027  FFF7         	movff	??_LCD_P8x16Sp+3,tblptrh
 13972  001E46                     	if	0	;tblptru may be non-zero
 13973  001E46                     	endif
 13974  001E46                     	if	0	;tblptru may be non-zero
 13975  001E46                     	endif
 13976  001E46  0008               	tblrd		*
 13977  001E48  50F5               	movf	tablat,w,c
 13978  001E4A  EC2D  F018         	call	_LCD_WrDat
 13979  001E4E  2A2A               	incf	LCD_P8x16Sp@i,f,c
 13980  001E50  0E07               	movlw	7
 13981  001E52  642A               	cpfsgt	LCD_P8x16Sp@i,c
 13982  001E54  D7D8               	goto	l4294
 13983  001E56  0C07               	retlw	7
 13984  001E58                     __end_of_LCD_P8x16Sp:
 13985                           	opt stack 0
 13986                           tblptru	equ	0xFF8
 13987                           tblptrh	equ	0xFF7
 13988                           tblptrl	equ	0xFF6
 13989                           tablat	equ	0xFF5
 13990                           prodh	equ	0xFF4
 13991                           prodl	equ	0xFF3
 13992                           intcon	equ	0xFF2
 13993                           postinc0	equ	0xFEE
 13994                           wreg	equ	0xFE8
 13995                           indf1	equ	0xFE7
 13996                           postinc1	equ	0xFE6
 13997                           postdec1	equ	0xFE5
 13998                           fsr1h	equ	0xFE2
 13999                           fsr1l	equ	0xFE1
 14000                           indf2	equ	0xFDF
 14001                           postinc2	equ	0xFDE
 14002                           postdec2	equ	0xFDD
 14003                           fsr2h	equ	0xFDA
 14004                           fsr2l	equ	0xFD9
 14005                           status	equ	0xFD8
 14006                           
 14007 ;; *************** function _DispLogo *****************
 14008 ;; Defined at:
 14009 ;;		line 368 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 14010 ;; Parameters:    Size  Location     Type
 14011 ;;		None
 14012 ;; Auto vars:     Size  Location     Type
 14013 ;;		None
 14014 ;; Return value:  Size  Location     Type
 14015 ;;                  1    wreg      void 
 14016 ;; Registers used:
 14017 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14018 ;; Tracked objects:
 14019 ;;		On entry : 0/0
 14020 ;;		On exit  : 0/0
 14021 ;;		Unchanged: 0/0
 14022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 14023 ;;      Params:         0       0       0       0
 14024 ;;      Locals:         0       0       0       0
 14025 ;;      Temps:          0       0       0       0
 14026 ;;      Totals:         0       0       0       0
 14027 ;;Total ram usage:        0 bytes
 14028 ;; Hardware stack levels used:    1
 14029 ;; Hardware stack levels required when called:    9
 14030 ;; This function calls:
 14031 ;;		_LCD_HZ
 14032 ;;		_LCD_P6x8Str
 14033 ;;		_OLED_DrawBMP
 14034 ;; This function is called by:
 14035 ;;		_main
 14036 ;; This function uses a non-reentrant model
 14037 ;;
 14038                           
 14039                           	psect	text49
 14040  002442                     __ptext49:
 14041                           	opt stack 0
 14042  002442                     _DispLogo:
 14043                           	opt stack 21
 14044                           
 14045                           ;LCD.c: 370: OLED_DrawBMP(0,0,128,4,Logo);
 14046                           
 14047                           ;incstack = 0
 14048  002442  6A22               	clrf	OLED_DrawBMP@y0,c
 14049  002444  0E80               	movlw	128
 14050  002446  6E23               	movwf	OLED_DrawBMP@x1,c
 14051  002448  0E04               	movlw	4
 14052  00244A  6E24               	movwf	OLED_DrawBMP@y1,c
 14053  00244C  0E3F               	movlw	low _Logo
 14054  00244E  6E25               	movwf	OLED_DrawBMP@BMP,c
 14055  002450  0E3D               	movlw	high _Logo
 14056  002452  6E26               	movwf	OLED_DrawBMP@BMP+1,c
 14057  002454  0E00               	movlw	0
 14058  002456  EC98  F014         	call	_OLED_DrawBMP
 14059                           
 14060                           ;LCD.c: 371: LCD_HZ(20,4,F16x16_HZ,31);
 14061  00245A  0E04               	movlw	4
 14062  00245C  6E22               	movwf	LCD_HZ@y,c
 14063  00245E  0E1F               	movlw	low _F16x16_HZ
 14064  002460  6E23               	movwf	LCD_HZ@data,c
 14065  002462  0E35               	movlw	high _F16x16_HZ
 14066  002464  6E24               	movwf	LCD_HZ@data+1,c
 14067  002466  0E1F               	movlw	31
 14068  002468  6E25               	movwf	LCD_HZ@N,c
 14069  00246A  0E14               	movlw	20
 14070  00246C  EC28  F013         	call	_LCD_HZ
 14071                           
 14072                           ;LCD.c: 372: LCD_HZ(44,4,F16x16_HZ,61);
 14073  002470  0E04               	movlw	4
 14074  002472  6E22               	movwf	LCD_HZ@y,c
 14075  002474  0E1F               	movlw	low _F16x16_HZ
 14076  002476  6E23               	movwf	LCD_HZ@data,c
 14077  002478  0E35               	movlw	high _F16x16_HZ
 14078  00247A  6E24               	movwf	LCD_HZ@data+1,c
 14079  00247C  0E3D               	movlw	61
 14080  00247E  6E25               	movwf	LCD_HZ@N,c
 14081  002480  0E2C               	movlw	44
 14082  002482  EC28  F013         	call	_LCD_HZ
 14083                           
 14084                           ;LCD.c: 373: LCD_HZ(68,4,F16x16_HZ,62);
 14085  002486  0E04               	movlw	4
 14086  002488  6E22               	movwf	LCD_HZ@y,c
 14087  00248A  0E1F               	movlw	low _F16x16_HZ
 14088  00248C  6E23               	movwf	LCD_HZ@data,c
 14089  00248E  0E35               	movlw	high _F16x16_HZ
 14090  002490  6E24               	movwf	LCD_HZ@data+1,c
 14091  002492  0E3E               	movlw	62
 14092  002494  6E25               	movwf	LCD_HZ@N,c
 14093  002496  0E44               	movlw	68
 14094  002498  EC28  F013         	call	_LCD_HZ
 14095                           
 14096                           ;LCD.c: 374: LCD_HZ(92,4,F16x16_HZ,63);
 14097  00249C  0E04               	movlw	4
 14098  00249E  6E22               	movwf	LCD_HZ@y,c
 14099  0024A0  0E1F               	movlw	low _F16x16_HZ
 14100  0024A2  6E23               	movwf	LCD_HZ@data,c
 14101  0024A4  0E35               	movlw	high _F16x16_HZ
 14102  0024A6  6E24               	movwf	LCD_HZ@data+1,c
 14103  0024A8  0E3F               	movlw	63
 14104  0024AA  6E25               	movwf	LCD_HZ@N,c
 14105  0024AC  0E5C               	movlw	92
 14106  0024AE  EC28  F013         	call	_LCD_HZ
 14107                           
 14108                           ;LCD.c: 375: LCD_P6x8Str(28,6,0);
 14109  0024B2  0E06               	movlw	6
 14110  0024B4  6E28               	movwf	LCD_P6x8Str@y,c
 14111  0024B6  0E00               	movlw	0
 14112  0024B8  6E29               	movwf	LCD_P6x8Str@mode,c
 14113  0024BA  0E1C               	movlw	28
 14114  0024BC  EC73  F00B         	call	_LCD_P6x8Str
 14115                           
 14116                           ;LCD.c: 376: LCD_P6x8Str(17,7,1);
 14117  0024C0  0E07               	movlw	7
 14118  0024C2  6E28               	movwf	LCD_P6x8Str@y,c
 14119  0024C4  0E01               	movlw	1
 14120  0024C6  6E29               	movwf	LCD_P6x8Str@mode,c
 14121  0024C8  0E11               	movlw	17
 14122  0024CA  EF73  F00B         	goto	_LCD_P6x8Str
 14123  0024CE                     __end_of_DispLogo:
 14124                           	opt stack 0
 14125                           tblptru	equ	0xFF8
 14126                           tblptrh	equ	0xFF7
 14127                           tblptrl	equ	0xFF6
 14128                           tablat	equ	0xFF5
 14129                           prodh	equ	0xFF4
 14130                           prodl	equ	0xFF3
 14131                           intcon	equ	0xFF2
 14132                           postinc0	equ	0xFEE
 14133                           wreg	equ	0xFE8
 14134                           indf1	equ	0xFE7
 14135                           postinc1	equ	0xFE6
 14136                           postdec1	equ	0xFE5
 14137                           fsr1h	equ	0xFE2
 14138                           fsr1l	equ	0xFE1
 14139                           indf2	equ	0xFDF
 14140                           postinc2	equ	0xFDE
 14141                           postdec2	equ	0xFDD
 14142                           fsr2h	equ	0xFDA
 14143                           fsr2l	equ	0xFD9
 14144                           status	equ	0xFD8
 14145                           
 14146 ;; *************** function _OLED_DrawBMP *****************
 14147 ;; Defined at:
 14148 ;;		line 323 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 14149 ;; Parameters:    Size  Location     Type
 14150 ;;  x0              1    wreg     unsigned char 
 14151 ;;  y0              1   33[COMRAM] unsigned char 
 14152 ;;  x1              1   34[COMRAM] unsigned char 
 14153 ;;  y1              1   35[COMRAM] unsigned char 
 14154 ;;  BMP             2   36[COMRAM] PTR unsigned char 
 14155 ;;		 -> Logo(512), 
 14156 ;; Auto vars:     Size  Location     Type
 14157 ;;  x0              1   43[COMRAM] unsigned char 
 14158 ;;  j               2   40[COMRAM] unsigned int 
 14159 ;;  y               1   44[COMRAM] unsigned char 
 14160 ;;  x               1   42[COMRAM] unsigned char 
 14161 ;; Return value:  Size  Location     Type
 14162 ;;                  1    wreg      void 
 14163 ;; Registers used:
 14164 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14165 ;; Tracked objects:
 14166 ;;		On entry : 0/0
 14167 ;;		On exit  : 0/0
 14168 ;;		Unchanged: 0/0
 14169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 14170 ;;      Params:         5       0       0       0
 14171 ;;      Locals:         5       0       0       0
 14172 ;;      Temps:          2       0       0       0
 14173 ;;      Totals:        12       0       0       0
 14174 ;;Total ram usage:       12 bytes
 14175 ;; Hardware stack levels used:    1
 14176 ;; Hardware stack levels required when called:    7
 14177 ;; This function calls:
 14178 ;;		_LCD_Set_Pos
 14179 ;;		_LCD_WrDat
 14180 ;; This function is called by:
 14181 ;;		_DispLogo
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185                           	psect	text50
 14186  002930                     __ptext50:
 14187                           	opt stack 0
 14188  002930                     _OLED_DrawBMP:
 14189                           	opt stack 22
 14190                           
 14191                           ;incstack = 0
 14192                           ;OLED_DrawBMP@x0 stored from wreg
 14193  002930  6E2C               	movwf	OLED_DrawBMP@x0,c
 14194                           
 14195                           ;LCD.c: 325: unsigned int j=0;
 14196  002932  6A29               	clrf	OLED_DrawBMP@j,c
 14197  002934  6A2A               	clrf	OLED_DrawBMP@j+1,c
 14198                           
 14199                           ;LCD.c: 326: unsigned char x,y;
 14200                           ;LCD.c: 328: if(y1%8==0) y=y1/8;
 14201  002936  C024  F027         	movff	OLED_DrawBMP@y1,??_OLED_DrawBMP
 14202  00293A  0E07               	movlw	7
 14203  00293C  1627               	andwf	??_OLED_DrawBMP,f,c
 14204  00293E  E100               	bnz	l4344
 14205  002940                     l4344:
 14206                           
 14207                           ;LCD.c: 330: for(y=y0;y<y1;y++)
 14208  002940  C022  F02D         	movff	OLED_DrawBMP@y0,OLED_DrawBMP@y
 14209  002944  D01D               	goto	l4360
 14210  002946                     l4346:
 14211                           
 14212                           ;LCD.c: 331: {
 14213                           ;LCD.c: 332: LCD_Set_Pos(x0,y);
 14214  002946  C02D  F020         	movff	OLED_DrawBMP@y,LCD_Set_Pos@y
 14215  00294A  502C               	movf	OLED_DrawBMP@x0,w,c
 14216  00294C  ECC2  F017         	call	_LCD_Set_Pos
 14217                           
 14218                           ;LCD.c: 333: for(x=x0;x<x1;x++)
 14219  002950  C02C  F02B         	movff	OLED_DrawBMP@x0,OLED_DrawBMP@x
 14220  002954  D011               	goto	l4356
 14221  002956                     l4350:
 14222                           
 14223                           ;LCD.c: 334: {
 14224                           ;LCD.c: 335: LCD_WrDat(BMP[j++]);
 14225  002956  5029               	movf	OLED_DrawBMP@j,w,c
 14226  002958  2425               	addwf	OLED_DrawBMP@BMP,w,c
 14227  00295A  6E27               	movwf	??_OLED_DrawBMP& (0+255),c
 14228  00295C  502A               	movf	OLED_DrawBMP@j+1,w,c
 14229  00295E  2026               	addwfc	OLED_DrawBMP@BMP+1,w,c
 14230  002960  6E28               	movwf	(??_OLED_DrawBMP+1)& (0+255),c
 14231  002962  C027  FFF6         	movff	??_OLED_DrawBMP,tblptrl
 14232  002966  C028  FFF7         	movff	??_OLED_DrawBMP+1,tblptrh
 14233  00296A                     	if	0	;tblptru may be non-zero
 14234  00296A                     	endif
 14235  00296A                     	if	0	;tblptru may be non-zero
 14236  00296A                     	endif
 14237  00296A  0008               	tblrd		*
 14238  00296C  50F5               	movf	tablat,w,c
 14239  00296E  EC2D  F018         	call	_LCD_WrDat
 14240  002972  4A29               	infsnz	OLED_DrawBMP@j,f,c
 14241  002974  2A2A               	incf	OLED_DrawBMP@j+1,f,c
 14242  002976  2A2B               	incf	OLED_DrawBMP@x,f,c
 14243  002978                     l4356:
 14244  002978  5023               	movf	OLED_DrawBMP@x1,w,c
 14245  00297A  5C2B               	subwf	OLED_DrawBMP@x,w,c
 14246  00297C  E3EC               	bnc	l4350
 14247  00297E  2A2D               	incf	OLED_DrawBMP@y,f,c
 14248  002980                     l4360:
 14249  002980  5024               	movf	OLED_DrawBMP@y1,w,c
 14250  002982  5C2D               	subwf	OLED_DrawBMP@y,w,c
 14251  002984  E3E0               	bnc	l4346
 14252  002986  0012               	return		;funcret
 14253  002988                     __end_of_OLED_DrawBMP:
 14254                           	opt stack 0
 14255                           tblptru	equ	0xFF8
 14256                           tblptrh	equ	0xFF7
 14257                           tblptrl	equ	0xFF6
 14258                           tablat	equ	0xFF5
 14259                           prodh	equ	0xFF4
 14260                           prodl	equ	0xFF3
 14261                           intcon	equ	0xFF2
 14262                           postinc0	equ	0xFEE
 14263                           wreg	equ	0xFE8
 14264                           indf1	equ	0xFE7
 14265                           postinc1	equ	0xFE6
 14266                           postdec1	equ	0xFE5
 14267                           fsr1h	equ	0xFE2
 14268                           fsr1l	equ	0xFE1
 14269                           indf2	equ	0xFDF
 14270                           postinc2	equ	0xFDE
 14271                           postdec2	equ	0xFDD
 14272                           fsr2h	equ	0xFDA
 14273                           fsr2l	equ	0xFD9
 14274                           status	equ	0xFD8
 14275                           
 14276 ;; *************** function _LCD_P6x8Str *****************
 14277 ;; Defined at:
 14278 ;;		line 204 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;  x               1    wreg     unsigned char 
 14281 ;;  y               1   39[COMRAM] unsigned char 
 14282 ;;  mode            1   40[COMRAM] unsigned char 
 14283 ;; Auto vars:     Size  Location     Type
 14284 ;;  x               1   41[COMRAM] unsigned char 
 14285 ;; Return value:  Size  Location     Type
 14286 ;;                  1    wreg      void 
 14287 ;; Registers used:
 14288 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14289 ;; Tracked objects:
 14290 ;;		On entry : 0/0
 14291 ;;		On exit  : 0/0
 14292 ;;		Unchanged: 0/0
 14293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 14294 ;;      Params:         2       0       0       0
 14295 ;;      Locals:         1       0       0       0
 14296 ;;      Temps:          0       0       0       0
 14297 ;;      Totals:         3       0       0       0
 14298 ;;Total ram usage:        3 bytes
 14299 ;; Hardware stack levels used:    1
 14300 ;; Hardware stack levels required when called:    8
 14301 ;; This function calls:
 14302 ;;		_show6x8
 14303 ;; This function is called by:
 14304 ;;		_DispLogo
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308                           	psect	text51
 14309  0016E6                     __ptext51:
 14310                           	opt stack 0
 14311  0016E6                     _LCD_P6x8Str:
 14312                           	opt stack 21
 14313                           
 14314                           ;incstack = 0
 14315                           ;LCD_P6x8Str@x stored from wreg
 14316  0016E6  6E2A               	movwf	LCD_P6x8Str@x,c
 14317                           
 14318                           ;LCD.c: 206: if(mode==0)
 14319  0016E8  5029               	movf	LCD_P6x8Str@mode,w,c
 14320  0016EA  E15D               	bnz	l4208
 14321                           
 14322                           ;LCD.c: 207: {
 14323                           ;LCD.c: 208: show6x8(x,y,0);show6x8(x+6,y,3);show6x8(x+12,y,3);show6x8(x+18,y,5);
 14324  0016EC  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14325  0016F0  6A23               	clrf	show6x8@c,c
 14326  0016F2  502A               	movf	LCD_P6x8Str@x,w,c
 14327  0016F4  EC18  F015         	call	_show6x8
 14328  0016F8  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14329  0016FC  0E03               	movlw	3
 14330  0016FE  6E23               	movwf	show6x8@c,c
 14331  001700  502A               	movf	LCD_P6x8Str@x,w,c
 14332  001702  0F06               	addlw	6
 14333  001704  EC18  F015         	call	_show6x8
 14334  001708  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14335  00170C  0E03               	movlw	3
 14336  00170E  6E23               	movwf	show6x8@c,c
 14337  001710  502A               	movf	LCD_P6x8Str@x,w,c
 14338  001712  0F0C               	addlw	12
 14339  001714  EC18  F015         	call	_show6x8
 14340  001718  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14341  00171C  0E05               	movlw	5
 14342  00171E  6E23               	movwf	show6x8@c,c
 14343  001720  502A               	movf	LCD_P6x8Str@x,w,c
 14344  001722  0F12               	addlw	18
 14345  001724  EC18  F015         	call	_show6x8
 14346                           
 14347                           ;LCD.c: 209: show6x8(x+24,y,7);
 14348  001728  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14349  00172C  0E07               	movlw	7
 14350  00172E  6E23               	movwf	show6x8@c,c
 14351  001730  502A               	movf	LCD_P6x8Str@x,w,c
 14352  001732  0F18               	addlw	24
 14353  001734  EC18  F015         	call	_show6x8
 14354                           
 14355                           ;LCD.c: 210: show6x8(x+30,y,2);show6x8(x+36,y,3);show6x8(x+42,y,4);show6x8(x+48,y,2);sho
      +                          w6x8(x+54,y,1);show6x8(x+60,y,0);show6x8(x+66,y,4);
 14356  001738  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14357  00173C  0E02               	movlw	2
 14358  00173E  6E23               	movwf	show6x8@c,c
 14359  001740  502A               	movf	LCD_P6x8Str@x,w,c
 14360  001742  0F1E               	addlw	30
 14361  001744  EC18  F015         	call	_show6x8
 14362  001748  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14363  00174C  0E03               	movlw	3
 14364  00174E  6E23               	movwf	show6x8@c,c
 14365  001750  502A               	movf	LCD_P6x8Str@x,w,c
 14366  001752  0F24               	addlw	36
 14367  001754  EC18  F015         	call	_show6x8
 14368  001758  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14369  00175C  0E04               	movlw	4
 14370  00175E  6E23               	movwf	show6x8@c,c
 14371  001760  502A               	movf	LCD_P6x8Str@x,w,c
 14372  001762  0F2A               	addlw	42
 14373  001764  EC18  F015         	call	_show6x8
 14374  001768  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14375  00176C  0E02               	movlw	2
 14376  00176E  6E23               	movwf	show6x8@c,c
 14377  001770  502A               	movf	LCD_P6x8Str@x,w,c
 14378  001772  0F30               	addlw	48
 14379  001774  EC18  F015         	call	_show6x8
 14380  001778  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14381  00177C  0E01               	movlw	1
 14382  00177E  6E23               	movwf	show6x8@c,c
 14383  001780  502A               	movf	LCD_P6x8Str@x,w,c
 14384  001782  0F36               	addlw	54
 14385  001784  EC18  F015         	call	_show6x8
 14386  001788  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14387  00178C  6A23               	clrf	show6x8@c,c
 14388  00178E  502A               	movf	LCD_P6x8Str@x,w,c
 14389  001790  0F3C               	addlw	60
 14390  001792  EC18  F015         	call	_show6x8
 14391  001796  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14392  00179A  0E04               	movlw	4
 14393  00179C  6E23               	movwf	show6x8@c,c
 14394  00179E  502A               	movf	LCD_P6x8Str@x,w,c
 14395  0017A0  0F42               	addlw	66
 14396  0017A2  EF18  F015         	goto	_show6x8
 14397  0017A6                     l4208:
 14398                           
 14399                           ;LCD.c: 212: else
 14400                           ;LCD.c: 213: {
 14401                           ;LCD.c: 214: show6x8(x,y,16);show6x8(x+6,y,16);show6x8(x+12,y,16);show6x8(x+18,y,6);
 14402  0017A6  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14403  0017AA  0E10               	movlw	16
 14404  0017AC  6E23               	movwf	show6x8@c,c
 14405  0017AE  502A               	movf	LCD_P6x8Str@x,w,c
 14406  0017B0  EC18  F015         	call	_show6x8
 14407  0017B4  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14408  0017B8  0E10               	movlw	16
 14409  0017BA  6E23               	movwf	show6x8@c,c
 14410  0017BC  502A               	movf	LCD_P6x8Str@x,w,c
 14411  0017BE  0F06               	addlw	6
 14412  0017C0  EC18  F015         	call	_show6x8
 14413  0017C4  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14414  0017C8  0E10               	movlw	16
 14415  0017CA  6E23               	movwf	show6x8@c,c
 14416  0017CC  502A               	movf	LCD_P6x8Str@x,w,c
 14417  0017CE  0F0C               	addlw	12
 14418  0017D0  EC18  F015         	call	_show6x8
 14419  0017D4  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14420  0017D8  0E06               	movlw	6
 14421  0017DA  6E23               	movwf	show6x8@c,c
 14422  0017DC  502A               	movf	LCD_P6x8Str@x,w,c
 14423  0017DE  0F12               	addlw	18
 14424  0017E0  EC18  F015         	call	_show6x8
 14425                           
 14426                           ;LCD.c: 215: show6x8(x+24,y,10);show6x8(x+30,y,14);show6x8(x+36,y,14);show6x8(x+42,y,14)
      +                          ;show6x8(x+48,y,15);show6x8(x+54,y,8);show6x8(x+60,y,13);show6x8(x+66,y,6);
 14427  0017E4  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14428  0017E8  0E0A               	movlw	10
 14429  0017EA  6E23               	movwf	show6x8@c,c
 14430  0017EC  502A               	movf	LCD_P6x8Str@x,w,c
 14431  0017EE  0F18               	addlw	24
 14432  0017F0  EC18  F015         	call	_show6x8
 14433  0017F4  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14434  0017F8  0E0E               	movlw	14
 14435  0017FA  6E23               	movwf	show6x8@c,c
 14436  0017FC  502A               	movf	LCD_P6x8Str@x,w,c
 14437  0017FE  0F1E               	addlw	30
 14438  001800  EC18  F015         	call	_show6x8
 14439  001804  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14440  001808  0E0E               	movlw	14
 14441  00180A  6E23               	movwf	show6x8@c,c
 14442  00180C  502A               	movf	LCD_P6x8Str@x,w,c
 14443  00180E  0F24               	addlw	36
 14444  001810  EC18  F015         	call	_show6x8
 14445  001814  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14446  001818  0E0E               	movlw	14
 14447  00181A  6E23               	movwf	show6x8@c,c
 14448  00181C  502A               	movf	LCD_P6x8Str@x,w,c
 14449  00181E  0F2A               	addlw	42
 14450  001820  EC18  F015         	call	_show6x8
 14451  001824  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14452  001828  0E0F               	movlw	15
 14453  00182A  6E23               	movwf	show6x8@c,c
 14454  00182C  502A               	movf	LCD_P6x8Str@x,w,c
 14455  00182E  0F30               	addlw	48
 14456  001830  EC18  F015         	call	_show6x8
 14457  001834  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14458  001838  0E08               	movlw	8
 14459  00183A  6E23               	movwf	show6x8@c,c
 14460  00183C  502A               	movf	LCD_P6x8Str@x,w,c
 14461  00183E  0F36               	addlw	54
 14462  001840  EC18  F015         	call	_show6x8
 14463  001844  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14464  001848  0E0D               	movlw	13
 14465  00184A  6E23               	movwf	show6x8@c,c
 14466  00184C  502A               	movf	LCD_P6x8Str@x,w,c
 14467  00184E  0F3C               	addlw	60
 14468  001850  EC18  F015         	call	_show6x8
 14469  001854  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14470  001858  0E06               	movlw	6
 14471  00185A  6E23               	movwf	show6x8@c,c
 14472  00185C  502A               	movf	LCD_P6x8Str@x,w,c
 14473  00185E  0F42               	addlw	66
 14474  001860  EC18  F015         	call	_show6x8
 14475                           
 14476                           ;LCD.c: 216: show6x8(x+72,y,9);show6x8(x+78,y,12);show6x8(x+84,y,11);
 14477  001864  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14478  001868  0E09               	movlw	9
 14479  00186A  6E23               	movwf	show6x8@c,c
 14480  00186C  502A               	movf	LCD_P6x8Str@x,w,c
 14481  00186E  0F48               	addlw	72
 14482  001870  EC18  F015         	call	_show6x8
 14483  001874  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14484  001878  0E0C               	movlw	12
 14485  00187A  6E23               	movwf	show6x8@c,c
 14486  00187C  502A               	movf	LCD_P6x8Str@x,w,c
 14487  00187E  0F4E               	addlw	78
 14488  001880  EC18  F015         	call	_show6x8
 14489  001884  C028  F022         	movff	LCD_P6x8Str@y,show6x8@y
 14490  001888  0E0B               	movlw	11
 14491  00188A  6E23               	movwf	show6x8@c,c
 14492  00188C  502A               	movf	LCD_P6x8Str@x,w,c
 14493  00188E  0F54               	addlw	84
 14494  001890  EF18  F015         	goto	_show6x8
 14495  001894                     __end_of_LCD_P6x8Str:
 14496                           	opt stack 0
 14497                           tblptru	equ	0xFF8
 14498                           tblptrh	equ	0xFF7
 14499                           tblptrl	equ	0xFF6
 14500                           tablat	equ	0xFF5
 14501                           prodh	equ	0xFF4
 14502                           prodl	equ	0xFF3
 14503                           intcon	equ	0xFF2
 14504                           postinc0	equ	0xFEE
 14505                           wreg	equ	0xFE8
 14506                           indf1	equ	0xFE7
 14507                           postinc1	equ	0xFE6
 14508                           postdec1	equ	0xFE5
 14509                           fsr1h	equ	0xFE2
 14510                           fsr1l	equ	0xFE1
 14511                           indf2	equ	0xFDF
 14512                           postinc2	equ	0xFDE
 14513                           postdec2	equ	0xFDD
 14514                           fsr2h	equ	0xFDA
 14515                           fsr2l	equ	0xFD9
 14516                           status	equ	0xFD8
 14517                           
 14518 ;; *************** function _show6x8 *****************
 14519 ;; Defined at:
 14520 ;;		line 193 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;  x               1    wreg     unsigned char 
 14523 ;;  y               1   33[COMRAM] unsigned char 
 14524 ;;  c               1   34[COMRAM] unsigned char 
 14525 ;; Auto vars:     Size  Location     Type
 14526 ;;  x               1   37[COMRAM] unsigned char 
 14527 ;;  i               1   38[COMRAM] unsigned char 
 14528 ;;  j               1    0        unsigned char 
 14529 ;; Return value:  Size  Location     Type
 14530 ;;                  1    wreg      void 
 14531 ;; Registers used:
 14532 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14533 ;; Tracked objects:
 14534 ;;		On entry : 0/0
 14535 ;;		On exit  : 0/0
 14536 ;;		Unchanged: 0/0
 14537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 14538 ;;      Params:         2       0       0       0
 14539 ;;      Locals:         2       0       0       0
 14540 ;;      Temps:          2       0       0       0
 14541 ;;      Totals:         6       0       0       0
 14542 ;;Total ram usage:        6 bytes
 14543 ;; Hardware stack levels used:    1
 14544 ;; Hardware stack levels required when called:    7
 14545 ;; This function calls:
 14546 ;;		_LCD_Set_Pos
 14547 ;;		_LCD_WrDat
 14548 ;; This function is called by:
 14549 ;;		_LCD_P6x8Str
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text52
 14554  002A30                     __ptext52:
 14555                           	opt stack 0
 14556  002A30                     _show6x8:
 14557                           	opt stack 21
 14558                           
 14559                           ;incstack = 0
 14560                           ;show6x8@x stored from wreg
 14561  002A30  6E26               	movwf	show6x8@x,c
 14562                           
 14563                           ;LCD.c: 196: if(x>126){x=0;y++;}
 14564  002A32  0E7E               	movlw	126
 14565  002A34  6426               	cpfsgt	show6x8@x,c
 14566  002A36  D002               	goto	l3990
 14567  002A38  6A26               	clrf	show6x8@x,c
 14568  002A3A  2A22               	incf	show6x8@y,f,c
 14569  002A3C                     l3990:
 14570                           
 14571                           ;LCD.c: 197: LCD_Set_Pos(x,y);
 14572  002A3C  C022  F020         	movff	show6x8@y,LCD_Set_Pos@y
 14573  002A40  5026               	movf	show6x8@x,w,c
 14574  002A42  ECC2  F017         	call	_LCD_Set_Pos
 14575                           
 14576                           ;LCD.c: 198: for(i=0;i<6;i++)
 14577  002A46  6A27               	clrf	show6x8@i,c
 14578  002A48                     l3998:
 14579                           
 14580                           ;LCD.c: 199: LCD_WrDat(F6x8_1[c][i]);
 14581  002A48  5023               	movf	show6x8@c,w,c
 14582  002A4A  0D06               	mullw	6
 14583  002A4C  0EB9               	movlw	low _F6x8_1
 14584  002A4E  6E24               	movwf	??_show6x8& (0+255),c
 14585  002A50  0E34               	movlw	high _F6x8_1
 14586  002A52  6E25               	movwf	(??_show6x8+1)& (0+255),c
 14587  002A54  50F3               	movf	prodl,w,c
 14588  002A56  2624               	addwf	??_show6x8,f,c
 14589  002A58  50F4               	movf	prodh,w,c
 14590  002A5A  2225               	addwfc	??_show6x8+1,f,c
 14591  002A5C  5027               	movf	show6x8@i,w,c
 14592  002A5E  2624               	addwf	??_show6x8,f,c
 14593  002A60  0E00               	movlw	0
 14594  002A62  2225               	addwfc	??_show6x8+1,f,c
 14595  002A64  C024  FFF6         	movff	??_show6x8,tblptrl
 14596  002A68  C025  FFF7         	movff	??_show6x8+1,tblptrh
 14597  002A6C                     	if	0	;tblptru may be non-zero
 14598  002A6C                     	endif
 14599  002A6C                     	if	0	;tblptru may be non-zero
 14600  002A6C                     	endif
 14601  002A6C  0008               	tblrd		*
 14602  002A6E  50F5               	movf	tablat,w,c
 14603  002A70  EC2D  F018         	call	_LCD_WrDat
 14604  002A74  2A27               	incf	show6x8@i,f,c
 14605  002A76  0E05               	movlw	5
 14606  002A78  6427               	cpfsgt	show6x8@i,c
 14607  002A7A  D7E6               	goto	l3998
 14608                           
 14609                           ;LCD.c: 201: j++;
 14610  002A7C  0E06               	movlw	6
 14611  002A7E  2626               	addwf	show6x8@x,f,c
 14612  002A80  0C06               	retlw	6	;funcret
 14613  002A82                     __end_of_show6x8:
 14614                           	opt stack 0
 14615                           tblptru	equ	0xFF8
 14616                           tblptrh	equ	0xFF7
 14617                           tblptrl	equ	0xFF6
 14618                           tablat	equ	0xFF5
 14619                           prodh	equ	0xFF4
 14620                           prodl	equ	0xFF3
 14621                           intcon	equ	0xFF2
 14622                           postinc0	equ	0xFEE
 14623                           wreg	equ	0xFE8
 14624                           indf1	equ	0xFE7
 14625                           postinc1	equ	0xFE6
 14626                           postdec1	equ	0xFE5
 14627                           fsr1h	equ	0xFE2
 14628                           fsr1l	equ	0xFE1
 14629                           indf2	equ	0xFDF
 14630                           postinc2	equ	0xFDE
 14631                           postdec2	equ	0xFDD
 14632                           fsr2h	equ	0xFDA
 14633                           fsr2l	equ	0xFD9
 14634                           status	equ	0xFD8
 14635                           
 14636 ;; *************** function _LCD_HZ *****************
 14637 ;; Defined at:
 14638 ;;		line 284 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 14639 ;; Parameters:    Size  Location     Type
 14640 ;;  x               1    wreg     unsigned char 
 14641 ;;  y               1   33[COMRAM] unsigned char 
 14642 ;;  data            2   34[COMRAM] PTR unsigned char 
 14643 ;;		 -> F16x16_HZ(2080), 
 14644 ;;  N               1   36[COMRAM] unsigned char 
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;  x               1   39[COMRAM] unsigned char 
 14647 ;;  adder           2   40[COMRAM] unsigned int 
 14648 ;;  wm              1   42[COMRAM] unsigned char 
 14649 ;; Return value:  Size  Location     Type
 14650 ;;                  1    wreg      void 
 14651 ;; Registers used:
 14652 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14653 ;; Tracked objects:
 14654 ;;		On entry : 0/0
 14655 ;;		On exit  : 0/0
 14656 ;;		Unchanged: 0/0
 14657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 14658 ;;      Params:         4       0       0       0
 14659 ;;      Locals:         4       0       0       0
 14660 ;;      Temps:          2       0       0       0
 14661 ;;      Totals:        10       0       0       0
 14662 ;;Total ram usage:       10 bytes
 14663 ;; Hardware stack levels used:    1
 14664 ;; Hardware stack levels required when called:    7
 14665 ;; This function calls:
 14666 ;;		_LCD_Set_Pos
 14667 ;;		_LCD_WrDat
 14668 ;; This function is called by:
 14669 ;;		_DispLogo
 14670 ;;		_SetPage
 14671 ;;		_TimePage
 14672 ;;		_IDPage
 14673 ;;		_DispPage1
 14674 ;;		_SetOKPage
 14675 ;;		_ResetPage
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           	psect	text53
 14680  002650                     __ptext53:
 14681                           	opt stack 0
 14682  002650                     _LCD_HZ:
 14683                           	opt stack 22
 14684                           
 14685                           ;incstack = 0
 14686                           ;LCD_HZ@x stored from wreg
 14687  002650  6E28               	movwf	LCD_HZ@x,c
 14688                           
 14689                           ;LCD.c: 287: unsigned int adder=32*N;
 14690  002652  5025               	movf	LCD_HZ@N,w,c
 14691  002654  0D20               	mullw	32
 14692  002656  CFF3 F029          	movff	prodl,LCD_HZ@adder
 14693  00265A  CFF4 F02A          	movff	prodh,LCD_HZ@adder+1
 14694                           
 14695                           ;LCD.c: 288: LCD_Set_Pos(x , y);
 14696  00265E  C022  F020         	movff	LCD_HZ@y,LCD_Set_Pos@y
 14697  002662  5028               	movf	LCD_HZ@x,w,c
 14698  002664  ECC2  F017         	call	_LCD_Set_Pos
 14699                           
 14700                           ;LCD.c: 289: for(wm = 0;wm < 16;wm++)
 14701  002668  6A2B               	clrf	LCD_HZ@wm,c
 14702  00266A                     l4312:
 14703                           
 14704                           ;LCD.c: 290: {
 14705                           ;LCD.c: 291: LCD_WrDat(data[adder]);
 14706  00266A  5029               	movf	LCD_HZ@adder,w,c
 14707  00266C  2423               	addwf	LCD_HZ@data,w,c
 14708  00266E  6E26               	movwf	??_LCD_HZ& (0+255),c
 14709  002670  502A               	movf	LCD_HZ@adder+1,w,c
 14710  002672  2024               	addwfc	LCD_HZ@data+1,w,c
 14711  002674  6E27               	movwf	(??_LCD_HZ+1)& (0+255),c
 14712  002676  C026  FFF6         	movff	??_LCD_HZ,tblptrl
 14713  00267A  C027  FFF7         	movff	??_LCD_HZ+1,tblptrh
 14714  00267E                     	if	0	;tblptru may be non-zero
 14715  00267E                     	endif
 14716  00267E                     	if	0	;tblptru may be non-zero
 14717  00267E                     	endif
 14718  00267E  0008               	tblrd		*
 14719  002680  50F5               	movf	tablat,w,c
 14720  002682  EC2D  F018         	call	_LCD_WrDat
 14721                           
 14722                           ;LCD.c: 292: adder += 1;
 14723  002686  4A29               	infsnz	LCD_HZ@adder,f,c
 14724  002688  2A2A               	incf	LCD_HZ@adder+1,f,c
 14725  00268A  2A2B               	incf	LCD_HZ@wm,f,c
 14726  00268C  0E0F               	movlw	15
 14727  00268E  642B               	cpfsgt	LCD_HZ@wm,c
 14728  002690  D7EC               	goto	l4312
 14729                           
 14730                           ;LCD.c: 293: }
 14731                           ;LCD.c: 294: LCD_Set_Pos(x,y + 1);
 14732  002692  2822               	incf	LCD_HZ@y,w,c
 14733  002694  6E20               	movwf	LCD_Set_Pos@y,c
 14734  002696  5028               	movf	LCD_HZ@x,w,c
 14735  002698  ECC2  F017         	call	_LCD_Set_Pos
 14736                           
 14737                           ;LCD.c: 295: for(wm = 0;wm < 16;wm++)
 14738  00269C  6A2B               	clrf	LCD_HZ@wm,c
 14739  00269E                     l4328:
 14740                           
 14741                           ;LCD.c: 296: {
 14742                           ;LCD.c: 297: LCD_WrDat(data[adder]);
 14743  00269E  5029               	movf	LCD_HZ@adder,w,c
 14744  0026A0  2423               	addwf	LCD_HZ@data,w,c
 14745  0026A2  6E26               	movwf	??_LCD_HZ& (0+255),c
 14746  0026A4  502A               	movf	LCD_HZ@adder+1,w,c
 14747  0026A6  2024               	addwfc	LCD_HZ@data+1,w,c
 14748  0026A8  6E27               	movwf	(??_LCD_HZ+1)& (0+255),c
 14749  0026AA  C026  FFF6         	movff	??_LCD_HZ,tblptrl
 14750  0026AE  C027  FFF7         	movff	??_LCD_HZ+1,tblptrh
 14751  0026B2                     	if	0	;tblptru may be non-zero
 14752  0026B2                     	endif
 14753  0026B2                     	if	0	;tblptru may be non-zero
 14754  0026B2                     	endif
 14755  0026B2  0008               	tblrd		*
 14756  0026B4  50F5               	movf	tablat,w,c
 14757  0026B6  EC2D  F018         	call	_LCD_WrDat
 14758                           
 14759                           ;LCD.c: 298: adder += 1;
 14760  0026BA  4A29               	infsnz	LCD_HZ@adder,f,c
 14761  0026BC  2A2A               	incf	LCD_HZ@adder+1,f,c
 14762  0026BE  2A2B               	incf	LCD_HZ@wm,f,c
 14763  0026C0  0E0F               	movlw	15
 14764  0026C2  642B               	cpfsgt	LCD_HZ@wm,c
 14765  0026C4  D7EC               	goto	l4328
 14766  0026C6  0C0F               	retlw	15
 14767  0026C8                     __end_of_LCD_HZ:
 14768                           	opt stack 0
 14769                           tblptru	equ	0xFF8
 14770                           tblptrh	equ	0xFF7
 14771                           tblptrl	equ	0xFF6
 14772                           tablat	equ	0xFF5
 14773                           prodh	equ	0xFF4
 14774                           prodl	equ	0xFF3
 14775                           intcon	equ	0xFF2
 14776                           postinc0	equ	0xFEE
 14777                           wreg	equ	0xFE8
 14778                           indf1	equ	0xFE7
 14779                           postinc1	equ	0xFE6
 14780                           postdec1	equ	0xFE5
 14781                           fsr1h	equ	0xFE2
 14782                           fsr1l	equ	0xFE1
 14783                           indf2	equ	0xFDF
 14784                           postinc2	equ	0xFDE
 14785                           postdec2	equ	0xFDD
 14786                           fsr2h	equ	0xFDA
 14787                           fsr2l	equ	0xFD9
 14788                           status	equ	0xFD8
 14789                           
 14790 ;; *************** function _LCD_WrDat *****************
 14791 ;; Defined at:
 14792 ;;		line 32 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;  dat             1    wreg     unsigned char 
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;  dat             1   30[COMRAM] unsigned char 
 14797 ;; Return value:  Size  Location     Type
 14798 ;;                  1    wreg      void 
 14799 ;; Registers used:
 14800 ;;		wreg, status,2, cstack
 14801 ;; Tracked objects:
 14802 ;;		On entry : 0/0
 14803 ;;		On exit  : 0/0
 14804 ;;		Unchanged: 0/0
 14805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 14806 ;;      Params:         0       0       0       0
 14807 ;;      Locals:         1       0       0       0
 14808 ;;      Temps:          0       0       0       0
 14809 ;;      Totals:         1       0       0       0
 14810 ;;Total ram usage:        1 bytes
 14811 ;; Hardware stack levels used:    1
 14812 ;; Hardware stack levels required when called:    5
 14813 ;; This function calls:
 14814 ;;		_write_spi
 14815 ;; This function is called by:
 14816 ;;		_LCD_CLS
 14817 ;;		_show6x8
 14818 ;;		_LCD_P8x16Str
 14819 ;;		_LCD_P8x16Sp
 14820 ;;		_LCD_HZ
 14821 ;;		_OLED_DrawBMP
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text54
 14826  00305A                     __ptext54:
 14827                           	opt stack 0
 14828  00305A                     _LCD_WrDat:
 14829                           	opt stack 23
 14830                           
 14831                           ;incstack = 0
 14832                           ;LCD_WrDat@dat stored from wreg
 14833  00305A  6E1F               	movwf	LCD_WrDat@dat,c
 14834                           
 14835                           ;LCD.c: 34: RD2=0;
 14836  00305C  9483               	bcf	3971,2,c	;volatile
 14837                           
 14838                           ;LCD.c: 35: RD0=1;
 14839  00305E  8083               	bsf	3971,0,c	;volatile
 14840                           
 14841                           ;LCD.c: 36: RC5=0;
 14842  003060  9A82               	bcf	3970,5,c	;volatile
 14843                           
 14844                           ;LCD.c: 37: write_spi(dat);
 14845  003062  501F               	movf	LCD_WrDat@dat,w,c
 14846  003064  EC6D  F018         	call	_write_spi
 14847                           
 14848                           ;LCD.c: 38: RD2=1;
 14849  003068  8483               	bsf	3971,2,c	;volatile
 14850  00306A  0012               	return		;funcret
 14851  00306C                     __end_of_LCD_WrDat:
 14852                           	opt stack 0
 14853                           tblptru	equ	0xFF8
 14854                           tblptrh	equ	0xFF7
 14855                           tblptrl	equ	0xFF6
 14856                           tablat	equ	0xFF5
 14857                           prodh	equ	0xFF4
 14858                           prodl	equ	0xFF3
 14859                           intcon	equ	0xFF2
 14860                           postinc0	equ	0xFEE
 14861                           wreg	equ	0xFE8
 14862                           indf1	equ	0xFE7
 14863                           postinc1	equ	0xFE6
 14864                           postdec1	equ	0xFE5
 14865                           fsr1h	equ	0xFE2
 14866                           fsr1l	equ	0xFE1
 14867                           indf2	equ	0xFDF
 14868                           postinc2	equ	0xFDE
 14869                           postdec2	equ	0xFDD
 14870                           fsr2h	equ	0xFDA
 14871                           fsr2l	equ	0xFD9
 14872                           status	equ	0xFD8
 14873                           
 14874 ;; *************** function _LCD_Set_Pos *****************
 14875 ;; Defined at:
 14876 ;;		line 48 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;  x               1    wreg     unsigned char 
 14879 ;;  y               1   31[COMRAM] unsigned char 
 14880 ;; Auto vars:     Size  Location     Type
 14881 ;;  x               1   32[COMRAM] unsigned char 
 14882 ;; Return value:  Size  Location     Type
 14883 ;;                  1    wreg      void 
 14884 ;; Registers used:
 14885 ;;		wreg, status,2, status,0, cstack
 14886 ;; Tracked objects:
 14887 ;;		On entry : 0/0
 14888 ;;		On exit  : 0/0
 14889 ;;		Unchanged: 0/0
 14890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 14891 ;;      Params:         1       0       0       0
 14892 ;;      Locals:         1       0       0       0
 14893 ;;      Temps:          0       0       0       0
 14894 ;;      Totals:         2       0       0       0
 14895 ;;Total ram usage:        2 bytes
 14896 ;; Hardware stack levels used:    1
 14897 ;; Hardware stack levels required when called:    6
 14898 ;; This function calls:
 14899 ;;		_LCD_WrCmd
 14900 ;; This function is called by:
 14901 ;;		_LCD_INIT
 14902 ;;		_show6x8
 14903 ;;		_LCD_P8x16Str
 14904 ;;		_LCD_P8x16Sp
 14905 ;;		_LCD_HZ
 14906 ;;		_OLED_DrawBMP
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           
 14910                           	psect	text55
 14911  002F84                     __ptext55:
 14912                           	opt stack 0
 14913  002F84                     _LCD_Set_Pos:
 14914                           	opt stack 22
 14915                           
 14916                           ;incstack = 0
 14917                           ;LCD_Set_Pos@x stored from wreg
 14918  002F84  6E21               	movwf	LCD_Set_Pos@x,c
 14919                           
 14920                           ;LCD.c: 50: LCD_WrCmd(0xb0+y);
 14921  002F86  5020               	movf	LCD_Set_Pos@y,w,c
 14922  002F88  0FB0               	addlw	176
 14923  002F8A  EC36  F018         	call	_LCD_WrCmd
 14924                           
 14925                           ;LCD.c: 51: LCD_WrCmd(((x&0xf0)>>4)|0x10);
 14926  002F8E  3821               	swapf	LCD_Set_Pos@x,w,c
 14927  002F90  0B0F               	andlw	15
 14928  002F92  0910               	iorlw	16
 14929  002F94  EC36  F018         	call	_LCD_WrCmd
 14930                           
 14931                           ;LCD.c: 52: LCD_WrCmd((x&0x0f)|0x00);
 14932  002F98  5021               	movf	LCD_Set_Pos@x,w,c
 14933  002F9A  0B0F               	andlw	15
 14934  002F9C  EF36  F018         	goto	_LCD_WrCmd
 14935  002FA0                     __end_of_LCD_Set_Pos:
 14936                           	opt stack 0
 14937                           tblptru	equ	0xFF8
 14938                           tblptrh	equ	0xFF7
 14939                           tblptrl	equ	0xFF6
 14940                           tablat	equ	0xFF5
 14941                           prodh	equ	0xFF4
 14942                           prodl	equ	0xFF3
 14943                           intcon	equ	0xFF2
 14944                           postinc0	equ	0xFEE
 14945                           wreg	equ	0xFE8
 14946                           indf1	equ	0xFE7
 14947                           postinc1	equ	0xFE6
 14948                           postdec1	equ	0xFE5
 14949                           fsr1h	equ	0xFE2
 14950                           fsr1l	equ	0xFE1
 14951                           indf2	equ	0xFDF
 14952                           postinc2	equ	0xFDE
 14953                           postdec2	equ	0xFDD
 14954                           fsr2h	equ	0xFDA
 14955                           fsr2l	equ	0xFD9
 14956                           status	equ	0xFD8
 14957                           
 14958 ;; *************** function _LCD_WrCmd *****************
 14959 ;; Defined at:
 14960 ;;		line 40 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/LCD.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  cmd             1    wreg     unsigned char 
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;  cmd             1   30[COMRAM] unsigned char 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1    wreg      void 
 14967 ;; Registers used:
 14968 ;;		wreg, status,2, cstack
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 14974 ;;      Params:         0       0       0       0
 14975 ;;      Locals:         1       0       0       0
 14976 ;;      Temps:          0       0       0       0
 14977 ;;      Totals:         1       0       0       0
 14978 ;;Total ram usage:        1 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; Hardware stack levels required when called:    5
 14981 ;; This function calls:
 14982 ;;		_write_spi
 14983 ;; This function is called by:
 14984 ;;		_LCD_Set_Pos
 14985 ;;		_LCD_CLS
 14986 ;;		_LCD_INIT
 14987 ;; This function uses a non-reentrant model
 14988 ;;
 14989                           
 14990                           	psect	text56
 14991  00306C                     __ptext56:
 14992                           	opt stack 0
 14993  00306C                     _LCD_WrCmd:
 14994                           	opt stack 22
 14995                           
 14996                           ;incstack = 0
 14997                           ;LCD_WrCmd@cmd stored from wreg
 14998  00306C  6E1F               	movwf	LCD_WrCmd@cmd,c
 14999                           
 15000                           ;LCD.c: 42: RD2=0;
 15001  00306E  9483               	bcf	3971,2,c	;volatile
 15002                           
 15003                           ;LCD.c: 43: RD0=0;
 15004  003070  9083               	bcf	3971,0,c	;volatile
 15005                           
 15006                           ;LCD.c: 44: RC5=0;
 15007  003072  9A82               	bcf	3970,5,c	;volatile
 15008                           
 15009                           ;LCD.c: 45: write_spi(cmd);
 15010  003074  501F               	movf	LCD_WrCmd@cmd,w,c
 15011  003076  EC6D  F018         	call	_write_spi
 15012                           
 15013                           ;LCD.c: 46: RD2=1;
 15014  00307A  8483               	bsf	3971,2,c	;volatile
 15015  00307C  0012               	return		;funcret
 15016  00307E                     __end_of_LCD_WrCmd:
 15017                           	opt stack 0
 15018                           tblptru	equ	0xFF8
 15019                           tblptrh	equ	0xFF7
 15020                           tblptrl	equ	0xFF6
 15021                           tablat	equ	0xFF5
 15022                           prodh	equ	0xFF4
 15023                           prodl	equ	0xFF3
 15024                           intcon	equ	0xFF2
 15025                           postinc0	equ	0xFEE
 15026                           wreg	equ	0xFE8
 15027                           indf1	equ	0xFE7
 15028                           postinc1	equ	0xFE6
 15029                           postdec1	equ	0xFE5
 15030                           fsr1h	equ	0xFE2
 15031                           fsr1l	equ	0xFE1
 15032                           indf2	equ	0xFDF
 15033                           postinc2	equ	0xFDE
 15034                           postdec2	equ	0xFDD
 15035                           fsr2h	equ	0xFDA
 15036                           fsr2l	equ	0xFD9
 15037                           status	equ	0xFD8
 15038                           
 15039 ;; *************** function _DataClean *****************
 15040 ;; Defined at:
 15041 ;;		line 55 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
 15042 ;; Parameters:    Size  Location     Type
 15043 ;;  b_add           2   37[COMRAM] unsigned int 
 15044 ;;  e_add           2   39[COMRAM] unsigned int 
 15045 ;; Auto vars:     Size  Location     Type
 15046 ;;  i               2   43[COMRAM] unsigned int 
 15047 ;; Return value:  Size  Location     Type
 15048 ;;                  1    wreg      void 
 15049 ;; Registers used:
 15050 ;;		wreg, status,2, status,0, cstack
 15051 ;; Tracked objects:
 15052 ;;		On entry : F/0
 15053 ;;		On exit  : 0/0
 15054 ;;		Unchanged: 0/0
 15055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15056 ;;      Params:         4       0       0       0
 15057 ;;      Locals:         2       0       0       0
 15058 ;;      Temps:          2       0       0       0
 15059 ;;      Totals:         8       0       0       0
 15060 ;;Total ram usage:        8 bytes
 15061 ;; Hardware stack levels used:    1
 15062 ;; Hardware stack levels required when called:    6
 15063 ;; This function calls:
 15064 ;;		_write_F
 15065 ;; This function is called by:
 15066 ;;		_main
 15067 ;; This function uses a non-reentrant model
 15068 ;;
 15069                           
 15070                           	psect	text57
 15071  002CC8                     __ptext57:
 15072                           	opt stack 0
 15073  002CC8                     _DataClean:
 15074                           	opt stack 24
 15075                           
 15076                           ; BSR set to: 0
 15077                           ;FRAM.c: 57: unsigned int i=0;
 15078                           
 15079                           ;incstack = 0
 15080  002CC8  6A2C               	clrf	DataClean@i,c
 15081  002CCA  6A2D               	clrf	DataClean@i+1,c
 15082                           
 15083                           ;FRAM.c: 58: for(i=b_add;i<e_add+1;i++)
 15084  002CCC  C026  F02C         	movff	DataClean@b_add,DataClean@i
 15085  002CD0  C027  F02D         	movff	DataClean@b_add+1,DataClean@i+1
 15086  002CD4  D009               	goto	l4742
 15087  002CD6                     l4738:
 15088                           
 15089                           ;FRAM.c: 59: {
 15090                           ;FRAM.c: 60: write_F(0x00,i);
 15091  002CD6  C02C  F021         	movff	DataClean@i,write_F@address
 15092  002CDA  C02D  F022         	movff	DataClean@i+1,write_F@address+1
 15093  002CDE  0E00               	movlw	0
 15094  002CE0  EC66  F015         	call	_write_F
 15095  002CE4  4A2C               	infsnz	DataClean@i,f,c
 15096  002CE6  2A2D               	incf	DataClean@i+1,f,c
 15097  002CE8                     l4742:
 15098  002CE8  2828               	incf	DataClean@e_add,w,c
 15099  002CEA  6E2A               	movwf	??_DataClean& (0+255),c
 15100  002CEC  0E00               	movlw	0
 15101  002CEE  2029               	addwfc	DataClean@e_add+1,w,c
 15102  002CF0  6E2B               	movwf	(??_DataClean+1)& (0+255),c
 15103  002CF2  502A               	movf	??_DataClean,w,c
 15104  002CF4  5C2C               	subwf	DataClean@i,w,c
 15105  002CF6  502B               	movf	??_DataClean+1,w,c
 15106  002CF8  582D               	subwfb	DataClean@i+1,w,c
 15107  002CFA  E3ED               	bnc	l4738
 15108  002CFC  0012               	return		;funcret
 15109  002CFE                     __end_of_DataClean:
 15110                           	opt stack 0
 15111                           tblptru	equ	0xFF8
 15112                           tblptrh	equ	0xFF7
 15113                           tblptrl	equ	0xFF6
 15114                           tablat	equ	0xFF5
 15115                           prodh	equ	0xFF4
 15116                           prodl	equ	0xFF3
 15117                           intcon	equ	0xFF2
 15118                           postinc0	equ	0xFEE
 15119                           wreg	equ	0xFE8
 15120                           indf1	equ	0xFE7
 15121                           postinc1	equ	0xFE6
 15122                           postdec1	equ	0xFE5
 15123                           fsr1h	equ	0xFE2
 15124                           fsr1l	equ	0xFE1
 15125                           indf2	equ	0xFDF
 15126                           postinc2	equ	0xFDE
 15127                           postdec2	equ	0xFDD
 15128                           fsr2h	equ	0xFDA
 15129                           fsr2l	equ	0xFD9
 15130                           status	equ	0xFD8
 15131                           
 15132 ;; *************** function _write_F *****************
 15133 ;; Defined at:
 15134 ;;		line 20 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;  t               1    wreg     unsigned char 
 15137 ;;  address         2   32[COMRAM] unsigned int 
 15138 ;; Auto vars:     Size  Location     Type
 15139 ;;  t               1   34[COMRAM] unsigned char 
 15140 ;;  H               1   36[COMRAM] unsigned char 
 15141 ;;  L               1   35[COMRAM] unsigned char 
 15142 ;; Return value:  Size  Location     Type
 15143 ;;                  1    wreg      void 
 15144 ;; Registers used:
 15145 ;;		wreg, status,2, status,0, cstack
 15146 ;; Tracked objects:
 15147 ;;		On entry : 0/0
 15148 ;;		On exit  : 0/0
 15149 ;;		Unchanged: 0/0
 15150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15151 ;;      Params:         2       0       0       0
 15152 ;;      Locals:         3       0       0       0
 15153 ;;      Temps:          0       0       0       0
 15154 ;;      Totals:         5       0       0       0
 15155 ;;Total ram usage:        5 bytes
 15156 ;; Hardware stack levels used:    1
 15157 ;; Hardware stack levels required when called:    5
 15158 ;; This function calls:
 15159 ;;		_delay
 15160 ;;		_write_spi
 15161 ;; This function is called by:
 15162 ;;		_DataClean
 15163 ;;		_Fill_Data
 15164 ;;		_main
 15165 ;;		_SetDefaultPara
 15166 ;; This function uses a non-reentrant model
 15167 ;;
 15168                           
 15169                           	psect	text58
 15170  002ACC                     __ptext58:
 15171                           	opt stack 0
 15172  002ACC                     _write_F:
 15173                           	opt stack 25
 15174                           
 15175                           ;incstack = 0
 15176                           ;write_F@t stored from wreg
 15177  002ACC  6E23               	movwf	write_F@t,c
 15178                           
 15179                           ;FRAM.c: 22: unsigned char L=0x00;
 15180  002ACE  6A24               	clrf	write_F@L,c
 15181                           
 15182                           ;FRAM.c: 23: unsigned char H=0x00;
 15183  002AD0  6A25               	clrf	write_F@H,c
 15184                           
 15185                           ;FRAM.c: 24: H = (unsigned char)(address>> 8);
 15186  002AD2  C022  F025         	movff	write_F@address+1,write_F@H
 15187                           
 15188                           ;FRAM.c: 25: L = (unsigned char)(address & 0x00ff);
 15189  002AD6  C021  F024         	movff	write_F@address,write_F@L
 15190                           
 15191                           ;FRAM.c: 26: RD3=0;
 15192  002ADA  9683               	bcf	3971,3,c	;volatile
 15193                           
 15194                           ;FRAM.c: 27: write_spi(0x06);
 15195  002ADC  0E06               	movlw	6
 15196  002ADE  EC6D  F018         	call	_write_spi
 15197                           
 15198                           ;FRAM.c: 28: delay(100);
 15199  002AE2  6A1F               	clrf	delay@t+1,c
 15200  002AE4  0E64               	movlw	100
 15201  002AE6  6E1E               	movwf	delay@t,c
 15202  002AE8  EC47  F018         	call	_delay	;wreg free
 15203                           
 15204                           ;FRAM.c: 29: RD3=1;
 15205  002AEC  8683               	bsf	3971,3,c	;volatile
 15206                           
 15207                           ;FRAM.c: 30: delay(100);
 15208  002AEE  6A1F               	clrf	delay@t+1,c
 15209  002AF0  0E64               	movlw	100
 15210  002AF2  6E1E               	movwf	delay@t,c
 15211  002AF4  EC47  F018         	call	_delay	;wreg free
 15212                           
 15213                           ;FRAM.c: 31: RD3=0;
 15214  002AF8  9683               	bcf	3971,3,c	;volatile
 15215                           
 15216                           ;FRAM.c: 32: write_spi(0x02);
 15217  002AFA  0E02               	movlw	2
 15218  002AFC  EC6D  F018         	call	_write_spi
 15219                           
 15220                           ;FRAM.c: 33: write_spi(H);
 15221  002B00  5025               	movf	write_F@H,w,c
 15222  002B02  EC6D  F018         	call	_write_spi
 15223                           
 15224                           ;FRAM.c: 34: write_spi(L);
 15225  002B06  5024               	movf	write_F@L,w,c
 15226  002B08  EC6D  F018         	call	_write_spi
 15227                           
 15228                           ;FRAM.c: 35: write_spi(t);
 15229  002B0C  5023               	movf	write_F@t,w,c
 15230  002B0E  EC6D  F018         	call	_write_spi
 15231                           
 15232                           ;FRAM.c: 36: RD3=1;
 15233  002B12  8683               	bsf	3971,3,c	;volatile
 15234  002B14  0012               	return		;funcret
 15235  002B16                     __end_of_write_F:
 15236                           	opt stack 0
 15237                           tblptru	equ	0xFF8
 15238                           tblptrh	equ	0xFF7
 15239                           tblptrl	equ	0xFF6
 15240                           tablat	equ	0xFF5
 15241                           prodh	equ	0xFF4
 15242                           prodl	equ	0xFF3
 15243                           intcon	equ	0xFF2
 15244                           postinc0	equ	0xFEE
 15245                           wreg	equ	0xFE8
 15246                           indf1	equ	0xFE7
 15247                           postinc1	equ	0xFE6
 15248                           postdec1	equ	0xFE5
 15249                           fsr1h	equ	0xFE2
 15250                           fsr1l	equ	0xFE1
 15251                           indf2	equ	0xFDF
 15252                           postinc2	equ	0xFDE
 15253                           postdec2	equ	0xFDD
 15254                           fsr2h	equ	0xFDA
 15255                           fsr2l	equ	0xFD9
 15256                           status	equ	0xFD8
 15257                           
 15258 ;; *************** function _write_spi *****************
 15259 ;; Defined at:
 15260 ;;		line 12 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/SPI.c"
 15261 ;; Parameters:    Size  Location     Type
 15262 ;;  data            1    wreg     unsigned char 
 15263 ;; Auto vars:     Size  Location     Type
 15264 ;;  data            1   29[COMRAM] unsigned char 
 15265 ;; Return value:  Size  Location     Type
 15266 ;;                  1    wreg      void 
 15267 ;; Registers used:
 15268 ;;		wreg
 15269 ;; Tracked objects:
 15270 ;;		On entry : 0/0
 15271 ;;		On exit  : 0/0
 15272 ;;		Unchanged: 0/0
 15273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15274 ;;      Params:         0       0       0       0
 15275 ;;      Locals:         1       0       0       0
 15276 ;;      Temps:          0       0       0       0
 15277 ;;      Totals:         1       0       0       0
 15278 ;;Total ram usage:        1 bytes
 15279 ;; Hardware stack levels used:    1
 15280 ;; Hardware stack levels required when called:    4
 15281 ;; This function calls:
 15282 ;;		Nothing
 15283 ;; This function is called by:
 15284 ;;		_write_F
 15285 ;;		_read_F
 15286 ;;		_LCD_WrDat
 15287 ;;		_LCD_WrCmd
 15288 ;; This function uses a non-reentrant model
 15289 ;;
 15290                           
 15291                           	psect	text59
 15292  0030DA                     __ptext59:
 15293                           	opt stack 0
 15294  0030DA                     _write_spi:
 15295                           	opt stack 25
 15296                           
 15297                           ;incstack = 0
 15298                           ;write_spi@data stored from wreg
 15299  0030DA  6E1E               	movwf	write_spi@data,c
 15300                           
 15301                           ;SPI.c: 14: SSPBUF=data;
 15302  0030DC  C01E  FFC9         	movff	write_spi@data,4041	;volatile
 15303  0030E0                     l452:
 15304  0030E0  A69E               	btfss	3998,3,c	;volatile
 15305  0030E2  D7FE               	goto	l452
 15306                           
 15307                           ;SPI.c: 16: SSPIF=0;
 15308  0030E4  969E               	bcf	3998,3,c	;volatile
 15309  0030E6  0012               	return		;funcret
 15310  0030E8                     __end_of_write_spi:
 15311                           	opt stack 0
 15312                           tblptru	equ	0xFF8
 15313                           tblptrh	equ	0xFF7
 15314                           tblptrl	equ	0xFF6
 15315                           tablat	equ	0xFF5
 15316                           prodh	equ	0xFF4
 15317                           prodl	equ	0xFF3
 15318                           intcon	equ	0xFF2
 15319                           postinc0	equ	0xFEE
 15320                           wreg	equ	0xFE8
 15321                           indf1	equ	0xFE7
 15322                           postinc1	equ	0xFE6
 15323                           postdec1	equ	0xFE5
 15324                           fsr1h	equ	0xFE2
 15325                           fsr1l	equ	0xFE1
 15326                           indf2	equ	0xFDF
 15327                           postinc2	equ	0xFDE
 15328                           postdec2	equ	0xFDD
 15329                           fsr2h	equ	0xFDA
 15330                           fsr2l	equ	0xFD9
 15331                           status	equ	0xFD8
 15332                           
 15333 ;; *************** function _delay *****************
 15334 ;; Defined at:
 15335 ;;		line 56 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/motor.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;  t               2   29[COMRAM] unsigned int 
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;		None
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  1    wreg      void 
 15342 ;; Registers used:
 15343 ;;		wreg, status,2, status,0
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15349 ;;      Params:         2       0       0       0
 15350 ;;      Locals:         0       0       0       0
 15351 ;;      Temps:          0       0       0       0
 15352 ;;      Totals:         2       0       0       0
 15353 ;;Total ram usage:        2 bytes
 15354 ;; Hardware stack levels used:    1
 15355 ;; Hardware stack levels required when called:    4
 15356 ;; This function calls:
 15357 ;;		Nothing
 15358 ;; This function is called by:
 15359 ;;		_write_F
 15360 ;;		_LCD_INIT
 15361 ;;		_delay_n
 15362 ;;		_KeyScan
 15363 ;; This function uses a non-reentrant model
 15364 ;;
 15365                           
 15366                           	psect	text60
 15367  00308E                     __ptext60:
 15368                           	opt stack 0
 15369  00308E                     _delay:
 15370                           	opt stack 25
 15371  00308E                     l3980:
 15372  00308E  061E               	decf	delay@t,f,c
 15373  003090  A0D8               	btfss	status,0,c
 15374  003092  061F               	decf	delay@t+1,f,c
 15375  003094  281E               	incf	delay@t,w,c
 15376  003096  E1FB               	bnz	l3980
 15377  003098  281F               	incf	delay@t+1,w,c
 15378  00309A  E1F9               	bnz	l3980
 15379  00309C  0012               	return		;funcret
 15380  00309E                     __end_of_delay:
 15381                           	opt stack 0
 15382                           tblptru	equ	0xFF8
 15383                           tblptrh	equ	0xFF7
 15384                           tblptrl	equ	0xFF6
 15385                           tablat	equ	0xFF5
 15386                           prodh	equ	0xFF4
 15387                           prodl	equ	0xFF3
 15388                           intcon	equ	0xFF2
 15389                           postinc0	equ	0xFEE
 15390                           wreg	equ	0xFE8
 15391                           indf1	equ	0xFE7
 15392                           postinc1	equ	0xFE6
 15393                           postdec1	equ	0xFE5
 15394                           fsr1h	equ	0xFE2
 15395                           fsr1l	equ	0xFE1
 15396                           indf2	equ	0xFDF
 15397                           postinc2	equ	0xFDE
 15398                           postdec2	equ	0xFDD
 15399                           fsr2h	equ	0xFDA
 15400                           fsr2l	equ	0xFD9
 15401                           status	equ	0xFD8
 15402                           
 15403 ;; *************** function _DS1302_INIT *****************
 15404 ;; Defined at:
 15405 ;;		line 26 in file "DS1302.c"
 15406 ;; Parameters:    Size  Location     Type
 15407 ;;		None
 15408 ;; Auto vars:     Size  Location     Type
 15409 ;;		None
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  1    wreg      void 
 15412 ;; Registers used:
 15413 ;;		wreg, status,2, status,0, cstack
 15414 ;; Tracked objects:
 15415 ;;		On entry : 0/0
 15416 ;;		On exit  : 0/0
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15419 ;;      Params:         0       0       0       0
 15420 ;;      Locals:         0       0       0       0
 15421 ;;      Temps:          0       0       0       0
 15422 ;;      Totals:         0       0       0       0
 15423 ;;Total ram usage:        0 bytes
 15424 ;; Hardware stack levels used:    1
 15425 ;; Hardware stack levels required when called:    5
 15426 ;; This function calls:
 15427 ;;		_write_cmd
 15428 ;;		_write_data
 15429 ;; This function is called by:
 15430 ;;		_main
 15431 ;; This function uses a non-reentrant model
 15432 ;;
 15433                           
 15434                           	psect	text61
 15435  002FBA                     __ptext61:
 15436                           	opt stack 0
 15437  002FBA                     _DS1302_INIT:
 15438                           	opt stack 25
 15439                           
 15440                           ;DS1302.c: 28: TRISD4=0;TRISE2=0;
 15441                           
 15442                           ;incstack = 0
 15443  002FBA  9895               	bcf	3989,4,c	;volatile
 15444  002FBC  9496               	bcf	3990,2,c	;volatile
 15445                           
 15446                           ;DS1302.c: 29: RD4 = 0;
 15447  002FBE  9883               	bcf	3971,4,c	;volatile
 15448                           
 15449                           ;DS1302.c: 30: RE2 = 0;
 15450  002FC0  9484               	bcf	3972,2,c	;volatile
 15451                           
 15452                           ;DS1302.c: 31: RE2 = 1;
 15453  002FC2  8484               	bsf	3972,2,c	;volatile
 15454                           
 15455                           ;DS1302.c: 32: write_cmd(0x8e);
 15456  002FC4  0E8E               	movlw	142
 15457  002FC6  EC0F  F017         	call	_write_cmd
 15458                           
 15459                           ;DS1302.c: 33: write_data(0x00);
 15460  002FCA  0E00               	movlw	0
 15461  002FCC  ECF9  F016         	call	_write_data
 15462                           
 15463                           ;DS1302.c: 34: RE2 = 0;
 15464  002FD0  9484               	bcf	3972,2,c	;volatile
 15465  002FD2  0012               	return		;funcret
 15466  002FD4                     __end_of_DS1302_INIT:
 15467                           	opt stack 0
 15468                           tblptru	equ	0xFF8
 15469                           tblptrh	equ	0xFF7
 15470                           tblptrl	equ	0xFF6
 15471                           tablat	equ	0xFF5
 15472                           prodh	equ	0xFF4
 15473                           prodl	equ	0xFF3
 15474                           intcon	equ	0xFF2
 15475                           postinc0	equ	0xFEE
 15476                           wreg	equ	0xFE8
 15477                           indf1	equ	0xFE7
 15478                           postinc1	equ	0xFE6
 15479                           postdec1	equ	0xFE5
 15480                           fsr1h	equ	0xFE2
 15481                           fsr1l	equ	0xFE1
 15482                           indf2	equ	0xFDF
 15483                           postinc2	equ	0xFDE
 15484                           postdec2	equ	0xFDD
 15485                           fsr2h	equ	0xFDA
 15486                           fsr2l	equ	0xFD9
 15487                           status	equ	0xFD8
 15488                           
 15489 ;; *************** function _write_data *****************
 15490 ;; Defined at:
 15491 ;;		line 83 in file "DS1302.c"
 15492 ;; Parameters:    Size  Location     Type
 15493 ;;  data            1    wreg     unsigned char 
 15494 ;; Auto vars:     Size  Location     Type
 15495 ;;  data            1   29[COMRAM] unsigned char 
 15496 ;;  j               2   30[COMRAM] int 
 15497 ;; Return value:  Size  Location     Type
 15498 ;;                  1    wreg      void 
 15499 ;; Registers used:
 15500 ;;		wreg, status,2, status,0
 15501 ;; Tracked objects:
 15502 ;;		On entry : 0/0
 15503 ;;		On exit  : 0/0
 15504 ;;		Unchanged: 0/0
 15505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15506 ;;      Params:         0       0       0       0
 15507 ;;      Locals:         3       0       0       0
 15508 ;;      Temps:          0       0       0       0
 15509 ;;      Totals:         3       0       0       0
 15510 ;;Total ram usage:        3 bytes
 15511 ;; Hardware stack levels used:    1
 15512 ;; Hardware stack levels required when called:    4
 15513 ;; This function calls:
 15514 ;;		Nothing
 15515 ;; This function is called by:
 15516 ;;		_DS1302_INIT
 15517 ;;		_set_time
 15518 ;;		_get_time
 15519 ;; This function uses a non-reentrant model
 15520 ;;
 15521                           
 15522                           	psect	text62
 15523  002DF2                     __ptext62:
 15524                           	opt stack 0
 15525  002DF2                     _write_data:
 15526                           	opt stack 25
 15527                           
 15528                           ;incstack = 0
 15529                           ;write_data@data stored from wreg
 15530  002DF2  6E1E               	movwf	write_data@data,c
 15531                           
 15532                           ;DS1302.c: 85: TRISE0 = 0;
 15533  002DF4  9096               	bcf	3990,0,c	;volatile
 15534                           
 15535                           ;DS1302.c: 86: int j;
 15536                           ;DS1302.c: 87: for(j=0;j<8;j++)
 15537  002DF6  6A1F               	clrf	write_data@j,c
 15538  002DF8  6A20               	clrf	write_data@j+1,c
 15539  002DFA                     l904:
 15540                           
 15541                           ;DS1302.c: 88: {
 15542                           ;DS1302.c: 89: RE0=0;
 15543  002DFA  9084               	bcf	3972,0,c	;volatile
 15544                           
 15545                           ;DS1302.c: 90: RD4=0;
 15546  002DFC  9883               	bcf	3971,4,c	;volatile
 15547                           
 15548                           ;DS1302.c: 91: if(data&0x01)
 15549  002DFE  B01E               	btfsc	write_data@data,0,c
 15550                           
 15551                           ;DS1302.c: 92: {
 15552                           ;DS1302.c: 93: RE0=1;
 15553  002E00  8084               	bsf	3972,0,c	;volatile
 15554                           
 15555                           ;DS1302.c: 94: }
 15556                           ;DS1302.c: 95: data=data>>1;
 15557  002E02  90D8               	bcf	status,0,c
 15558  002E04  321E               	rrcf	write_data@data,f,c
 15559                           
 15560                           ;DS1302.c: 96: RD4=1;
 15561  002E06  8883               	bsf	3971,4,c	;volatile
 15562  002E08  4A1F               	infsnz	write_data@j,f,c
 15563  002E0A  2A20               	incf	write_data@j+1,f,c
 15564  002E0C  BE20               	btfsc	write_data@j+1,7,c
 15565  002E0E  D7F5               	goto	l904
 15566  002E10  5020               	movf	write_data@j+1,w,c
 15567  002E12  E103               	bnz	u3130
 15568  002E14  0E08               	movlw	8
 15569  002E16  5C1F               	subwf	write_data@j,w,c
 15570  002E18  E3F0               	bnc	l904
 15571  002E1A                     u3130:
 15572                           
 15573                           ;DS1302.c: 97: }
 15574                           ;DS1302.c: 98: RD4=0;
 15575  002E1A  9883               	bcf	3971,4,c	;volatile
 15576  002E1C  0012               	return		;funcret
 15577  002E1E                     __end_of_write_data:
 15578                           	opt stack 0
 15579                           tblptru	equ	0xFF8
 15580                           tblptrh	equ	0xFF7
 15581                           tblptrl	equ	0xFF6
 15582                           tablat	equ	0xFF5
 15583                           prodh	equ	0xFF4
 15584                           prodl	equ	0xFF3
 15585                           intcon	equ	0xFF2
 15586                           postinc0	equ	0xFEE
 15587                           wreg	equ	0xFE8
 15588                           indf1	equ	0xFE7
 15589                           postinc1	equ	0xFE6
 15590                           postdec1	equ	0xFE5
 15591                           fsr1h	equ	0xFE2
 15592                           fsr1l	equ	0xFE1
 15593                           indf2	equ	0xFDF
 15594                           postinc2	equ	0xFDE
 15595                           postdec2	equ	0xFDD
 15596                           fsr2h	equ	0xFDA
 15597                           fsr2l	equ	0xFD9
 15598                           status	equ	0xFD8
 15599                           
 15600 ;; *************** function _write_cmd *****************
 15601 ;; Defined at:
 15602 ;;		line 60 in file "DS1302.c"
 15603 ;; Parameters:    Size  Location     Type
 15604 ;;  cmd             1    wreg     unsigned char 
 15605 ;; Auto vars:     Size  Location     Type
 15606 ;;  cmd             1   29[COMRAM] unsigned char 
 15607 ;;  j               2   30[COMRAM] int 
 15608 ;; Return value:  Size  Location     Type
 15609 ;;                  1    wreg      void 
 15610 ;; Registers used:
 15611 ;;		wreg, status,2, status,0
 15612 ;; Tracked objects:
 15613 ;;		On entry : 0/0
 15614 ;;		On exit  : 0/0
 15615 ;;		Unchanged: 0/0
 15616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15617 ;;      Params:         0       0       0       0
 15618 ;;      Locals:         3       0       0       0
 15619 ;;      Temps:          0       0       0       0
 15620 ;;      Totals:         3       0       0       0
 15621 ;;Total ram usage:        3 bytes
 15622 ;; Hardware stack levels used:    1
 15623 ;; Hardware stack levels required when called:    4
 15624 ;; This function calls:
 15625 ;;		Nothing
 15626 ;; This function is called by:
 15627 ;;		_DS1302_INIT
 15628 ;;		_set_time
 15629 ;;		_get_time
 15630 ;; This function uses a non-reentrant model
 15631 ;;
 15632                           
 15633                           	psect	text63
 15634  002E1E                     __ptext63:
 15635                           	opt stack 0
 15636  002E1E                     _write_cmd:
 15637                           	opt stack 25
 15638                           
 15639                           ;incstack = 0
 15640                           ;write_cmd@cmd stored from wreg
 15641  002E1E  6E1E               	movwf	write_cmd@cmd,c
 15642                           
 15643                           ;DS1302.c: 62: TRISE0 = 0;
 15644  002E20  9096               	bcf	3990,0,c	;volatile
 15645                           
 15646                           ;DS1302.c: 63: int j;
 15647                           ;DS1302.c: 64: for(j=0;j<8;j++)
 15648  002E22  6A1F               	clrf	write_cmd@j,c
 15649  002E24  6A20               	clrf	write_cmd@j+1,c
 15650  002E26                     l898:
 15651                           
 15652                           ;DS1302.c: 65: {
 15653                           ;DS1302.c: 66: RE0=0;
 15654  002E26  9084               	bcf	3972,0,c	;volatile
 15655                           
 15656                           ;DS1302.c: 67: RD4=0;
 15657  002E28  9883               	bcf	3971,4,c	;volatile
 15658                           
 15659                           ;DS1302.c: 68: if(cmd&0x01)
 15660  002E2A  B01E               	btfsc	write_cmd@cmd,0,c
 15661                           
 15662                           ;DS1302.c: 69: {
 15663                           ;DS1302.c: 70: RE0=1;
 15664  002E2C  8084               	bsf	3972,0,c	;volatile
 15665                           
 15666                           ;DS1302.c: 71: }
 15667                           ;DS1302.c: 72: cmd=cmd>>1;
 15668  002E2E  90D8               	bcf	status,0,c
 15669  002E30  321E               	rrcf	write_cmd@cmd,f,c
 15670                           
 15671                           ;DS1302.c: 73: RD4=1;
 15672  002E32  8883               	bsf	3971,4,c	;volatile
 15673  002E34  4A1F               	infsnz	write_cmd@j,f,c
 15674  002E36  2A20               	incf	write_cmd@j+1,f,c
 15675  002E38  BE20               	btfsc	write_cmd@j+1,7,c
 15676  002E3A  D7F5               	goto	l898
 15677  002E3C  5020               	movf	write_cmd@j+1,w,c
 15678  002E3E  E103               	bnz	u3110
 15679  002E40  0E08               	movlw	8
 15680  002E42  5C1F               	subwf	write_cmd@j,w,c
 15681  002E44  E3F0               	bnc	l898
 15682  002E46                     u3110:
 15683                           
 15684                           ;DS1302.c: 74: }
 15685                           ;DS1302.c: 75: RD4=0;;
 15686  002E46  9883               	bcf	3971,4,c	;volatile
 15687  002E48  0012               	return		;funcret
 15688  002E4A                     __end_of_write_cmd:
 15689                           	opt stack 0
 15690                           tblptru	equ	0xFF8
 15691                           tblptrh	equ	0xFF7
 15692                           tblptrl	equ	0xFF6
 15693                           tablat	equ	0xFF5
 15694                           prodh	equ	0xFF4
 15695                           prodl	equ	0xFF3
 15696                           intcon	equ	0xFF2
 15697                           postinc0	equ	0xFEE
 15698                           wreg	equ	0xFE8
 15699                           indf1	equ	0xFE7
 15700                           postinc1	equ	0xFE6
 15701                           postdec1	equ	0xFE5
 15702                           fsr1h	equ	0xFE2
 15703                           fsr1l	equ	0xFE1
 15704                           indf2	equ	0xFDF
 15705                           postinc2	equ	0xFDE
 15706                           postdec2	equ	0xFDD
 15707                           fsr2h	equ	0xFDA
 15708                           fsr2l	equ	0xFD9
 15709                           status	equ	0xFD8
 15710                           
 15711 ;; *************** function _CAP_INIT *****************
 15712 ;; Defined at:
 15713 ;;		line 29 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/PWM.c"
 15714 ;; Parameters:    Size  Location     Type
 15715 ;;		None
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;		None
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  1    wreg      void 
 15720 ;; Registers used:
 15721 ;;		wreg, status,2, status,0
 15722 ;; Tracked objects:
 15723 ;;		On entry : 0/0
 15724 ;;		On exit  : 0/0
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15727 ;;      Params:         0       0       0       0
 15728 ;;      Locals:         0       0       0       0
 15729 ;;      Temps:          0       0       0       0
 15730 ;;      Totals:         0       0       0       0
 15731 ;;Total ram usage:        0 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; Hardware stack levels required when called:    4
 15734 ;; This function calls:
 15735 ;;		Nothing
 15736 ;; This function is called by:
 15737 ;;		_main
 15738 ;; This function uses a non-reentrant model
 15739 ;;
 15740                           
 15741                           	psect	text64
 15742  002EA0                     __ptext64:
 15743                           	opt stack 0
 15744  002EA0                     _CAP_INIT:
 15745                           	opt stack 26
 15746                           
 15747                           ;PWM.c: 31: TRISA2=1;TRISA3=1;TRISA4=1;
 15748                           
 15749                           ;incstack = 0
 15750  002EA0  8492               	bsf	3986,2,c	;volatile
 15751  002EA2  8692               	bsf	3986,3,c	;volatile
 15752  002EA4  8892               	bsf	3986,4,c	;volatile
 15753                           
 15754                           ;PWM.c: 32: ANSEL0 &= 0xe3;
 15755  002EA6  0EE3               	movlw	227
 15756  002EA8  16B8               	andwf	4024,f,c	;volatile
 15757                           
 15758                           ;PWM.c: 33: T5CON=0xdd;
 15759  002EAA  0EDD               	movlw	221
 15760  002EAC  6EB7               	movwf	4023,c	;volatile
 15761                           
 15762                           ;PWM.c: 34: TMR5IF=0;
 15763  002EAE  90A4               	bcf	4004,0,c	;volatile
 15764                           
 15765                           ;PWM.c: 35: TMR5IE=1;
 15766  002EB0  80A3               	bsf	4003,0,c	;volatile
 15767                           
 15768                           ;PWM.c: 36: IC1IE=1;
 15769  002EB2  82A3               	bsf	4003,1,c	;volatile
 15770                           
 15771                           ;PWM.c: 37: IC2QEIE=1;
 15772  002EB4  84A3               	bsf	4003,2,c	;volatile
 15773                           
 15774                           ;PWM.c: 38: IC3DRIE=1;
 15775  002EB6  86A3               	bsf	4003,3,c	;volatile
 15776                           
 15777                           ;PWM.c: 39: IC1IF=0;
 15778  002EB8  92A4               	bcf	4004,1,c	;volatile
 15779                           
 15780                           ;PWM.c: 40: IC2QEIF=0;
 15781  002EBA  94A4               	bcf	4004,2,c	;volatile
 15782                           
 15783                           ;PWM.c: 41: IC3DRIF=0;
 15784  002EBC  96A4               	bcf	4004,3,c	;volatile
 15785                           
 15786                           ;PWM.c: 42: CAP1CON=0x48;
 15787  002EBE  0E48               	movlw	72
 15788  002EC0  6E63               	movwf	3939,c	;volatile
 15789                           
 15790                           ;PWM.c: 43: CAP2CON=0x48;
 15791  002EC2  6E62               	movwf	3938,c	;volatile
 15792                           
 15793                           ;PWM.c: 44: CAP3CON=0x48;
 15794  002EC4  6E61               	movwf	3937,c	;volatile
 15795                           
 15796                           ;PWM.c: 45: RESEN=0;
 15797  002EC6  9CB7               	bcf	4023,6,c	;volatile
 15798  002EC8  0C48               	retlw	72	;funcret
 15799  002ECA                     __end_of_CAP_INIT:
 15800                           	opt stack 0
 15801                           tblptru	equ	0xFF8
 15802                           tblptrh	equ	0xFF7
 15803                           tblptrl	equ	0xFF6
 15804                           tablat	equ	0xFF5
 15805                           prodh	equ	0xFF4
 15806                           prodl	equ	0xFF3
 15807                           intcon	equ	0xFF2
 15808                           postinc0	equ	0xFEE
 15809                           wreg	equ	0xFE8
 15810                           indf1	equ	0xFE7
 15811                           postinc1	equ	0xFE6
 15812                           postdec1	equ	0xFE5
 15813                           fsr1h	equ	0xFE2
 15814                           fsr1l	equ	0xFE1
 15815                           indf2	equ	0xFDF
 15816                           postinc2	equ	0xFDE
 15817                           postdec2	equ	0xFDD
 15818                           fsr2h	equ	0xFDA
 15819                           fsr2l	equ	0xFD9
 15820                           status	equ	0xFD8
 15821                           
 15822 ;; *************** function _AD_INIT *****************
 15823 ;; Defined at:
 15824 ;;		line 10 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/AD.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;		None
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;		None
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      void 
 15831 ;; Registers used:
 15832 ;;		wreg, status,2
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15838 ;;      Params:         0       0       0       0
 15839 ;;      Locals:         0       0       0       0
 15840 ;;      Temps:          0       0       0       0
 15841 ;;      Totals:         0       0       0       0
 15842 ;;Total ram usage:        0 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:    4
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_main
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text65
 15853  002FEE                     __ptext65:
 15854                           	opt stack 0
 15855  002FEE                     _AD_INIT:
 15856                           	opt stack 26
 15857                           
 15858                           ;AD.c: 12: TRISA0=1;
 15859                           
 15860                           ;incstack = 0
 15861  002FEE  8092               	bsf	3986,0,c	;volatile
 15862                           
 15863                           ;AD.c: 13: TRISA1=1;
 15864  002FF0  8292               	bsf	3986,1,c	;volatile
 15865                           
 15866                           ;AD.c: 15: ADCON0=0x38;
 15867  002FF2  0E38               	movlw	56
 15868  002FF4  6EC2               	movwf	4034,c	;volatile
 15869                           
 15870                           ;AD.c: 16: ADCON1=0x18;
 15871  002FF6  0E18               	movlw	24
 15872  002FF8  6EC1               	movwf	4033,c	;volatile
 15873                           
 15874                           ;AD.c: 17: ADCON2=0xc0;
 15875  002FFA  0EC0               	movlw	192
 15876  002FFC  6EC0               	movwf	4032,c	;volatile
 15877                           
 15878                           ;AD.c: 23: ADIF=0;
 15879  002FFE  9C9E               	bcf	3998,6,c	;volatile
 15880                           
 15881                           ;AD.c: 24: ADON=1;
 15882  003000  80C2               	bsf	4034,0,c	;volatile
 15883                           
 15884                           ;AD.c: 26: GODONE=1;
 15885  003002  82C2               	bsf	4034,1,c	;volatile
 15886  003004  0CC0               	retlw	192	;funcret
 15887  003006                     __end_of_AD_INIT:
 15888                           	opt stack 0
 15889                           tblptru	equ	0xFF8
 15890                           tblptrh	equ	0xFF7
 15891                           tblptrl	equ	0xFF6
 15892                           tablat	equ	0xFF5
 15893                           prodh	equ	0xFF4
 15894                           prodl	equ	0xFF3
 15895                           intcon	equ	0xFF2
 15896                           postinc0	equ	0xFEE
 15897                           wreg	equ	0xFE8
 15898                           indf1	equ	0xFE7
 15899                           postinc1	equ	0xFE6
 15900                           postdec1	equ	0xFE5
 15901                           fsr1h	equ	0xFE2
 15902                           fsr1l	equ	0xFE1
 15903                           indf2	equ	0xFDF
 15904                           postinc2	equ	0xFDE
 15905                           postdec2	equ	0xFDD
 15906                           fsr2h	equ	0xFDA
 15907                           fsr2l	equ	0xFD9
 15908                           status	equ	0xFD8
 15909                           
 15910 ;; *************** function _ISR *****************
 15911 ;; Defined at:
 15912 ;;		line 503 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/main.c"
 15913 ;; Parameters:    Size  Location     Type
 15914 ;;		None
 15915 ;; Auto vars:     Size  Location     Type
 15916 ;;  i               2   27[COMRAM] int 
 15917 ;;  change          1   26[COMRAM] unsigned char 
 15918 ;; Return value:  Size  Location     Type
 15919 ;;                  1    wreg      void 
 15920 ;; Registers used:
 15921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15922 ;; Tracked objects:
 15923 ;;		On entry : 0/0
 15924 ;;		On exit  : 0/0
 15925 ;;		Unchanged: 0/0
 15926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 15927 ;;      Params:         0       0       0       0
 15928 ;;      Locals:         3       0       0       0
 15929 ;;      Temps:         11       0       0       0
 15930 ;;      Totals:        14       0       0       0
 15931 ;;Total ram usage:       14 bytes
 15932 ;; Hardware stack levels used:    1
 15933 ;; Hardware stack levels required when called:    3
 15934 ;; This function calls:
 15935 ;;		i2_DataClean
 15936 ;;		i2_Display_Menu
 15937 ;;		i2_FRAM_INIT
 15938 ;;		i2_Send_Hex
 15939 ;;		i2_SetDefaultPara
 15940 ;;		i2_UART_INIT
 15941 ;;		i2_read_F
 15942 ;; This function is called by:
 15943 ;;		Interrupt level 2
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           	psect	intcode
 15948  000008                     __pintcode:
 15949                           	opt stack 0
 15950  000008                     _ISR:
 15951                           	opt stack 21
 15952                           
 15953                           ;incstack = 0
 15954  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15955  00000A  CFD9 F013          	movff	fsr2l,??_ISR+3
 15956  00000E  CFDA F014          	movff	fsr2h,??_ISR+4
 15957  000012  CFF3 F015          	movff	prodl,??_ISR+5
 15958  000016  CFF4 F016          	movff	prodh,??_ISR+6
 15959  00001A  CFF6 F017          	movff	tblptrl,??_ISR+7
 15960  00001E  CFF7 F018          	movff	tblptrh,??_ISR+8
 15961  000022  CFF8 F019          	movff	tblptru,??_ISR+9
 15962  000026  CFF5 F01A          	movff	tablat,??_ISR+10
 15963                           
 15964                           ;main.c: 515: if(RCIF==1)
 15965  00002A  AA9E               	btfss	3998,5,c	;volatile
 15966  00002C  D130               	goto	i2l6076
 15967                           
 15968                           ;main.c: 516: {
 15969                           ;main.c: 517: RCIF=0;
 15970  00002E  9A9E               	bcf	3998,5,c	;volatile
 15971                           
 15972                           ;main.c: 518: switch (RCREG)
 15973  000030  D122               	goto	i2l6074
 15974  000032                     i2l782:
 15975                           
 15976                           ;main.c: 521: {
 15977                           ;main.c: 522: RCIE=0;
 15978  000032  9A9D               	bcf	3997,5,c	;volatile
 15979                           
 15980                           ;main.c: 523: for(address=0; address<5; address++)
 15981  000034  0100               	movlb	0	; () banked
 15982  000036  6BCF               	clrf	_address& (0+255),b
 15983  000038  6BD0               	clrf	(_address+1)& (0+255),b
 15984  00003A                     i2l5970:
 15985                           
 15986                           ; BSR set to: 0
 15987  00003A  BFD0               	btfsc	(_address+1)& (0+255),7,b
 15988  00003C  D005               	goto	i2l5974
 15989  00003E  51D0               	movf	(_address+1)& (0+255),w,b
 15990  000040  E11A               	bnz	i2l5980
 15991  000042  0E05               	movlw	5
 15992  000044  5DCF               	subwf	_address& (0+255),w,b
 15993  000046  E217               	bc	i2l5980
 15994  000048                     i2l5974:
 15995                           
 15996                           ; BSR set to: 0
 15997                           ;main.c: 524: {
 15998                           ;main.c: 525: Send_Hex(Lev[address].duty);
 15999  000048  51CF               	movf	_address& (0+255),w,b
 16000  00004A  0D02               	mullw	2
 16001  00004C  50F3               	movf	prodl,w,c
 16002  00004E  0FA9               	addlw	low _Lev
 16003  000050  6ED9               	movwf	fsr2l,c
 16004  000052  6ADA               	clrf	fsr2h,c
 16005  000054  50DF               	movf	indf2,w,c
 16006  000056  EC74  F018         	call	i2_Send_Hex
 16007                           
 16008                           ;main.c: 526: Send_Hex(Lev[address].hits);
 16009  00005A  0100               	movlb	0	; () banked
 16010  00005C  51CF               	movf	_address& (0+255),w,b
 16011  00005E  0D02               	mullw	2
 16012  000060  50F3               	movf	prodl,w,c
 16013  000062  0FAA               	addlw	low (_Lev+1)
 16014  000064  6ED9               	movwf	fsr2l,c
 16015  000066  6ADA               	clrf	fsr2h,c
 16016  000068  50DF               	movf	indf2,w,c
 16017  00006A  EC74  F018         	call	i2_Send_Hex
 16018  00006E  0100               	movlb	0	; () banked
 16019  000070  4BCF               	infsnz	_address& (0+255),f,b
 16020  000072  2BD0               	incf	(_address+1)& (0+255),f,b
 16021  000074  D7E2               	goto	i2l5970
 16022  000076                     i2l5980:
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;main.c: 527: }
 16026                           ;main.c: 528: Send_Hex(OpenTimes);
 16027  000076  51C9               	movf	_OpenTimes& (0+255),w,b
 16028  000078  EC74  F018         	call	i2_Send_Hex
 16029                           
 16030                           ;main.c: 529: Send_Hex(0x00);
 16031  00007C  0E00               	movlw	0
 16032  00007E  EC74  F018         	call	i2_Send_Hex
 16033  000082                     i2l5984:
 16034                           
 16035                           ;main.c: 530: RCIE=1;
 16036  000082  8A9D               	bsf	3997,5,c	;volatile
 16037                           
 16038                           ;main.c: 531: }break;
 16039  000084  D104               	goto	i2l6076
 16040  000086                     i2l786:
 16041                           
 16042                           ;main.c: 534: {
 16043                           ;main.c: 535: RCIE=0;
 16044  000086  9A9D               	bcf	3997,5,c	;volatile
 16045                           
 16046                           ;main.c: 536: for(address=0; address<5; address++)
 16047  000088  0100               	movlb	0	; () banked
 16048  00008A  6BCF               	clrf	_address& (0+255),b
 16049  00008C  6BD0               	clrf	(_address+1)& (0+255),b
 16050  00008E                     i2l5986:
 16051                           
 16052                           ; BSR set to: 0
 16053  00008E  BFD0               	btfsc	(_address+1)& (0+255),7,b
 16054  000090  D005               	goto	i2l5990
 16055  000092  51D0               	movf	(_address+1)& (0+255),w,b
 16056  000094  E11A               	bnz	i2l5996
 16057  000096  0E05               	movlw	5
 16058  000098  5DCF               	subwf	_address& (0+255),w,b
 16059  00009A  E217               	bc	i2l5996
 16060  00009C                     i2l5990:
 16061                           
 16062                           ; BSR set to: 0
 16063                           ;main.c: 537: {
 16064                           ;main.c: 538: Send_Hex(Lev[address].duty);
 16065  00009C  51CF               	movf	_address& (0+255),w,b
 16066  00009E  0D02               	mullw	2
 16067  0000A0  50F3               	movf	prodl,w,c
 16068  0000A2  0FA9               	addlw	low _Lev
 16069  0000A4  6ED9               	movwf	fsr2l,c
 16070  0000A6  6ADA               	clrf	fsr2h,c
 16071  0000A8  50DF               	movf	indf2,w,c
 16072  0000AA  EC74  F018         	call	i2_Send_Hex
 16073                           
 16074                           ;main.c: 539: Send_Hex(Lev[address].hits);
 16075  0000AE  0100               	movlb	0	; () banked
 16076  0000B0  51CF               	movf	_address& (0+255),w,b
 16077  0000B2  0D02               	mullw	2
 16078  0000B4  50F3               	movf	prodl,w,c
 16079  0000B6  0FAA               	addlw	low (_Lev+1)
 16080  0000B8  6ED9               	movwf	fsr2l,c
 16081  0000BA  6ADA               	clrf	fsr2h,c
 16082  0000BC  50DF               	movf	indf2,w,c
 16083  0000BE  EC74  F018         	call	i2_Send_Hex
 16084  0000C2  0100               	movlb	0	; () banked
 16085  0000C4  4BCF               	infsnz	_address& (0+255),f,b
 16086  0000C6  2BD0               	incf	(_address+1)& (0+255),f,b
 16087  0000C8  D7E2               	goto	i2l5986
 16088  0000CA                     i2l5996:
 16089                           
 16090                           ; BSR set to: 0
 16091                           ;main.c: 540: }
 16092                           ;main.c: 541: Send_Hex(OpenTimes);
 16093  0000CA  51C9               	movf	_OpenTimes& (0+255),w,b
 16094  0000CC  EC74  F018         	call	i2_Send_Hex
 16095                           
 16096                           ;main.c: 542: Send_Hex(0x00);Send_Hex(0x00);Send_Hex(0x00);Send_Hex(0x00);Send_Hex(0x00)
      +                          ;
 16097  0000D0  0E00               	movlw	0
 16098  0000D2  EC74  F018         	call	i2_Send_Hex
 16099  0000D6  0E00               	movlw	0
 16100  0000D8  EC74  F018         	call	i2_Send_Hex
 16101  0000DC  0E00               	movlw	0
 16102  0000DE  EC74  F018         	call	i2_Send_Hex
 16103  0000E2  0E00               	movlw	0
 16104  0000E4  EC74  F018         	call	i2_Send_Hex
 16105  0000E8  0E00               	movlw	0
 16106  0000EA  EC74  F018         	call	i2_Send_Hex
 16107                           
 16108                           ;main.c: 545: for(i=0;i<254;i++)
 16109  0000EE  6A1C               	clrf	ISR@i,c
 16110  0000F0  6A1D               	clrf	ISR@i+1,c
 16111  0000F2                     i2l6012:
 16112  0000F2  BE1D               	btfsc	ISR@i+1,7,c
 16113  0000F4  D005               	goto	i2l789
 16114  0000F6  501D               	movf	ISR@i+1,w,c
 16115  0000F8  E1C4               	bnz	i2l5984
 16116  0000FA  0EFE               	movlw	254
 16117  0000FC  5C1C               	subwf	ISR@i,w,c
 16118  0000FE  E2C1               	bc	i2l5984
 16119  000100                     i2l789:
 16120                           
 16121                           ;main.c: 546: {
 16122                           ;main.c: 547: SPEN=0;RCIE=0;CREN=0;
 16123  000100  9EAB               	bcf	4011,7,c	;volatile
 16124  000102  9A9D               	bcf	3997,5,c	;volatile
 16125  000104  98AB               	bcf	4011,4,c	;volatile
 16126                           
 16127                           ;main.c: 548: FRAM_INIT();
 16128  000106  EC89  F018         	call	i2_FRAM_INIT	;wreg free
 16129                           
 16130                           ;main.c: 549: for(address=8*i+16; address<8*i+24; address++)
 16131  00010A  C01C  F010         	movff	ISR@i,??_ISR
 16132  00010E  C01D  F011         	movff	ISR@i+1,??_ISR+1
 16133  000112  90D8               	bcf	status,0,c
 16134  000114  3610               	rlcf	??_ISR,f,c
 16135  000116  3611               	rlcf	??_ISR+1,f,c
 16136  000118  90D8               	bcf	status,0,c
 16137  00011A  3610               	rlcf	??_ISR,f,c
 16138  00011C  3611               	rlcf	??_ISR+1,f,c
 16139  00011E  90D8               	bcf	status,0,c
 16140  000120  3610               	rlcf	??_ISR,f,c
 16141  000122  3611               	rlcf	??_ISR+1,f,c
 16142  000124  0E10               	movlw	16
 16143  000126  2410               	addwf	??_ISR,w,c
 16144  000128  0100               	movlb	0	; () banked
 16145  00012A  6FCF               	movwf	_address& (0+255),b
 16146  00012C  0E00               	movlw	0
 16147  00012E  2011               	addwfc	??_ISR+1,w,c
 16148  000130  6FD0               	movwf	(_address+1)& (0+255),b
 16149  000132  D025               	goto	i2l6028
 16150  000134                     i2l6020:
 16151                           
 16152                           ; BSR set to: 0
 16153                           ;main.c: 550: {
 16154                           ;main.c: 551: if(i==30)
 16155  000134  0E1E               	movlw	30
 16156  000136  181C               	xorwf	ISR@i,w,c
 16157  000138  101D               	iorwf	ISR@i+1,w,c
 16158  00013A  E110               	bnz	i2l6024
 16159                           
 16160                           ; BSR set to: 0
 16161                           ;main.c: 552: {
 16162                           ;main.c: 553: AllData[address-8*i+16]=read_F(address+1792);
 16163  00013C  501C               	movf	ISR@i,w,c
 16164  00013E  0DF8               	mullw	-8
 16165  000140  50F3               	movf	prodl,w,c
 16166  000142  0F51               	addlw	low (_AllData+16)
 16167  000144  25CF               	addwf	_address& (0+255),w,b
 16168  000146  6ED9               	movwf	fsr2l,c
 16169  000148  6ADA               	clrf	fsr2h,c
 16170  00014A  0E00               	movlw	0
 16171  00014C  25CF               	addwf	_address& (0+255),w,b
 16172  00014E  6E02               	movwf	i2read_F@address,c
 16173  000150  0E07               	movlw	7
 16174  000152  21D0               	addwfc	(_address+1)& (0+255),w,b
 16175  000154  6E03               	movwf	i2read_F@address+1,c
 16176  000156  EC25  F017         	call	i2_read_F	;wreg free
 16177  00015A  D00D               	goto	L7
 16178  00015C                     i2l6024:
 16179                           
 16180                           ; BSR set to: 0
 16181                           ;main.c: 555: else
 16182                           ;main.c: 556: {
 16183                           ;main.c: 557: AllData[address-8*i+16]=read_F(address);
 16184  00015C  501C               	movf	ISR@i,w,c
 16185  00015E  0DF8               	mullw	-8
 16186  000160  50F3               	movf	prodl,w,c
 16187  000162  0F51               	addlw	low (_AllData+16)
 16188  000164  25CF               	addwf	_address& (0+255),w,b
 16189  000166  6ED9               	movwf	fsr2l,c
 16190  000168  6ADA               	clrf	fsr2h,c
 16191  00016A  C0CF  F002         	movff	_address,i2read_F@address
 16192  00016E  C0D0  F003         	movff	_address+1,i2read_F@address+1
 16193  000172  EC25  F017         	call	i2_read_F	;wreg free
 16194  000176                     L7:
 16195  000176  6EDF               	movwf	indf2,c
 16196  000178  0100               	movlb	0	; () banked
 16197  00017A  4BCF               	infsnz	_address& (0+255),f,b
 16198  00017C  2BD0               	incf	(_address+1)& (0+255),f,b
 16199  00017E                     i2l6028:
 16200                           
 16201                           ; BSR set to: 0
 16202  00017E  C01C  F010         	movff	ISR@i,??_ISR
 16203  000182  C01D  F011         	movff	ISR@i+1,??_ISR+1
 16204  000186  90D8               	bcf	status,0,c
 16205  000188  3610               	rlcf	??_ISR,f,c
 16206  00018A  3611               	rlcf	??_ISR+1,f,c
 16207  00018C  90D8               	bcf	status,0,c
 16208  00018E  3610               	rlcf	??_ISR,f,c
 16209  000190  3611               	rlcf	??_ISR+1,f,c
 16210  000192  90D8               	bcf	status,0,c
 16211  000194  3610               	rlcf	??_ISR,f,c
 16212  000196  3611               	rlcf	??_ISR+1,f,c
 16213  000198  0E18               	movlw	24
 16214  00019A  2610               	addwf	??_ISR,f,c
 16215  00019C  0E00               	movlw	0
 16216  00019E  2211               	addwfc	??_ISR+1,f,c
 16217  0001A0  5010               	movf	??_ISR,w,c
 16218  0001A2  5DCF               	subwf	_address& (0+255),w,b
 16219  0001A4  51D0               	movf	(_address+1)& (0+255),w,b
 16220  0001A6  0A80               	xorlw	128
 16221  0001A8  6E12               	movwf	(??_ISR+2)& (0+255),c
 16222  0001AA  5011               	movf	??_ISR+1,w,c
 16223  0001AC  0A80               	xorlw	128
 16224  0001AE  5812               	subwfb	(??_ISR+2)& (0+255),w,c
 16225  0001B0  E3C1               	bnc	i2l6020
 16226                           
 16227                           ; BSR set to: 0
 16228                           ;main.c: 558: }
 16229                           ;main.c: 559: }
 16230                           ;main.c: 560: SSPEN=0;RCIE=1;
 16231  0001B2  9AC6               	bcf	4038,5,c	;volatile
 16232  0001B4  8A9D               	bsf	3997,5,c	;volatile
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;main.c: 561: UART_INIT();
 16236  0001B6  ECEA  F017         	call	i2_UART_INIT	;wreg free
 16237                           
 16238                           ;main.c: 562: RCIE=1;
 16239  0001BA  8A9D               	bsf	3997,5,c	;volatile
 16240                           
 16241                           ;main.c: 563: for(address=8*i+16; address<8*i+24; address++)
 16242  0001BC  C01C  F010         	movff	ISR@i,??_ISR
 16243  0001C0  C01D  F011         	movff	ISR@i+1,??_ISR+1
 16244  0001C4  90D8               	bcf	status,0,c
 16245  0001C6  3610               	rlcf	??_ISR,f,c
 16246  0001C8  3611               	rlcf	??_ISR+1,f,c
 16247  0001CA  90D8               	bcf	status,0,c
 16248  0001CC  3610               	rlcf	??_ISR,f,c
 16249  0001CE  3611               	rlcf	??_ISR+1,f,c
 16250  0001D0  90D8               	bcf	status,0,c
 16251  0001D2  3610               	rlcf	??_ISR,f,c
 16252  0001D4  3611               	rlcf	??_ISR+1,f,c
 16253  0001D6  0E10               	movlw	16
 16254  0001D8  2410               	addwf	??_ISR,w,c
 16255  0001DA  0100               	movlb	0	; () banked
 16256  0001DC  6FCF               	movwf	_address& (0+255),b
 16257  0001DE  0E00               	movlw	0
 16258  0001E0  2011               	addwfc	??_ISR+1,w,c
 16259  0001E2  6FD0               	movwf	(_address+1)& (0+255),b
 16260  0001E4  D00D               	goto	i2l6040
 16261  0001E6                     i2l6036:
 16262                           
 16263                           ; BSR set to: 0
 16264                           ;main.c: 564: {
 16265                           ;main.c: 565: Send_Hex(AllData[address-8*i+16]);
 16266  0001E6  501C               	movf	ISR@i,w,c
 16267  0001E8  0DF8               	mullw	-8
 16268  0001EA  50F3               	movf	prodl,w,c
 16269  0001EC  0F51               	addlw	low (_AllData+16)
 16270  0001EE  25CF               	addwf	_address& (0+255),w,b
 16271  0001F0  6ED9               	movwf	fsr2l,c
 16272  0001F2  6ADA               	clrf	fsr2h,c
 16273  0001F4  50DF               	movf	indf2,w,c
 16274  0001F6  EC74  F018         	call	i2_Send_Hex
 16275  0001FA  0100               	movlb	0	; () banked
 16276  0001FC  4BCF               	infsnz	_address& (0+255),f,b
 16277  0001FE  2BD0               	incf	(_address+1)& (0+255),f,b
 16278  000200                     i2l6040:
 16279                           
 16280                           ; BSR set to: 0
 16281  000200  C01C  F010         	movff	ISR@i,??_ISR
 16282  000204  C01D  F011         	movff	ISR@i+1,??_ISR+1
 16283  000208  90D8               	bcf	status,0,c
 16284  00020A  3610               	rlcf	??_ISR,f,c
 16285  00020C  3611               	rlcf	??_ISR+1,f,c
 16286  00020E  90D8               	bcf	status,0,c
 16287  000210  3610               	rlcf	??_ISR,f,c
 16288  000212  3611               	rlcf	??_ISR+1,f,c
 16289  000214  90D8               	bcf	status,0,c
 16290  000216  3610               	rlcf	??_ISR,f,c
 16291  000218  3611               	rlcf	??_ISR+1,f,c
 16292  00021A  0E18               	movlw	24
 16293  00021C  2610               	addwf	??_ISR,f,c
 16294  00021E  0E00               	movlw	0
 16295  000220  2211               	addwfc	??_ISR+1,f,c
 16296  000222  5010               	movf	??_ISR,w,c
 16297  000224  5DCF               	subwf	_address& (0+255),w,b
 16298  000226  51D0               	movf	(_address+1)& (0+255),w,b
 16299  000228  0A80               	xorlw	128
 16300  00022A  6E12               	movwf	(??_ISR+2)& (0+255),c
 16301  00022C  5011               	movf	??_ISR+1,w,c
 16302  00022E  0A80               	xorlw	128
 16303  000230  5812               	subwfb	(??_ISR+2)& (0+255),w,c
 16304  000232  E3D9               	bnc	i2l6036
 16305                           
 16306                           ; BSR set to: 0
 16307  000234  4A1C               	infsnz	ISR@i,f,c
 16308  000236  2A1D               	incf	ISR@i+1,f,c
 16309  000238  D75C               	goto	i2l6012
 16310  00023A                     i2l799:
 16311                           
 16312                           ;main.c: 572: {
 16313                           ;main.c: 573: SPEN=0;RCIE=0;CREN=0;
 16314  00023A  9EAB               	bcf	4011,7,c	;volatile
 16315  00023C  9A9D               	bcf	3997,5,c	;volatile
 16316  00023E  98AB               	bcf	4011,4,c	;volatile
 16317                           
 16318                           ;main.c: 574: FRAM_INIT();
 16319  000240  EC89  F018         	call	i2_FRAM_INIT	;wreg free
 16320                           
 16321                           ;main.c: 575: SetDefaultPara();
 16322  000244  EC7D  F011         	call	i2_SetDefaultPara	;wreg free
 16323  000248                     i2l6050:
 16324                           
 16325                           ;main.c: 576: SSPEN=0;RCIE=1;
 16326  000248  9AC6               	bcf	4038,5,c	;volatile
 16327  00024A  8A9D               	bsf	3997,5,c	;volatile
 16328                           
 16329                           ;main.c: 577: UART_INIT();
 16330  00024C  ECEA  F017         	call	i2_UART_INIT	;wreg free
 16331  000250  D718               	goto	i2l5984
 16332  000252                     i2l800:
 16333                           
 16334                           ;main.c: 582: {
 16335                           ;main.c: 583: SPEN=0;RCIE=0;CREN=0;
 16336  000252  9EAB               	bcf	4011,7,c	;volatile
 16337  000254  9A9D               	bcf	3997,5,c	;volatile
 16338  000256  98AB               	bcf	4011,4,c	;volatile
 16339                           
 16340                           ;main.c: 584: FRAM_INIT();
 16341  000258  EC89  F018         	call	i2_FRAM_INIT	;wreg free
 16342                           
 16343                           ;main.c: 585: DataClean(0x10,0x810);
 16344  00025C  6A09               	clrf	i2DataClean@b_add+1,c
 16345  00025E  0E10               	movlw	16
 16346  000260  6E08               	movwf	i2DataClean@b_add,c
 16347  000262  0E08               	movlw	8
 16348  000264  6E0B               	movwf	i2DataClean@e_add+1,c
 16349  000266  0E10               	movlw	16
 16350  000268  6E0A               	movwf	i2DataClean@e_add,c
 16351  00026A  EC7F  F016         	call	i2_DataClean	;wreg free
 16352  00026E  D7EC               	goto	i2l6050
 16353  000270                     i2l6070:
 16354                           
 16355                           ;main.c: 592: {
 16356                           ;main.c: 593: Display_Menu();
 16357  000270  ECEE  F014         	call	i2_Display_Menu	;wreg free
 16358                           
 16359                           ;main.c: 594: }break;
 16360  000274  D00C               	goto	i2l6076
 16361  000276                     i2l6074:
 16362  000276  50AE               	movf	4014,w,c	;volatile
 16363                           
 16364                           ; Switch size 1, requested type "speed"
 16365                           ; Number of cases is 4, Range of values is 70 to 83
 16366                           ; switch strategies available:
 16367                           ; Name         Instructions Cycles
 16368                           ; simple_byte           13     7 (average)
 16369                           ;	Chosen strategy is simple_byte
 16370  000278  0A46               	xorlw	70	; case 70
 16371  00027A  E0EB               	bz	i2l800
 16372  00027C  0A09               	xorlw	9	; case 79
 16373  00027E  E101 D702          	bz	i2l786
 16374  000282  0A1D               	xorlw	29	; case 82
 16375  000284  E101 D6D5          	bz	i2l782
 16376  000288  0A01               	xorlw	1	; case 83
 16377  00028A  E0D7               	bz	i2l799
 16378  00028C  D7F1               	goto	i2l6070
 16379  00028E                     i2l6076:
 16380                           
 16381                           ;main.c: 596: }
 16382                           ;main.c: 597: unsigned char change=(PORTA >>2) & 0x07;
 16383  00028E  4080               	rrncf	3968,w,c	;volatile
 16384  000290  42E8               	rrncf	wreg,f,c
 16385  000292  0B3F               	andlw	63
 16386  000294  0B07               	andlw	7
 16387  000296  6E1B               	movwf	ISR@change,c
 16388                           
 16389                           ;main.c: 598: if(IC1IF==1)
 16390  000298  A2A4               	btfss	4004,1,c	;volatile
 16391  00029A  D017               	goto	i2l6098
 16392                           
 16393                           ;main.c: 599: {
 16394                           ;main.c: 600: IC1IF=0;
 16395  00029C  92A4               	bcf	4004,1,c	;volatile
 16396                           
 16397                           ;main.c: 601: if(Page==2)
 16398  00029E  0E02               	movlw	2
 16399  0002A0  0100               	movlb	0	; () banked
 16400  0002A2  19DE               	xorwf	_Page& (0+255),w,b
 16401  0002A4  E112               	bnz	i2l6098
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;main.c: 602: {
 16405                           ;main.c: 603: if(MOTOR_BUTTON==1 && OverTEMP==0)
 16406  0002A6  B052               	btfsc	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
 16407                           
 16408                           ; BSR set to: 0
 16409  0002A8  B452               	btfsc	_OverTEMP/(0+8),_OverTEMP& (0+7),c
 16410  0002AA  D00F               	goto	i2l6098
 16411                           
 16412                           ; BSR set to: 0
 16413                           ;main.c: 604: {
 16414                           ;main.c: 605: if(MOTOR_DIR==0)
 16415  0002AC  B252               	btfsc	_MOTOR_DIR/(0+8),_MOTOR_DIR& (0+7),c
 16416  0002AE  D003               	goto	i2l6092
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;main.c: 606: {
 16420                           ;main.c: 607: OVDCOND=STATE_HALL[change-0x01];
 16421  0002B0  501B               	movf	ISR@change,w,c
 16422  0002B2  0FD1               	addlw	low (_STATE_HALL+255)
 16423  0002B4  D002               	goto	L8
 16424  0002B6                     i2l6092:
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;main.c: 609: else
 16428                           ;main.c: 610: {
 16429                           ;main.c: 611: OVDCOND=STATE_HALL_BACK[change-0x01];
 16430  0002B6  501B               	movf	ISR@change,w,c
 16431  0002B8  0FD7               	addlw	low (_STATE_HALL_BACK+255)
 16432  0002BA                     L8:
 16433  0002BA  6ED9               	movwf	fsr2l,c
 16434  0002BC  6ADA               	clrf	fsr2h,c
 16435  0002BE  50DF               	movf	indf2,w,c
 16436  0002C0  6E6B               	movwf	3947,c	;volatile
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;main.c: 612: }
 16440                           ;main.c: 614: SL=CAP1BUFL;
 16441  0002C2  CF68 F0D1          	movff	3944,_SL	;volatile
 16442                           
 16443                           ; BSR set to: 0
 16444                           ;main.c: 615: SH=CAP1BUFH;
 16445  0002C6  CF69 F0CB          	movff	3945,_SH	;volatile
 16446  0002CA                     i2l6098:
 16447                           
 16448                           ;main.c: 617: }
 16449                           ;main.c: 620: }
 16450                           ;main.c: 621: }
 16451                           ;main.c: 622: if(IC2QEIF==1)
 16452  0002CA  A4A4               	btfss	4004,2,c	;volatile
 16453  0002CC  D013               	goto	i2l6114
 16454                           
 16455                           ;main.c: 623: {
 16456                           ;main.c: 624: IC2QEIF=0;
 16457  0002CE  94A4               	bcf	4004,2,c	;volatile
 16458                           
 16459                           ;main.c: 625: if(Page==2)
 16460  0002D0  0E02               	movlw	2
 16461  0002D2  0100               	movlb	0	; () banked
 16462  0002D4  19DE               	xorwf	_Page& (0+255),w,b
 16463  0002D6  E10E               	bnz	i2l6114
 16464                           
 16465                           ; BSR set to: 0
 16466                           ;main.c: 626: {
 16467                           ;main.c: 627: if(MOTOR_BUTTON==1 && OverTEMP==0)
 16468  0002D8  B052               	btfsc	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
 16469                           
 16470                           ; BSR set to: 0
 16471  0002DA  B452               	btfsc	_OverTEMP/(0+8),_OverTEMP& (0+7),c
 16472  0002DC  D00B               	goto	i2l6114
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;main.c: 628: {
 16476                           ;main.c: 629: if(MOTOR_DIR==0)
 16477  0002DE  B252               	btfsc	_MOTOR_DIR/(0+8),_MOTOR_DIR& (0+7),c
 16478  0002E0  D003               	goto	i2l6112
 16479                           
 16480                           ; BSR set to: 0
 16481                           ;main.c: 630: {
 16482                           ;main.c: 631: OVDCOND=STATE_HALL[change-0x01];
 16483  0002E2  501B               	movf	ISR@change,w,c
 16484  0002E4  0FD1               	addlw	low (_STATE_HALL+255)
 16485  0002E6  D002               	goto	L9
 16486  0002E8                     i2l6112:
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;main.c: 633: else
 16490                           ;main.c: 634: {
 16491                           ;main.c: 635: OVDCOND=STATE_HALL_BACK[change-0x01];
 16492  0002E8  501B               	movf	ISR@change,w,c
 16493  0002EA  0FD7               	addlw	low (_STATE_HALL_BACK+255)
 16494  0002EC                     L9:
 16495  0002EC  6ED9               	movwf	fsr2l,c
 16496  0002EE  6ADA               	clrf	fsr2h,c
 16497  0002F0  50DF               	movf	indf2,w,c
 16498  0002F2  6E6B               	movwf	3947,c	;volatile
 16499  0002F4                     i2l6114:
 16500                           
 16501                           ;main.c: 636: }
 16502                           ;main.c: 637: }
 16503                           ;main.c: 638: }
 16504                           ;main.c: 641: }
 16505                           ;main.c: 642: if(IC3DRIF==1)
 16506  0002F4  A6A4               	btfss	4004,3,c	;volatile
 16507  0002F6  D011               	goto	i2l6128
 16508                           
 16509                           ;main.c: 643: {
 16510                           ;main.c: 644: IC3DRIF=0;
 16511  0002F8  96A4               	bcf	4004,3,c	;volatile
 16512                           
 16513                           ;main.c: 645: if(MOTOR_BUTTON==1 && OverTEMP==0)
 16514  0002FA  B052               	btfsc	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
 16515  0002FC  B452               	btfsc	_OverTEMP/(0+8),_OverTEMP& (0+7),c
 16516  0002FE  D00D               	goto	i2l6128
 16517                           
 16518                           ;main.c: 646: {
 16519                           ;main.c: 647: if(MOTOR_BUTTON==1)
 16520  000300  A052               	btfss	_MOTOR_BUTTON/(0+8),_MOTOR_BUTTON& (0+7),c
 16521  000302  D00B               	goto	i2l6128
 16522                           
 16523                           ;main.c: 648: {
 16524                           ;main.c: 649: if(MOTOR_DIR==0)
 16525  000304  B252               	btfsc	_MOTOR_DIR/(0+8),_MOTOR_DIR& (0+7),c
 16526  000306  D003               	goto	i2l6126
 16527                           
 16528                           ;main.c: 650: {
 16529                           ;main.c: 651: OVDCOND=STATE_HALL[change-0x01];
 16530  000308  501B               	movf	ISR@change,w,c
 16531  00030A  0FD1               	addlw	low (_STATE_HALL+255)
 16532  00030C  D002               	goto	L10
 16533  00030E                     i2l6126:
 16534                           
 16535                           ;main.c: 653: else
 16536                           ;main.c: 654: {
 16537                           ;main.c: 655: OVDCOND=STATE_HALL_BACK[change-0x01];
 16538  00030E  501B               	movf	ISR@change,w,c
 16539  000310  0FD7               	addlw	low (_STATE_HALL_BACK+255)
 16540  000312                     L10:
 16541  000312  6ED9               	movwf	fsr2l,c
 16542  000314  6ADA               	clrf	fsr2h,c
 16543  000316  50DF               	movf	indf2,w,c
 16544  000318  6E6B               	movwf	3947,c	;volatile
 16545  00031A                     i2l6128:
 16546                           
 16547                           ;main.c: 656: }
 16548                           ;main.c: 657: }
 16549                           ;main.c: 658: }
 16550                           ;main.c: 661: }
 16551                           ;main.c: 662: if(TMR5IF==1)
 16552  00031A  B0A4               	btfsc	4004,0,c	;volatile
 16553                           
 16554                           ;main.c: 663: {
 16555                           ;main.c: 664: TMR5IF=0;
 16556  00031C  90A4               	bcf	4004,0,c	;volatile
 16557  00031E  C01A  FFF5         	movff	??_ISR+10,tablat
 16558  000322  C019  FFF8         	movff	??_ISR+9,tblptru
 16559  000326  C018  FFF7         	movff	??_ISR+8,tblptrh
 16560  00032A  C017  FFF6         	movff	??_ISR+7,tblptrl
 16561  00032E  C016  FFF4         	movff	??_ISR+6,prodh
 16562  000332  C015  FFF3         	movff	??_ISR+5,prodl
 16563  000336  C014  FFDA         	movff	??_ISR+4,fsr2h
 16564  00033A  C013  FFD9         	movff	??_ISR+3,fsr2l
 16565  00033E  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16566  000340  0011               	retfie		f
 16567  000342                     __end_of_ISR:
 16568                           	opt stack 0
 16569                           tblptru	equ	0xFF8
 16570                           tblptrh	equ	0xFF7
 16571                           tblptrl	equ	0xFF6
 16572                           tablat	equ	0xFF5
 16573                           prodh	equ	0xFF4
 16574                           prodl	equ	0xFF3
 16575                           intcon	equ	0xFF2
 16576                           postinc0	equ	0xFEE
 16577                           wreg	equ	0xFE8
 16578                           indf1	equ	0xFE7
 16579                           postinc1	equ	0xFE6
 16580                           postdec1	equ	0xFE5
 16581                           fsr1h	equ	0xFE2
 16582                           fsr1l	equ	0xFE1
 16583                           indf2	equ	0xFDF
 16584                           postinc2	equ	0xFDE
 16585                           postdec2	equ	0xFDD
 16586                           fsr2h	equ	0xFDA
 16587                           fsr2l	equ	0xFD9
 16588                           status	equ	0xFD8
 16589                           
 16590 ;; *************** function i2_read_F *****************
 16591 ;; Defined at:
 16592 ;;		line 39 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
 16593 ;; Parameters:    Size  Location     Type
 16594 ;;  address         2    1[COMRAM] unsigned int 
 16595 ;; Auto vars:     Size  Location     Type
 16596 ;;  read_F          1    5[COMRAM] unsigned char 
 16597 ;;  read_F          1    4[COMRAM] unsigned char 
 16598 ;;  read_F          1    3[COMRAM] unsigned char 
 16599 ;; Return value:  Size  Location     Type
 16600 ;;                  1    wreg      unsigned char 
 16601 ;; Registers used:
 16602 ;;		wreg, status,2, cstack
 16603 ;; Tracked objects:
 16604 ;;		On entry : F/0
 16605 ;;		On exit  : 0/0
 16606 ;;		Unchanged: 0/0
 16607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 16608 ;;      Params:         2       0       0       0
 16609 ;;      Locals:         3       0       0       0
 16610 ;;      Temps:          0       0       0       0
 16611 ;;      Totals:         5       0       0       0
 16612 ;;Total ram usage:        5 bytes
 16613 ;; Hardware stack levels used:    1
 16614 ;; Hardware stack levels required when called:    1
 16615 ;; This function calls:
 16616 ;;		i2_read_spi
 16617 ;;		i2_write_spi
 16618 ;; This function is called by:
 16619 ;;		_ISR
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623                           	psect	text67
 16624  002E4A                     __ptext67:
 16625                           	opt stack 0
 16626  002E4A                     i2_read_F:
 16627                           	opt stack 22
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;FRAM.c: 41: unsigned char t;
 16631                           ;FRAM.c: 42: unsigned char L=0x00;
 16632                           
 16633                           ;incstack = 0
 16634  002E4A  6A05               	clrf	i2read_F@L,c
 16635                           
 16636                           ;FRAM.c: 43: unsigned char H=0x00;
 16637  002E4C  6A06               	clrf	i2read_F@H,c
 16638                           
 16639                           ;FRAM.c: 44: H = (unsigned char)(address>> 8);
 16640  002E4E  C003  F006         	movff	i2read_F@address+1,i2read_F@H
 16641                           
 16642                           ;FRAM.c: 45: L = (unsigned char)(address & 0x00ff);
 16643  002E52  C002  F005         	movff	i2read_F@address,i2read_F@L
 16644                           
 16645                           ;FRAM.c: 46: RD3=0;
 16646  002E56  9683               	bcf	3971,3,c	;volatile
 16647                           
 16648                           ; BSR set to: 0
 16649                           ;FRAM.c: 47: write_spi(0x03);
 16650  002E58  0E03               	movlw	3
 16651  002E5A  EC7B  F018         	call	i2_write_spi
 16652                           
 16653                           ;FRAM.c: 48: write_spi(H);
 16654  002E5E  5006               	movf	i2read_F@H,w,c
 16655  002E60  EC7B  F018         	call	i2_write_spi
 16656                           
 16657                           ;FRAM.c: 49: write_spi(L);
 16658  002E64  5005               	movf	i2read_F@L,w,c
 16659  002E66  EC7B  F018         	call	i2_write_spi
 16660                           
 16661                           ;FRAM.c: 50: t= read_spi();
 16662  002E6A  EC4F  F018         	call	i2_read_spi	;wreg free
 16663  002E6E  6E04               	movwf	i2read_F@t,c
 16664                           
 16665                           ;FRAM.c: 51: RD3=1;
 16666  002E70  8683               	bsf	3971,3,c	;volatile
 16667                           
 16668                           ;FRAM.c: 52: return t;
 16669  002E72  5004               	movf	i2read_F@t,w,c
 16670  002E74  0012               	return		;funcret
 16671  002E76                     __end_ofi2_read_F:
 16672                           	opt stack 0
 16673                           tblptru	equ	0xFF8
 16674                           tblptrh	equ	0xFF7
 16675                           tblptrl	equ	0xFF6
 16676                           tablat	equ	0xFF5
 16677                           prodh	equ	0xFF4
 16678                           prodl	equ	0xFF3
 16679                           intcon	equ	0xFF2
 16680                           postinc0	equ	0xFEE
 16681                           wreg	equ	0xFE8
 16682                           indf1	equ	0xFE7
 16683                           postinc1	equ	0xFE6
 16684                           postdec1	equ	0xFE5
 16685                           fsr1h	equ	0xFE2
 16686                           fsr1l	equ	0xFE1
 16687                           indf2	equ	0xFDF
 16688                           postinc2	equ	0xFDE
 16689                           postdec2	equ	0xFDD
 16690                           fsr2h	equ	0xFDA
 16691                           fsr2l	equ	0xFD9
 16692                           status	equ	0xFD8
 16693                           
 16694 ;; *************** function i2_read_spi *****************
 16695 ;; Defined at:
 16696 ;;		line 19 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/SPI.c"
 16697 ;; Parameters:    Size  Location     Type
 16698 ;;		None
 16699 ;; Auto vars:     Size  Location     Type
 16700 ;;  read_spi        1    0[COMRAM] unsigned char 
 16701 ;; Return value:  Size  Location     Type
 16702 ;;                  1    wreg      unsigned char 
 16703 ;; Registers used:
 16704 ;;		wreg, status,2
 16705 ;; Tracked objects:
 16706 ;;		On entry : 0/0
 16707 ;;		On exit  : 0/0
 16708 ;;		Unchanged: 0/0
 16709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 16710 ;;      Params:         0       0       0       0
 16711 ;;      Locals:         1       0       0       0
 16712 ;;      Temps:          0       0       0       0
 16713 ;;      Totals:         1       0       0       0
 16714 ;;Total ram usage:        1 bytes
 16715 ;; Hardware stack levels used:    1
 16716 ;; This function calls:
 16717 ;;		Nothing
 16718 ;; This function is called by:
 16719 ;;		i2_read_F
 16720 ;; This function uses a non-reentrant model
 16721 ;;
 16722                           
 16723                           	psect	text68
 16724  00309E                     __ptext68:
 16725                           	opt stack 0
 16726  00309E                     i2_read_spi:
 16727                           	opt stack 22
 16728                           
 16729                           ;SPI.c: 21: unsigned char t;
 16730                           ;SPI.c: 22: SSPBUF=0xff;
 16731                           
 16732                           ;incstack = 0
 16733  00309E  68C9               	setf	4041,c	;volatile
 16734  0030A0                     i2l458:
 16735  0030A0  A69E               	btfss	3998,3,c	;volatile
 16736  0030A2  D7FE               	goto	i2l458
 16737                           
 16738                           ;SPI.c: 24: SSPIF=0;
 16739  0030A4  969E               	bcf	3998,3,c	;volatile
 16740                           
 16741                           ;SPI.c: 25: t=SSPBUF;
 16742  0030A6  CFC9 F001          	movff	4041,i2read_spi@t	;volatile
 16743                           
 16744                           ;SPI.c: 26: return t;
 16745  0030AA  5001               	movf	i2read_spi@t,w,c
 16746  0030AC  0012               	return		;funcret
 16747  0030AE                     __end_ofi2_read_spi:
 16748                           	opt stack 0
 16749                           tblptru	equ	0xFF8
 16750                           tblptrh	equ	0xFF7
 16751                           tblptrl	equ	0xFF6
 16752                           tablat	equ	0xFF5
 16753                           prodh	equ	0xFF4
 16754                           prodl	equ	0xFF3
 16755                           intcon	equ	0xFF2
 16756                           postinc0	equ	0xFEE
 16757                           wreg	equ	0xFE8
 16758                           indf1	equ	0xFE7
 16759                           postinc1	equ	0xFE6
 16760                           postdec1	equ	0xFE5
 16761                           fsr1h	equ	0xFE2
 16762                           fsr1l	equ	0xFE1
 16763                           indf2	equ	0xFDF
 16764                           postinc2	equ	0xFDE
 16765                           postdec2	equ	0xFDD
 16766                           fsr2h	equ	0xFDA
 16767                           fsr2l	equ	0xFD9
 16768                           status	equ	0xFD8
 16769                           
 16770 ;; *************** function i2_UART_INIT *****************
 16771 ;; Defined at:
 16772 ;;		line 5 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/UART.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;		None
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;		None
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  1    wreg      void 
 16779 ;; Registers used:
 16780 ;;		wreg, status,2
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 16786 ;;      Params:         0       0       0       0
 16787 ;;      Locals:         0       0       0       0
 16788 ;;      Temps:          0       0       0       0
 16789 ;;      Totals:         0       0       0       0
 16790 ;;Total ram usage:        0 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; This function calls:
 16793 ;;		Nothing
 16794 ;; This function is called by:
 16795 ;;		_ISR
 16796 ;; This function uses a non-reentrant model
 16797 ;;
 16798                           
 16799                           	psect	text69
 16800  002FD4                     __ptext69:
 16801                           	opt stack 0
 16802  002FD4                     i2_UART_INIT:
 16803                           	opt stack 23
 16804                           
 16805                           ;UART.c: 7: TRISC7=1;
 16806                           
 16807                           ;incstack = 0
 16808  002FD4  8E94               	bsf	3988,7,c	;volatile
 16809                           
 16810                           ;UART.c: 8: TRISC6=1;
 16811  002FD6  8C94               	bsf	3988,6,c	;volatile
 16812                           
 16813                           ;UART.c: 10: SPBRG=50;
 16814  002FD8  0E32               	movlw	50
 16815  002FDA  6EAF               	movwf	4015,c	;volatile
 16816                           
 16817                           ;UART.c: 11: SYNC=0;BRG16=0;BRGH=1;
 16818  002FDC  98AC               	bcf	4012,4,c	;volatile
 16819  002FDE  96AA               	bcf	4010,3,c	;volatile
 16820  002FE0  84AC               	bsf	4012,2,c	;volatile
 16821                           
 16822                           ;UART.c: 13: TXSTA=0x24;
 16823  002FE2  0E24               	movlw	36
 16824  002FE4  6EAC               	movwf	4012,c	;volatile
 16825                           
 16826                           ;UART.c: 14: RCSTA=0x90;
 16827  002FE6  0E90               	movlw	144
 16828  002FE8  6EAB               	movwf	4011,c	;volatile
 16829                           
 16830                           ;UART.c: 16: RCIF=0;
 16831  002FEA  9A9E               	bcf	3998,5,c	;volatile
 16832  002FEC  0C90               	retlw	144	;funcret
 16833  002FEE                     __end_ofi2_UART_INIT:
 16834                           	opt stack 0
 16835                           tblptru	equ	0xFF8
 16836                           tblptrh	equ	0xFF7
 16837                           tblptrl	equ	0xFF6
 16838                           tablat	equ	0xFF5
 16839                           prodh	equ	0xFF4
 16840                           prodl	equ	0xFF3
 16841                           intcon	equ	0xFF2
 16842                           postinc0	equ	0xFEE
 16843                           wreg	equ	0xFE8
 16844                           indf1	equ	0xFE7
 16845                           postinc1	equ	0xFE6
 16846                           postdec1	equ	0xFE5
 16847                           fsr1h	equ	0xFE2
 16848                           fsr1l	equ	0xFE1
 16849                           indf2	equ	0xFDF
 16850                           postinc2	equ	0xFDE
 16851                           postdec2	equ	0xFDD
 16852                           fsr2h	equ	0xFDA
 16853                           fsr2l	equ	0xFD9
 16854                           status	equ	0xFD8
 16855                           
 16856 ;; *************** function i2_SetDefaultPara *****************
 16857 ;; Defined at:
 16858 ;;		line 33 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/motor.c"
 16859 ;; Parameters:    Size  Location     Type
 16860 ;;		None
 16861 ;; Auto vars:     Size  Location     Type
 16862 ;;		None
 16863 ;; Return value:  Size  Location     Type
 16864 ;;                  1    wreg      void 
 16865 ;; Registers used:
 16866 ;;		wreg, status,2, status,0, cstack
 16867 ;; Tracked objects:
 16868 ;;		On entry : 0/0
 16869 ;;		On exit  : F/0
 16870 ;;		Unchanged: 0/0
 16871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 16872 ;;      Params:         0       0       0       0
 16873 ;;      Locals:         0       0       0       0
 16874 ;;      Temps:          0       0       0       0
 16875 ;;      Totals:         0       0       0       0
 16876 ;;Total ram usage:        0 bytes
 16877 ;; Hardware stack levels used:    1
 16878 ;; Hardware stack levels required when called:    2
 16879 ;; This function calls:
 16880 ;;		i2_write_F
 16881 ;; This function is called by:
 16882 ;;		_ISR
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           
 16886                           	psect	text70
 16887  0022FA                     __ptext70:
 16888                           	opt stack 0
 16889  0022FA                     i2_SetDefaultPara:
 16890                           	opt stack 21
 16891                           
 16892                           ;motor.c: 35: write_F(0x1e,0x00);write_F(0x64,0x01);
 16893                           
 16894                           ;incstack = 0
 16895  0022FA  6A04               	clrf	i2write_F@address+1,c
 16896  0022FC  6A03               	clrf	i2write_F@address,c
 16897  0022FE  0E1E               	movlw	30
 16898  002300  EC8B  F015         	call	i2_write_F
 16899  002304  6A04               	clrf	i2write_F@address+1,c
 16900  002306  0E01               	movlw	1
 16901  002308  6E03               	movwf	i2write_F@address,c
 16902  00230A  0E64               	movlw	100
 16903  00230C  EC8B  F015         	call	i2_write_F
 16904                           
 16905                           ;motor.c: 36: write_F(0x32,0x02);write_F(0x46,0x03);
 16906  002310  6A04               	clrf	i2write_F@address+1,c
 16907  002312  0E02               	movlw	2
 16908  002314  6E03               	movwf	i2write_F@address,c
 16909  002316  0E32               	movlw	50
 16910  002318  EC8B  F015         	call	i2_write_F
 16911  00231C  6A04               	clrf	i2write_F@address+1,c
 16912  00231E  0E03               	movlw	3
 16913  002320  6E03               	movwf	i2write_F@address,c
 16914  002322  0E46               	movlw	70
 16915  002324  EC8B  F015         	call	i2_write_F
 16916                           
 16917                           ;motor.c: 37: write_F(0x32,0x04);write_F(0x32,0x05);
 16918  002328  6A04               	clrf	i2write_F@address+1,c
 16919  00232A  0E04               	movlw	4
 16920  00232C  6E03               	movwf	i2write_F@address,c
 16921  00232E  0E32               	movlw	50
 16922  002330  EC8B  F015         	call	i2_write_F
 16923  002334  6A04               	clrf	i2write_F@address+1,c
 16924  002336  0E05               	movlw	5
 16925  002338  6E03               	movwf	i2write_F@address,c
 16926  00233A  0E32               	movlw	50
 16927  00233C  EC8B  F015         	call	i2_write_F
 16928                           
 16929                           ;motor.c: 38: write_F(0x50,0x06);write_F(0x1e,0x07);
 16930  002340  6A04               	clrf	i2write_F@address+1,c
 16931  002342  0E06               	movlw	6
 16932  002344  6E03               	movwf	i2write_F@address,c
 16933  002346  0E50               	movlw	80
 16934  002348  EC8B  F015         	call	i2_write_F
 16935  00234C  6A04               	clrf	i2write_F@address+1,c
 16936  00234E  0E07               	movlw	7
 16937  002350  6E03               	movwf	i2write_F@address,c
 16938  002352  0E1E               	movlw	30
 16939  002354  EC8B  F015         	call	i2_write_F
 16940                           
 16941                           ;motor.c: 39: write_F(0x64,0x08);write_F(0x0f,0x09);
 16942  002358  6A04               	clrf	i2write_F@address+1,c
 16943  00235A  0E08               	movlw	8
 16944  00235C  6E03               	movwf	i2write_F@address,c
 16945  00235E  0E64               	movlw	100
 16946  002360  EC8B  F015         	call	i2_write_F
 16947  002364  6A04               	clrf	i2write_F@address+1,c
 16948  002366  0E09               	movlw	9
 16949  002368  6E03               	movwf	i2write_F@address,c
 16950  00236A  0E0F               	movlw	15
 16951  00236C  EC8B  F015         	call	i2_write_F
 16952                           
 16953                           ;motor.c: 40: write_F(0x00,0x0a);write_F(0x1e,0x0b);
 16954  002370  6A04               	clrf	i2write_F@address+1,c
 16955  002372  0E0A               	movlw	10
 16956  002374  6E03               	movwf	i2write_F@address,c
 16957  002376  0E00               	movlw	0
 16958  002378  EC8B  F015         	call	i2_write_F
 16959  00237C  6A04               	clrf	i2write_F@address+1,c
 16960  00237E  0E0B               	movlw	11
 16961  002380  6E03               	movwf	i2write_F@address,c
 16962  002382  0E1E               	movlw	30
 16963  002384  EC8B  F015         	call	i2_write_F
 16964                           
 16965                           ;motor.c: 41: Lev[0].duty=0x1e;Lev[0].hits=0x64;
 16966  002388  0E1E               	movlw	30
 16967  00238A  0100               	movlb	0	; () banked
 16968  00238C  6FA9               	movwf	_Lev& (0+255),b
 16969                           
 16970                           ; BSR set to: 0
 16971  00238E  0E64               	movlw	100
 16972  002390  6FAA               	movwf	(_Lev+1)& (0+255),b
 16973                           
 16974                           ; BSR set to: 0
 16975                           ;motor.c: 42: Lev[1].duty=0x32;Lev[1].hits=0x46;
 16976  002392  0E32               	movlw	50
 16977  002394  6FAB               	movwf	(_Lev+2)& (0+255),b
 16978                           
 16979                           ; BSR set to: 0
 16980  002396  0E46               	movlw	70
 16981  002398  6FAC               	movwf	(_Lev+3)& (0+255),b
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;motor.c: 43: Lev[2].duty=0x32;Lev[2].hits=0x32;
 16985  00239A  0E32               	movlw	50
 16986  00239C  6FAD               	movwf	(_Lev+4)& (0+255),b
 16987                           
 16988                           ; BSR set to: 0
 16989  00239E  6FAE               	movwf	(_Lev+5)& (0+255),b
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;motor.c: 44: Lev[3].duty=0x50;Lev[3].hits=0x1e;
 16993  0023A0  0E50               	movlw	80
 16994  0023A2  6FAF               	movwf	(_Lev+6)& (0+255),b
 16995                           
 16996                           ; BSR set to: 0
 16997  0023A4  0E1E               	movlw	30
 16998  0023A6  6FB0               	movwf	(_Lev+7)& (0+255),b
 16999                           
 17000                           ; BSR set to: 0
 17001                           ;motor.c: 45: Lev[4].duty=0x64;Lev[4].hits=0x0f;
 17002  0023A8  0E64               	movlw	100
 17003  0023AA  6FB1               	movwf	(_Lev+8)& (0+255),b
 17004                           
 17005                           ; BSR set to: 0
 17006  0023AC  0E0F               	movlw	15
 17007  0023AE  6FB2               	movwf	(_Lev+9)& (0+255),b
 17008                           
 17009                           ; BSR set to: 0
 17010  0023B0  0C0F               	retlw	15	;funcret
 17011  0023B2                     __end_ofi2_SetDefaultPara:
 17012                           	opt stack 0
 17013                           tblptru	equ	0xFF8
 17014                           tblptrh	equ	0xFF7
 17015                           tblptrl	equ	0xFF6
 17016                           tablat	equ	0xFF5
 17017                           prodh	equ	0xFF4
 17018                           prodl	equ	0xFF3
 17019                           intcon	equ	0xFF2
 17020                           postinc0	equ	0xFEE
 17021                           wreg	equ	0xFE8
 17022                           indf1	equ	0xFE7
 17023                           postinc1	equ	0xFE6
 17024                           postdec1	equ	0xFE5
 17025                           fsr1h	equ	0xFE2
 17026                           fsr1l	equ	0xFE1
 17027                           indf2	equ	0xFDF
 17028                           postinc2	equ	0xFDE
 17029                           postdec2	equ	0xFDD
 17030                           fsr2h	equ	0xFDA
 17031                           fsr2l	equ	0xFD9
 17032                           status	equ	0xFD8
 17033                           
 17034 ;; *************** function i2_FRAM_INIT *****************
 17035 ;; Defined at:
 17036 ;;		line 14 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
 17037 ;; Parameters:    Size  Location     Type
 17038 ;;		None
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;		None
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  1    wreg      void 
 17043 ;; Registers used:
 17044 ;;		wreg, status,2, cstack
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 0/0
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17050 ;;      Params:         0       0       0       0
 17051 ;;      Locals:         0       0       0       0
 17052 ;;      Temps:          0       0       0       0
 17053 ;;      Totals:         0       0       0       0
 17054 ;;Total ram usage:        0 bytes
 17055 ;; Hardware stack levels used:    1
 17056 ;; Hardware stack levels required when called:    1
 17057 ;; This function calls:
 17058 ;;		i2_INIT_SPI
 17059 ;; This function is called by:
 17060 ;;		_ISR
 17061 ;; This function uses a non-reentrant model
 17062 ;;
 17063                           
 17064                           	psect	text71
 17065  003112                     __ptext71:
 17066                           	opt stack 0
 17067  003112                     i2_FRAM_INIT:
 17068                           	opt stack 22
 17069                           
 17070                           ;FRAM.c: 16: TRISD3=0;
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;incstack = 0
 17074  003112  9695               	bcf	3989,3,c	;volatile
 17075                           
 17076                           ;FRAM.c: 17: INIT_SPI();
 17077  003114  EF0E  F018         	goto	i2_INIT_SPI	;wreg free
 17078  003118                     __end_ofi2_FRAM_INIT:
 17079                           	opt stack 0
 17080                           tblptru	equ	0xFF8
 17081                           tblptrh	equ	0xFF7
 17082                           tblptrl	equ	0xFF6
 17083                           tablat	equ	0xFF5
 17084                           prodh	equ	0xFF4
 17085                           prodl	equ	0xFF3
 17086                           intcon	equ	0xFF2
 17087                           postinc0	equ	0xFEE
 17088                           wreg	equ	0xFE8
 17089                           indf1	equ	0xFE7
 17090                           postinc1	equ	0xFE6
 17091                           postdec1	equ	0xFE5
 17092                           fsr1h	equ	0xFE2
 17093                           fsr1l	equ	0xFE1
 17094                           indf2	equ	0xFDF
 17095                           postinc2	equ	0xFDE
 17096                           postdec2	equ	0xFDD
 17097                           fsr2h	equ	0xFDA
 17098                           fsr2l	equ	0xFD9
 17099                           status	equ	0xFD8
 17100                           
 17101 ;; *************** function i2_INIT_SPI *****************
 17102 ;; Defined at:
 17103 ;;		line 4 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/SPI.c"
 17104 ;; Parameters:    Size  Location     Type
 17105 ;;		None
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;		None
 17108 ;; Return value:  Size  Location     Type
 17109 ;;                  1    wreg      void 
 17110 ;; Registers used:
 17111 ;;		wreg, status,2
 17112 ;; Tracked objects:
 17113 ;;		On entry : 0/0
 17114 ;;		On exit  : 0/0
 17115 ;;		Unchanged: 0/0
 17116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17117 ;;      Params:         0       0       0       0
 17118 ;;      Locals:         0       0       0       0
 17119 ;;      Temps:          0       0       0       0
 17120 ;;      Totals:         0       0       0       0
 17121 ;;Total ram usage:        0 bytes
 17122 ;; Hardware stack levels used:    1
 17123 ;; This function calls:
 17124 ;;		Nothing
 17125 ;; This function is called by:
 17126 ;;		i2_FRAM_INIT
 17127 ;; This function uses a non-reentrant model
 17128 ;;
 17129                           
 17130                           	psect	text72
 17131  00301C                     __ptext72:
 17132                           	opt stack 0
 17133  00301C                     i2_INIT_SPI:
 17134                           	opt stack 22
 17135                           
 17136                           ;SPI.c: 6: TRISC4=1;TRISC5=0;TRISC7=0;
 17137                           
 17138                           ;incstack = 0
 17139  00301C  8894               	bsf	3988,4,c	;volatile
 17140  00301E  9A94               	bcf	3988,5,c	;volatile
 17141  003020  9E94               	bcf	3988,7,c	;volatile
 17142                           
 17143                           ;SPI.c: 7: SSPSTAT=0xc0;
 17144  003022  0EC0               	movlw	192
 17145  003024  6EC7               	movwf	4039,c	;volatile
 17146                           
 17147                           ;SPI.c: 8: SSPCON=0x20;
 17148  003026  0E20               	movlw	32
 17149  003028  6EC6               	movwf	4038,c	;volatile
 17150                           
 17151                           ;SPI.c: 9: CKP=1;CKE=0;
 17152  00302A  88C6               	bsf	4038,4,c	;volatile
 17153  00302C  9CC7               	bcf	4039,6,c	;volatile
 17154                           
 17155                           ;SPI.c: 10: SMP=0;
 17156  00302E  9EC7               	bcf	4039,7,c	;volatile
 17157  003030  0C20               	retlw	32	;funcret
 17158  003032                     __end_ofi2_INIT_SPI:
 17159                           	opt stack 0
 17160                           tblptru	equ	0xFF8
 17161                           tblptrh	equ	0xFF7
 17162                           tblptrl	equ	0xFF6
 17163                           tablat	equ	0xFF5
 17164                           prodh	equ	0xFF4
 17165                           prodl	equ	0xFF3
 17166                           intcon	equ	0xFF2
 17167                           postinc0	equ	0xFEE
 17168                           wreg	equ	0xFE8
 17169                           indf1	equ	0xFE7
 17170                           postinc1	equ	0xFE6
 17171                           postdec1	equ	0xFE5
 17172                           fsr1h	equ	0xFE2
 17173                           fsr1l	equ	0xFE1
 17174                           indf2	equ	0xFDF
 17175                           postinc2	equ	0xFDE
 17176                           postdec2	equ	0xFDD
 17177                           fsr2h	equ	0xFDA
 17178                           fsr2l	equ	0xFD9
 17179                           status	equ	0xFD8
 17180                           
 17181 ;; *************** function i2_Display_Menu *****************
 17182 ;; Defined at:
 17183 ;;		line 8 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/motor.c"
 17184 ;; Parameters:    Size  Location     Type
 17185 ;;		None
 17186 ;; Auto vars:     Size  Location     Type
 17187 ;;		None
 17188 ;; Return value:  Size  Location     Type
 17189 ;;                  1    wreg      void 
 17190 ;; Registers used:
 17191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17192 ;; Tracked objects:
 17193 ;;		On entry : 0/0
 17194 ;;		On exit  : 0/0
 17195 ;;		Unchanged: 0/0
 17196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17197 ;;      Params:         0       0       0       0
 17198 ;;      Locals:         0       0       0       0
 17199 ;;      Temps:          0       0       0       0
 17200 ;;      Totals:         0       0       0       0
 17201 ;;Total ram usage:        0 bytes
 17202 ;; Hardware stack levels used:    1
 17203 ;; Hardware stack levels required when called:    2
 17204 ;; This function calls:
 17205 ;;		i2_Send_Str
 17206 ;; This function is called by:
 17207 ;;		_ISR
 17208 ;; This function uses a non-reentrant model
 17209 ;;
 17210                           
 17211                           	psect	text73
 17212  0029DC                     __ptext73:
 17213                           	opt stack 0
 17214  0029DC                     i2_Display_Menu:
 17215                           	opt stack 21
 17216                           
 17217                           ;motor.c: 10: Send_Str("Welcome!\r\n");
 17218                           
 17219                           ;incstack = 0
 17220  0029DC  0EE1               	movlw	low STR_31
 17221  0029DE  6E05               	movwf	i2Send_Str@data,c
 17222  0029E0  0E3F               	movlw	high STR_31
 17223  0029E2  6E06               	movwf	i2Send_Str@data+1,c
 17224  0029E4  ECD1  F015         	call	i2_Send_Str	;wreg free
 17225                           
 17226                           ;motor.c: 11: Send_Str("Please select:\r\n");
 17227  0029E8  0ED0               	movlw	low STR_32
 17228  0029EA  6E05               	movwf	i2Send_Str@data,c
 17229  0029EC  0E3F               	movlw	high STR_32
 17230  0029EE  6E06               	movwf	i2Send_Str@data+1,c
 17231  0029F0  ECD1  F015         	call	i2_Send_Str	;wreg free
 17232                           
 17233                           ;motor.c: 12: Send_Str("R-- Read the Parameters.\r\n");
 17234  0029F4  0E88               	movlw	low STR_33
 17235  0029F6  6E05               	movwf	i2Send_Str@data,c
 17236  0029F8  0E3F               	movlw	high STR_33
 17237  0029FA  6E06               	movwf	i2Send_Str@data+1,c
 17238  0029FC  ECD1  F015         	call	i2_Send_Str	;wreg free
 17239                           
 17240                           ;motor.c: 13: Send_Str("O-- Read All Data.\r\n");
 17241  002A00  0EBB               	movlw	low STR_34
 17242  002A02  6E05               	movwf	i2Send_Str@data,c
 17243  002A04  0E3F               	movlw	high STR_34
 17244  002A06  6E06               	movwf	i2Send_Str@data+1,c
 17245  002A08  ECD1  F015         	call	i2_Send_Str	;wreg free
 17246                           
 17247                           ;motor.c: 14: Send_Str("S-- Set Default Parameters.\r\n");
 17248  002A0C  0E6A               	movlw	low STR_35
 17249  002A0E  6E05               	movwf	i2Send_Str@data,c
 17250  002A10  0E3F               	movlw	high STR_35
 17251  002A12  6E06               	movwf	i2Send_Str@data+1,c
 17252  002A14  ECD1  F015         	call	i2_Send_Str	;wreg free
 17253                           
 17254                           ;motor.c: 15: Send_Str("F-- Set ALL Data=0x00\r\n");
 17255  002A18  0EA3               	movlw	low STR_36
 17256  002A1A  6E05               	movwf	i2Send_Str@data,c
 17257  002A1C  0E3F               	movlw	high STR_36
 17258  002A1E  6E06               	movwf	i2Send_Str@data+1,c
 17259  002A20  ECD1  F015         	call	i2_Send_Str	;wreg free
 17260                           
 17261                           ;motor.c: 16: Send_Str("*-- any other key to redispaly the menu.\r\n");
 17262  002A24  0E3F               	movlw	low STR_37
 17263  002A26  6E05               	movwf	i2Send_Str@data,c
 17264  002A28  0E3F               	movlw	high STR_37
 17265  002A2A  6E06               	movwf	i2Send_Str@data+1,c
 17266  002A2C  EFD1  F015         	goto	i2_Send_Str	;wreg free
 17267  002A30                     __end_ofi2_Display_Menu:
 17268                           	opt stack 0
 17269                           tblptru	equ	0xFF8
 17270                           tblptrh	equ	0xFF7
 17271                           tblptrl	equ	0xFF6
 17272                           tablat	equ	0xFF5
 17273                           prodh	equ	0xFF4
 17274                           prodl	equ	0xFF3
 17275                           intcon	equ	0xFF2
 17276                           postinc0	equ	0xFEE
 17277                           wreg	equ	0xFE8
 17278                           indf1	equ	0xFE7
 17279                           postinc1	equ	0xFE6
 17280                           postdec1	equ	0xFE5
 17281                           fsr1h	equ	0xFE2
 17282                           fsr1l	equ	0xFE1
 17283                           indf2	equ	0xFDF
 17284                           postinc2	equ	0xFDE
 17285                           postdec2	equ	0xFDD
 17286                           fsr2h	equ	0xFDA
 17287                           fsr2l	equ	0xFD9
 17288                           status	equ	0xFD8
 17289                           
 17290 ;; *************** function i2_Send_Str *****************
 17291 ;; Defined at:
 17292 ;;		line 30 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/UART.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;  data            2    4[COMRAM] PTR unsigned char 
 17295 ;;		 -> STR_37(43), STR_36(24), STR_35(30), STR_34(21), 
 17296 ;;		 -> STR_33(27), STR_32(17), STR_31(11), 
 17297 ;; Auto vars:     Size  Location     Type
 17298 ;;  Send_Str        2    8[COMRAM] int 
 17299 ;; Return value:  Size  Location     Type
 17300 ;;                  1    wreg      void 
 17301 ;; Registers used:
 17302 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17303 ;; Tracked objects:
 17304 ;;		On entry : 0/0
 17305 ;;		On exit  : 0/0
 17306 ;;		Unchanged: 0/0
 17307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17308 ;;      Params:         2       0       0       0
 17309 ;;      Locals:         2       0       0       0
 17310 ;;      Temps:          2       0       0       0
 17311 ;;      Totals:         6       0       0       0
 17312 ;;Total ram usage:        6 bytes
 17313 ;; Hardware stack levels used:    1
 17314 ;; Hardware stack levels required when called:    1
 17315 ;; This function calls:
 17316 ;;		i2_Send_Hex
 17317 ;;		i2_strlen
 17318 ;; This function is called by:
 17319 ;;		i2_Display_Menu
 17320 ;; This function uses a non-reentrant model
 17321 ;;
 17322                           
 17323                           	psect	text74
 17324  002BA2                     __ptext74:
 17325                           	opt stack 0
 17326  002BA2                     i2_Send_Str:
 17327                           	opt stack 21
 17328                           
 17329                           ;UART.c: 32: int i=0;
 17330                           
 17331                           ;incstack = 0
 17332  002BA2  6A09               	clrf	i2Send_Str@i,c
 17333  002BA4  6A0A               	clrf	i2Send_Str@i+1,c
 17334                           
 17335                           ;UART.c: 33: for(i=0;i<strlen(data);i++)
 17336  002BA6  6A09               	clrf	i2Send_Str@i,c
 17337  002BA8  6A0A               	clrf	i2Send_Str@i+1,c
 17338  002BAA  D010               	goto	i2l4698
 17339  002BAC                     i2l4694:
 17340                           
 17341                           ;UART.c: 34: {
 17342                           ;UART.c: 35: Send_Hex(data[i]);
 17343  002BAC  5009               	movf	i2Send_Str@i,w,c
 17344  002BAE  2405               	addwf	i2Send_Str@data,w,c
 17345  002BB0  6E07               	movwf	??i2_Send_Str& (0+255),c
 17346  002BB2  500A               	movf	i2Send_Str@i+1,w,c
 17347  002BB4  2006               	addwfc	i2Send_Str@data+1,w,c
 17348  002BB6  6E08               	movwf	(??i2_Send_Str+1)& (0+255),c
 17349  002BB8  C007  FFF6         	movff	??i2_Send_Str,tblptrl
 17350  002BBC  C008  FFF7         	movff	??i2_Send_Str+1,tblptrh
 17351  002BC0                     	if	0	;tblptru may be non-zero
 17352  002BC0                     	endif
 17353  002BC0                     	if	0	;tblptru may be non-zero
 17354  002BC0                     	endif
 17355  002BC0  0008               	tblrd		*
 17356  002BC2  50F5               	movf	tablat,w,c
 17357  002BC4  EC74  F018         	call	i2_Send_Hex
 17358  002BC8  4A09               	infsnz	i2Send_Str@i,f,c
 17359  002BCA  2A0A               	incf	i2Send_Str@i+1,f,c
 17360  002BCC                     i2l4698:
 17361  002BCC  C005  F001         	movff	i2Send_Str@data,i2strlen@s
 17362  002BD0  C006  F002         	movff	i2Send_Str@data+1,i2strlen@s+1
 17363  002BD4  EC65  F017         	call	i2_strlen	;wreg free
 17364  002BD8  5001               	movf	?i2_strlen,w,c
 17365  002BDA  5C09               	subwf	i2Send_Str@i,w,c
 17366  002BDC  5002               	movf	?i2_strlen+1,w,c
 17367  002BDE  580A               	subwfb	i2Send_Str@i+1,w,c
 17368  002BE0  E3E5               	bnc	i2l4694
 17369  002BE2  0012               	return		;funcret
 17370  002BE4                     __end_ofi2_Send_Str:
 17371                           	opt stack 0
 17372                           tblptru	equ	0xFF8
 17373                           tblptrh	equ	0xFF7
 17374                           tblptrl	equ	0xFF6
 17375                           tablat	equ	0xFF5
 17376                           prodh	equ	0xFF4
 17377                           prodl	equ	0xFF3
 17378                           intcon	equ	0xFF2
 17379                           postinc0	equ	0xFEE
 17380                           wreg	equ	0xFE8
 17381                           indf1	equ	0xFE7
 17382                           postinc1	equ	0xFE6
 17383                           postdec1	equ	0xFE5
 17384                           fsr1h	equ	0xFE2
 17385                           fsr1l	equ	0xFE1
 17386                           indf2	equ	0xFDF
 17387                           postinc2	equ	0xFDE
 17388                           postdec2	equ	0xFDD
 17389                           fsr2h	equ	0xFDA
 17390                           fsr2l	equ	0xFD9
 17391                           status	equ	0xFD8
 17392                           
 17393 ;; *************** function i2_strlen *****************
 17394 ;; Defined at:
 17395 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strlen.c"
 17396 ;; Parameters:    Size  Location     Type
 17397 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17398 ;;		 -> STR_37(43), STR_36(24), STR_35(30), STR_34(21), 
 17399 ;;		 -> STR_33(27), STR_32(17), STR_31(11), 
 17400 ;; Auto vars:     Size  Location     Type
 17401 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 17402 ;;		 -> STR_37(43), STR_36(24), STR_35(30), STR_34(21), 
 17403 ;;		 -> STR_33(27), STR_32(17), STR_31(11), 
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  2    0[COMRAM] unsigned int 
 17406 ;; Registers used:
 17407 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17408 ;; Tracked objects:
 17409 ;;		On entry : 0/0
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17413 ;;      Params:         2       0       0       0
 17414 ;;      Locals:         2       0       0       0
 17415 ;;      Temps:          0       0       0       0
 17416 ;;      Totals:         4       0       0       0
 17417 ;;Total ram usage:        4 bytes
 17418 ;; Hardware stack levels used:    1
 17419 ;; This function calls:
 17420 ;;		Nothing
 17421 ;; This function is called by:
 17422 ;;		i2_Send_Str
 17423 ;; This function uses a non-reentrant model
 17424 ;;
 17425                           
 17426                           	psect	text75
 17427  002ECA                     __ptext75:
 17428                           	opt stack 0
 17429  002ECA                     i2_strlen:
 17430                           	opt stack 21
 17431                           
 17432                           ;incstack = 0
 17433  002ECA  C001  F003         	movff	i2strlen@s,i2strlen@cp
 17434  002ECE  C002  F004         	movff	i2strlen@s+1,i2strlen@cp+1
 17435  002ED2  D002               	goto	i2l4124
 17436  002ED4                     i2l4122:
 17437  002ED4  4A03               	infsnz	i2strlen@cp,f,c
 17438  002ED6  2A04               	incf	i2strlen@cp+1,f,c
 17439  002ED8                     i2l4124:
 17440  002ED8  C003  FFF6         	movff	i2strlen@cp,tblptrl
 17441  002EDC  C004  FFF7         	movff	i2strlen@cp+1,tblptrh
 17442  002EE0                     	if	0	;tblptru may be non-zero
 17443  002EE0                     	endif
 17444  002EE0                     	if	0	;tblptru may be non-zero
 17445  002EE0                     	endif
 17446  002EE0  0008               	tblrd		*
 17447  002EE2  50F5               	movf	tablat,w,c
 17448  002EE4  E1F7               	bnz	i2l4122
 17449  002EE6  5001               	movf	i2strlen@s,w,c
 17450  002EE8  5C03               	subwf	i2strlen@cp,w,c
 17451  002EEA  6E01               	movwf	?i2_strlen,c
 17452  002EEC  5002               	movf	i2strlen@s+1,w,c
 17453  002EEE  5804               	subwfb	i2strlen@cp+1,w,c
 17454  002EF0  6E02               	movwf	?i2_strlen+1,c
 17455  002EF2  0012               	return		;funcret
 17456  002EF4                     __end_ofi2_strlen:
 17457                           	opt stack 0
 17458                           tblptru	equ	0xFF8
 17459                           tblptrh	equ	0xFF7
 17460                           tblptrl	equ	0xFF6
 17461                           tablat	equ	0xFF5
 17462                           prodh	equ	0xFF4
 17463                           prodl	equ	0xFF3
 17464                           intcon	equ	0xFF2
 17465                           postinc0	equ	0xFEE
 17466                           wreg	equ	0xFE8
 17467                           indf1	equ	0xFE7
 17468                           postinc1	equ	0xFE6
 17469                           postdec1	equ	0xFE5
 17470                           fsr1h	equ	0xFE2
 17471                           fsr1l	equ	0xFE1
 17472                           indf2	equ	0xFDF
 17473                           postinc2	equ	0xFDE
 17474                           postdec2	equ	0xFDD
 17475                           fsr2h	equ	0xFDA
 17476                           fsr2l	equ	0xFD9
 17477                           status	equ	0xFD8
 17478                           
 17479 ;; *************** function i2_Send_Hex *****************
 17480 ;; Defined at:
 17481 ;;		line 23 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/UART.c"
 17482 ;; Parameters:    Size  Location     Type
 17483 ;;  data            1    wreg     unsigned char 
 17484 ;; Auto vars:     Size  Location     Type
 17485 ;;  data            1    0[COMRAM] unsigned char 
 17486 ;; Return value:  Size  Location     Type
 17487 ;;                  1    wreg      void 
 17488 ;; Registers used:
 17489 ;;		wreg
 17490 ;; Tracked objects:
 17491 ;;		On entry : 0/0
 17492 ;;		On exit  : 0/0
 17493 ;;		Unchanged: 0/0
 17494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17495 ;;      Params:         0       0       0       0
 17496 ;;      Locals:         1       0       0       0
 17497 ;;      Temps:          0       0       0       0
 17498 ;;      Totals:         1       0       0       0
 17499 ;;Total ram usage:        1 bytes
 17500 ;; Hardware stack levels used:    1
 17501 ;; This function calls:
 17502 ;;		Nothing
 17503 ;; This function is called by:
 17504 ;;		_ISR
 17505 ;;		i2_Send_Str
 17506 ;; This function uses a non-reentrant model
 17507 ;;
 17508                           
 17509                           	psect	text76
 17510  0030E8                     __ptext76:
 17511                           	opt stack 0
 17512  0030E8                     i2_Send_Hex:
 17513                           	opt stack 23
 17514                           
 17515                           ;incstack = 0
 17516                           ;i2Send_Hex@data stored from wreg
 17517  0030E8  6E01               	movwf	i2Send_Hex@data,c
 17518                           
 17519                           ;UART.c: 25: TXREG=data;
 17520  0030EA  C001  FFAD         	movff	i2Send_Hex@data,4013	;volatile
 17521  0030EE                     i2l497:
 17522  0030EE  A2AC               	btfss	4012,1,c	;volatile
 17523  0030F0  D7FE               	goto	i2l497
 17524                           
 17525                           ;UART.c: 27: RCIF=0;
 17526  0030F2  9A9E               	bcf	3998,5,c	;volatile
 17527  0030F4  0012               	return		;funcret
 17528  0030F6                     __end_ofi2_Send_Hex:
 17529                           	opt stack 0
 17530                           tblptru	equ	0xFF8
 17531                           tblptrh	equ	0xFF7
 17532                           tblptrl	equ	0xFF6
 17533                           tablat	equ	0xFF5
 17534                           prodh	equ	0xFF4
 17535                           prodl	equ	0xFF3
 17536                           intcon	equ	0xFF2
 17537                           postinc0	equ	0xFEE
 17538                           wreg	equ	0xFE8
 17539                           indf1	equ	0xFE7
 17540                           postinc1	equ	0xFE6
 17541                           postdec1	equ	0xFE5
 17542                           fsr1h	equ	0xFE2
 17543                           fsr1l	equ	0xFE1
 17544                           indf2	equ	0xFDF
 17545                           postinc2	equ	0xFDE
 17546                           postdec2	equ	0xFDD
 17547                           fsr2h	equ	0xFDA
 17548                           fsr2l	equ	0xFD9
 17549                           status	equ	0xFD8
 17550                           
 17551 ;; *************** function i2_DataClean *****************
 17552 ;; Defined at:
 17553 ;;		line 55 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
 17554 ;; Parameters:    Size  Location     Type
 17555 ;;  b_add           2    7[COMRAM] unsigned int 
 17556 ;;  e_add           2    9[COMRAM] unsigned int 
 17557 ;; Auto vars:     Size  Location     Type
 17558 ;;  DataClean       2   13[COMRAM] unsigned int 
 17559 ;; Return value:  Size  Location     Type
 17560 ;;                  1    wreg      void 
 17561 ;; Registers used:
 17562 ;;		wreg, status,2, status,0, cstack
 17563 ;; Tracked objects:
 17564 ;;		On entry : 0/0
 17565 ;;		On exit  : 0/0
 17566 ;;		Unchanged: 0/0
 17567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17568 ;;      Params:         4       0       0       0
 17569 ;;      Locals:         2       0       0       0
 17570 ;;      Temps:          2       0       0       0
 17571 ;;      Totals:         8       0       0       0
 17572 ;;Total ram usage:        8 bytes
 17573 ;; Hardware stack levels used:    1
 17574 ;; Hardware stack levels required when called:    2
 17575 ;; This function calls:
 17576 ;;		i2_write_F
 17577 ;; This function is called by:
 17578 ;;		_ISR
 17579 ;; This function uses a non-reentrant model
 17580 ;;
 17581                           
 17582                           	psect	text77
 17583  002CFE                     __ptext77:
 17584                           	opt stack 0
 17585  002CFE                     i2_DataClean:
 17586                           	opt stack 21
 17587                           
 17588                           ;FRAM.c: 57: unsigned int i=0;
 17589                           
 17590                           ;incstack = 0
 17591  002CFE  6A0E               	clrf	i2DataClean@i,c
 17592  002D00  6A0F               	clrf	i2DataClean@i+1,c
 17593                           
 17594                           ;FRAM.c: 58: for(i=b_add;i<e_add+1;i++)
 17595  002D02  C008  F00E         	movff	i2DataClean@b_add,i2DataClean@i
 17596  002D06  C009  F00F         	movff	i2DataClean@b_add+1,i2DataClean@i+1
 17597  002D0A  D009               	goto	i2l5470
 17598  002D0C                     i2l5466:
 17599                           
 17600                           ;FRAM.c: 59: {
 17601                           ;FRAM.c: 60: write_F(0x00,i);
 17602  002D0C  C00E  F003         	movff	i2DataClean@i,i2write_F@address
 17603  002D10  C00F  F004         	movff	i2DataClean@i+1,i2write_F@address+1
 17604  002D14  0E00               	movlw	0
 17605  002D16  EC8B  F015         	call	i2_write_F
 17606  002D1A  4A0E               	infsnz	i2DataClean@i,f,c
 17607  002D1C  2A0F               	incf	i2DataClean@i+1,f,c
 17608  002D1E                     i2l5470:
 17609  002D1E  280A               	incf	i2DataClean@e_add,w,c
 17610  002D20  6E0C               	movwf	??i2_DataClean& (0+255),c
 17611  002D22  0E00               	movlw	0
 17612  002D24  200B               	addwfc	i2DataClean@e_add+1,w,c
 17613  002D26  6E0D               	movwf	(??i2_DataClean+1)& (0+255),c
 17614  002D28  500C               	movf	??i2_DataClean,w,c
 17615  002D2A  5C0E               	subwf	i2DataClean@i,w,c
 17616  002D2C  500D               	movf	??i2_DataClean+1,w,c
 17617  002D2E  580F               	subwfb	i2DataClean@i+1,w,c
 17618  002D30  E3ED               	bnc	i2l5466
 17619  002D32  0012               	return		;funcret
 17620  002D34                     __end_ofi2_DataClean:
 17621                           	opt stack 0
 17622                           tblptru	equ	0xFF8
 17623                           tblptrh	equ	0xFF7
 17624                           tblptrl	equ	0xFF6
 17625                           tablat	equ	0xFF5
 17626                           prodh	equ	0xFF4
 17627                           prodl	equ	0xFF3
 17628                           intcon	equ	0xFF2
 17629                           postinc0	equ	0xFEE
 17630                           wreg	equ	0xFE8
 17631                           indf1	equ	0xFE7
 17632                           postinc1	equ	0xFE6
 17633                           postdec1	equ	0xFE5
 17634                           fsr1h	equ	0xFE2
 17635                           fsr1l	equ	0xFE1
 17636                           indf2	equ	0xFDF
 17637                           postinc2	equ	0xFDE
 17638                           postdec2	equ	0xFDD
 17639                           fsr2h	equ	0xFDA
 17640                           fsr2l	equ	0xFD9
 17641                           status	equ	0xFD8
 17642                           
 17643 ;; *************** function i2_write_F *****************
 17644 ;; Defined at:
 17645 ;;		line 20 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/FRAM.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;  t               1    wreg     unsigned char 
 17648 ;;  address         2    2[COMRAM] unsigned int 
 17649 ;; Auto vars:     Size  Location     Type
 17650 ;;  t               1    4[COMRAM] unsigned char 
 17651 ;;  write_F         1    6[COMRAM] unsigned char 
 17652 ;;  write_F         1    5[COMRAM] unsigned char 
 17653 ;; Return value:  Size  Location     Type
 17654 ;;                  1    wreg      void 
 17655 ;; Registers used:
 17656 ;;		wreg, status,2, status,0, cstack
 17657 ;; Tracked objects:
 17658 ;;		On entry : 0/0
 17659 ;;		On exit  : 0/0
 17660 ;;		Unchanged: 0/0
 17661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17662 ;;      Params:         2       0       0       0
 17663 ;;      Locals:         3       0       0       0
 17664 ;;      Temps:          0       0       0       0
 17665 ;;      Totals:         5       0       0       0
 17666 ;;Total ram usage:        5 bytes
 17667 ;; Hardware stack levels used:    1
 17668 ;; Hardware stack levels required when called:    1
 17669 ;; This function calls:
 17670 ;;		i2_delay
 17671 ;;		i2_write_spi
 17672 ;; This function is called by:
 17673 ;;		i2_DataClean
 17674 ;;		i2_SetDefaultPara
 17675 ;; This function uses a non-reentrant model
 17676 ;;
 17677                           
 17678                           	psect	text78
 17679  002B16                     __ptext78:
 17680                           	opt stack 0
 17681  002B16                     i2_write_F:
 17682                           	opt stack 21
 17683                           
 17684                           ;incstack = 0
 17685                           ;i2write_F@t stored from wreg
 17686  002B16  6E05               	movwf	i2write_F@t,c
 17687                           
 17688                           ;FRAM.c: 22: unsigned char L=0x00;
 17689  002B18  6A06               	clrf	i2write_F@L,c
 17690                           
 17691                           ;FRAM.c: 23: unsigned char H=0x00;
 17692  002B1A  6A07               	clrf	i2write_F@H,c
 17693                           
 17694                           ;FRAM.c: 24: H = (unsigned char)(address>> 8);
 17695  002B1C  C004  F007         	movff	i2write_F@address+1,i2write_F@H
 17696                           
 17697                           ;FRAM.c: 25: L = (unsigned char)(address & 0x00ff);
 17698  002B20  C003  F006         	movff	i2write_F@address,i2write_F@L
 17699                           
 17700                           ;FRAM.c: 26: RD3=0;
 17701  002B24  9683               	bcf	3971,3,c	;volatile
 17702                           
 17703                           ;FRAM.c: 27: write_spi(0x06);
 17704  002B26  0E06               	movlw	6
 17705  002B28  EC7B  F018         	call	i2_write_spi
 17706                           
 17707                           ;FRAM.c: 28: delay(100);
 17708  002B2C  6A02               	clrf	i2delay@t+1,c
 17709  002B2E  0E64               	movlw	100
 17710  002B30  6E01               	movwf	i2delay@t,c
 17711  002B32  EC57  F018         	call	i2_delay	;wreg free
 17712                           
 17713                           ;FRAM.c: 29: RD3=1;
 17714  002B36  8683               	bsf	3971,3,c	;volatile
 17715                           
 17716                           ;FRAM.c: 30: delay(100);
 17717  002B38  6A02               	clrf	i2delay@t+1,c
 17718  002B3A  0E64               	movlw	100
 17719  002B3C  6E01               	movwf	i2delay@t,c
 17720  002B3E  EC57  F018         	call	i2_delay	;wreg free
 17721                           
 17722                           ;FRAM.c: 31: RD3=0;
 17723  002B42  9683               	bcf	3971,3,c	;volatile
 17724                           
 17725                           ;FRAM.c: 32: write_spi(0x02);
 17726  002B44  0E02               	movlw	2
 17727  002B46  EC7B  F018         	call	i2_write_spi
 17728                           
 17729                           ;FRAM.c: 33: write_spi(H);
 17730  002B4A  5007               	movf	i2write_F@H,w,c
 17731  002B4C  EC7B  F018         	call	i2_write_spi
 17732                           
 17733                           ;FRAM.c: 34: write_spi(L);
 17734  002B50  5006               	movf	i2write_F@L,w,c
 17735  002B52  EC7B  F018         	call	i2_write_spi
 17736                           
 17737                           ;FRAM.c: 35: write_spi(t);
 17738  002B56  5005               	movf	i2write_F@t,w,c
 17739  002B58  EC7B  F018         	call	i2_write_spi
 17740                           
 17741                           ;FRAM.c: 36: RD3=1;
 17742  002B5C  8683               	bsf	3971,3,c	;volatile
 17743  002B5E  0012               	return		;funcret
 17744  002B60                     __end_ofi2_write_F:
 17745                           	opt stack 0
 17746                           tblptru	equ	0xFF8
 17747                           tblptrh	equ	0xFF7
 17748                           tblptrl	equ	0xFF6
 17749                           tablat	equ	0xFF5
 17750                           prodh	equ	0xFF4
 17751                           prodl	equ	0xFF3
 17752                           intcon	equ	0xFF2
 17753                           postinc0	equ	0xFEE
 17754                           wreg	equ	0xFE8
 17755                           indf1	equ	0xFE7
 17756                           postinc1	equ	0xFE6
 17757                           postdec1	equ	0xFE5
 17758                           fsr1h	equ	0xFE2
 17759                           fsr1l	equ	0xFE1
 17760                           indf2	equ	0xFDF
 17761                           postinc2	equ	0xFDE
 17762                           postdec2	equ	0xFDD
 17763                           fsr2h	equ	0xFDA
 17764                           fsr2l	equ	0xFD9
 17765                           status	equ	0xFD8
 17766                           
 17767 ;; *************** function i2_write_spi *****************
 17768 ;; Defined at:
 17769 ;;		line 12 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/SPI.c"
 17770 ;; Parameters:    Size  Location     Type
 17771 ;;  data            1    wreg     unsigned char 
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;  data            1    0[COMRAM] unsigned char 
 17774 ;; Return value:  Size  Location     Type
 17775 ;;                  1    wreg      void 
 17776 ;; Registers used:
 17777 ;;		wreg
 17778 ;; Tracked objects:
 17779 ;;		On entry : 0/0
 17780 ;;		On exit  : 0/0
 17781 ;;		Unchanged: 0/0
 17782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17783 ;;      Params:         0       0       0       0
 17784 ;;      Locals:         1       0       0       0
 17785 ;;      Temps:          0       0       0       0
 17786 ;;      Totals:         1       0       0       0
 17787 ;;Total ram usage:        1 bytes
 17788 ;; Hardware stack levels used:    1
 17789 ;; This function calls:
 17790 ;;		Nothing
 17791 ;; This function is called by:
 17792 ;;		i2_write_F
 17793 ;;		i2_read_F
 17794 ;; This function uses a non-reentrant model
 17795 ;;
 17796                           
 17797                           	psect	text79
 17798  0030F6                     __ptext79:
 17799                           	opt stack 0
 17800  0030F6                     i2_write_spi:
 17801                           	opt stack 22
 17802                           
 17803                           ;incstack = 0
 17804                           ;i2write_spi@data stored from wreg
 17805  0030F6  6E01               	movwf	i2write_spi@data,c
 17806                           
 17807                           ;SPI.c: 14: SSPBUF=data;
 17808  0030F8  C001  FFC9         	movff	i2write_spi@data,4041	;volatile
 17809  0030FC                     i2l452:
 17810  0030FC  A69E               	btfss	3998,3,c	;volatile
 17811  0030FE  D7FE               	goto	i2l452
 17812                           
 17813                           ;SPI.c: 16: SSPIF=0;
 17814  003100  969E               	bcf	3998,3,c	;volatile
 17815  003102  0012               	return		;funcret
 17816  003104                     __end_ofi2_write_spi:
 17817                           	opt stack 0
 17818                           tblptru	equ	0xFF8
 17819                           tblptrh	equ	0xFF7
 17820                           tblptrl	equ	0xFF6
 17821                           tablat	equ	0xFF5
 17822                           prodh	equ	0xFF4
 17823                           prodl	equ	0xFF3
 17824                           intcon	equ	0xFF2
 17825                           postinc0	equ	0xFEE
 17826                           wreg	equ	0xFE8
 17827                           indf1	equ	0xFE7
 17828                           postinc1	equ	0xFE6
 17829                           postdec1	equ	0xFE5
 17830                           fsr1h	equ	0xFE2
 17831                           fsr1l	equ	0xFE1
 17832                           indf2	equ	0xFDF
 17833                           postinc2	equ	0xFDE
 17834                           postdec2	equ	0xFDD
 17835                           fsr2h	equ	0xFDA
 17836                           fsr2l	equ	0xFD9
 17837                           status	equ	0xFD8
 17838                           
 17839 ;; *************** function i2_delay *****************
 17840 ;; Defined at:
 17841 ;;		line 56 in file "C:/Users/Administrator/Desktop/PIC_BLDC_HALL.X/motor.c"
 17842 ;; Parameters:    Size  Location     Type
 17843 ;;  t               2    0[COMRAM] unsigned int 
 17844 ;; Auto vars:     Size  Location     Type
 17845 ;;		None
 17846 ;; Return value:  Size  Location     Type
 17847 ;;                  1    wreg      void 
 17848 ;; Registers used:
 17849 ;;		wreg, status,2, status,0
 17850 ;; Tracked objects:
 17851 ;;		On entry : 0/0
 17852 ;;		On exit  : 0/0
 17853 ;;		Unchanged: 0/0
 17854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 17855 ;;      Params:         2       0       0       0
 17856 ;;      Locals:         0       0       0       0
 17857 ;;      Temps:          0       0       0       0
 17858 ;;      Totals:         2       0       0       0
 17859 ;;Total ram usage:        2 bytes
 17860 ;; Hardware stack levels used:    1
 17861 ;; This function calls:
 17862 ;;		Nothing
 17863 ;; This function is called by:
 17864 ;;		i2_write_F
 17865 ;; This function uses a non-reentrant model
 17866 ;;
 17867                           
 17868                           	psect	text80
 17869  0030AE                     __ptext80:
 17870                           	opt stack 0
 17871  0030AE                     i2_delay:
 17872                           	opt stack 21
 17873  0030AE                     i2l4118:
 17874  0030AE  0601               	decf	i2delay@t,f,c
 17875  0030B0  A0D8               	btfss	status,0,c
 17876  0030B2  0602               	decf	i2delay@t+1,f,c
 17877  0030B4  2801               	incf	i2delay@t,w,c
 17878  0030B6  E1FB               	bnz	i2l4118
 17879  0030B8  2802               	incf	i2delay@t+1,w,c
 17880  0030BA  E1F9               	bnz	i2l4118
 17881  0030BC  0012               	return		;funcret
 17882  0030BE                     __end_ofi2_delay:
 17883                           	opt stack 0
 17884                           tblptru	equ	0xFF8
 17885                           tblptrh	equ	0xFF7
 17886                           tblptrl	equ	0xFF6
 17887                           tablat	equ	0xFF5
 17888                           prodh	equ	0xFF4
 17889                           prodl	equ	0xFF3
 17890                           intcon	equ	0xFF2
 17891                           postinc0	equ	0xFEE
 17892                           wreg	equ	0xFE8
 17893                           indf1	equ	0xFE7
 17894                           postinc1	equ	0xFE6
 17895                           postdec1	equ	0xFE5
 17896                           fsr1h	equ	0xFE2
 17897                           fsr1l	equ	0xFE1
 17898                           indf2	equ	0xFDF
 17899                           postinc2	equ	0xFDE
 17900                           postdec2	equ	0xFDD
 17901                           fsr2h	equ	0xFDA
 17902                           fsr2l	equ	0xFD9
 17903                           status	equ	0xFD8
 17904                           tblptru	equ	0xFF8
 17905                           tblptrh	equ	0xFF7
 17906                           tblptrl	equ	0xFF6
 17907                           tablat	equ	0xFF5
 17908                           prodh	equ	0xFF4
 17909                           prodl	equ	0xFF3
 17910                           intcon	equ	0xFF2
 17911                           postinc0	equ	0xFEE
 17912                           wreg	equ	0xFE8
 17913                           indf1	equ	0xFE7
 17914                           postinc1	equ	0xFE6
 17915                           postdec1	equ	0xFE5
 17916                           fsr1h	equ	0xFE2
 17917                           fsr1l	equ	0xFE1
 17918                           indf2	equ	0xFDF
 17919                           postinc2	equ	0xFDE
 17920                           postdec2	equ	0xFDD
 17921                           fsr2h	equ	0xFDA
 17922                           fsr2l	equ	0xFD9
 17923                           status	equ	0xFD8
 17924                           
 17925                           	psect	rparam
 17926  0000                     tblptru	equ	0xFF8
 17927                           tblptrh	equ	0xFF7
 17928                           tblptrl	equ	0xFF6
 17929                           tablat	equ	0xFF5
 17930                           prodh	equ	0xFF4
 17931                           prodl	equ	0xFF3
 17932                           intcon	equ	0xFF2
 17933                           postinc0	equ	0xFEE
 17934                           wreg	equ	0xFE8
 17935                           indf1	equ	0xFE7
 17936                           postinc1	equ	0xFE6
 17937                           postdec1	equ	0xFE5
 17938                           fsr1h	equ	0xFE2
 17939                           fsr1l	equ	0xFE1
 17940                           indf2	equ	0xFDF
 17941                           postinc2	equ	0xFDE
 17942                           postdec2	equ	0xFDD
 17943                           fsr2h	equ	0xFDA
 17944                           fsr2l	equ	0xFD9
 17945                           status	equ	0xFD8
 17946                           
 17947                           	psect	temp
 17948  000053                     btemp:
 17949                           	opt stack 0
 17950  000053                     	ds	1
 17951  0000                     int$flags	set	btemp
 17952                           tblptru	equ	0xFF8
 17953                           tblptrh	equ	0xFF7
 17954                           tblptrl	equ	0xFF6
 17955                           tablat	equ	0xFF5
 17956                           prodh	equ	0xFF4
 17957                           prodl	equ	0xFF3
 17958                           intcon	equ	0xFF2
 17959                           postinc0	equ	0xFEE
 17960                           wreg	equ	0xFE8
 17961                           indf1	equ	0xFE7
 17962                           postinc1	equ	0xFE6
 17963                           postdec1	equ	0xFE5
 17964                           fsr1h	equ	0xFE2
 17965                           fsr1l	equ	0xFE1
 17966                           indf2	equ	0xFDF
 17967                           postinc2	equ	0xFDE
 17968                           postdec2	equ	0xFDD
 17969                           fsr2h	equ	0xFDA
 17970                           fsr2l	equ	0xFD9
 17971                           status	equ	0xFD8


Data Sizes:
    Strings     192
    Constant    3286
    Data        28
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      82
    BANK0           160     73     134
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_37(CODE[43]), STR_36(CODE[24]), STR_35(CODE[30]), STR_34(CODE[21]), 
		 -> STR_33(CODE[27]), STR_32(CODE[17]), STR_31(CODE[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_37(CODE[43]), STR_36(CODE[24]), STR_35(CODE[30]), STR_34(CODE[21]), 
		 -> STR_33(CODE[27]), STR_32(CODE[17]), STR_31(CODE[11]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> DispPage1@buf(BANK0[5]), IDPage@buf(BANK0[4]), SetPage@buf(BANK0[4]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> DispPage1@buf(BANK0[5]), IDPage@buf(BANK0[4]), SetPage@buf(BANK0[4]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> DispPage1@buf(BANK0[5]), IDPage@buf(BANK0[4]), SetPage@buf(BANK0[4]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> DispPage1@buf(BANK0[5]), IDPage@buf(BANK0[4]), SetPage@buf(BANK0[4]), 

    TimeFormat@ascii	PTR unsigned char  size(1) Largest target is 7
		 -> table(COMRAM[7]), 

    Ascii2Str@buf	PTR unsigned char  size(1) Largest target is 4
		 -> IDPage@buf(BANK0[4]), TimePage@buf(COMRAM[3]), 

    set_time@date	PTR unsigned char  size(1) Largest target is 7
		 -> start(BANK0[7]), table(COMRAM[7]), 

    Send_Str@data	PTR unsigned char  size(2) Largest target is 43
		 -> STR_37(CODE[43]), STR_36(CODE[24]), STR_35(CODE[30]), STR_34(CODE[21]), 
		 -> STR_33(CODE[27]), STR_32(CODE[17]), STR_31(CODE[11]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> DispPage1@buf(BANK0[5]), IDPage@buf(BANK0[4]), SetPage@buf(BANK0[4]), 

    OLED_DrawBMP@BMP	PTR unsigned char  size(2) Largest target is 512
		 -> Logo(CODE[512]), 

    LCD_HZ@data	PTR unsigned char  size(2) Largest target is 2080
		 -> F16x16_HZ(CODE[2080]), 

    LCD_P8x16Str@ch	PTR unsigned char  size(2) Largest target is 5
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[5]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), DispPage1@buf(BANK0[5]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[3]), STR_17(CODE[2]), IDPage@buf(BANK0[4]), 
		 -> STR_16(CODE[2]), STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> TimePage@buf(COMRAM[3]), STR_12(CODE[3]), STR_11(CODE[2]), STR_10(CODE[3]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[3]), STR_6(CODE[2]), 
		 -> SetPage@buf(BANK0[4]), STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->___ftadd
    _set_time->_write_cmd
    _set_time->_write_data
    _read_F->_read_spi
    _read_F->_write_spi
    _readAD->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _get_time->_read_time
    _get_time->_write_cmd
    _get_time->_write_data
    _delay_n->_delay
    _TimePage->_LCD_P8x16Str
    _SetOKPage->_LCD_HZ
    _SetDefaultPara->_write_F
    ___lbtoft->___ftpack
    ___ftdiv->___ftadd
    _ResetPage->_LCD_P8x16Str
    _LCD_INIT->_LCD_CLS
    _LCD_INIT->_LCD_Set_Pos
    _LCD_CLS->_LCD_WrCmd
    _LCD_CLS->_LCD_WrDat
    _KeyScan->_delay
    _Fill_Data->_write_F
    _Display_Menu->_Send_Str
    _Send_Str->_strlen
    _utoa->___lwdiv
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    _LCD_P8x16Str->_LCD_Set_Pos
    _LCD_P8x16Str->___lbmod
    _LCD_P8x16Sp->_LCD_Set_Pos
    _DispLogo->_OLED_DrawBMP
    _OLED_DrawBMP->_LCD_Set_Pos
    _LCD_P6x8Str->_show6x8
    _show6x8->_LCD_Set_Pos
    _LCD_HZ->_LCD_Set_Pos
    _LCD_WrDat->_write_spi
    _LCD_Set_Pos->_LCD_WrCmd
    _LCD_WrCmd->_write_spi
    _DataClean->_write_F
    _write_F->_Hex2Dex
    _DS1302_INIT->_write_cmd
    _DS1302_INIT->_write_data

Critical Paths under _ISR in COMRAM

    _ISR->i2_DataClean
    i2_read_F->i2_read_spi
    i2_read_F->i2_write_spi
    i2_SetDefaultPara->i2_write_F
    i2_Display_Menu->i2_Send_Str
    i2_Send_Str->i2_strlen
    i2_DataClean->i2_write_F
    i2_write_F->i2_delay

Critical Paths under _main in BANK0

    _main->_DispPage1
    _main->_SetPage
    _readAD->___ftsub
    ___ftsub->___ftadd
    _SetPage->_itoa
    _SET_DUTY->___fttol
    ___ftdiv->___ftadd
    _IDPage->_itoa
    _DispPage1->_itoa
    _itoa->___awmod
    ___fttol->___ftdiv
    ___awmod->___fttol

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    14      5  238542
                                             54 BANK0     19    14      5
                            _AD_INIT
                           _CAP_INIT
                        _DS1302_INIT
                          _DataClean
                           _DispLogo
                          _DispPage1
                       _Display_Menu
                          _FRAM_INIT
                          _Fill_Data
                             _IDPage
                           _KEY_INIT
                            _KeyScan
                            _LCD_CLS
                           _LCD_INIT
                           _PWM_INIT
                          _ResetPage
                           _SET_DUTY
                     _SetDefaultPara
                          _SetOKPage
                            _SetPage
                         _TimeFormat
                           _TimePage
                          _UART_INIT
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lbmod
                           ___lbtoft
                            _delay_n
                           _get_time
                             _readAD
                             _read_F
                           _set_time
                            _write_F
 ---------------------------------------------------------------------------------
 (1) _set_time                                             3     3      0     288
                                             32 COMRAM     3     3      0
                          _write_cmd
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _read_F                                               5     3      2     494
                                             30 COMRAM     5     3      2
                           _read_spi
                          _write_spi
 ---------------------------------------------------------------------------------
 (2) _read_spi                                             1     1      0      23
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readAD                                               3     3      0   15857
                                              9 BANK0      3     3      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftsub
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3860
                                              3 BANK0      6     0      6
                            ___ftadd
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3563
                                             55 COMRAM     9     3      6
                                              0 BANK0      3     3      0
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2384
                                             37 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _get_time                                             2     2      0     344
                                             32 COMRAM     2     2      0
                          _read_time
                          _write_cmd
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _read_time                                            3     3      0      70
                                             29 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _delay_n                                              1     1      0     364
                                             31 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TimePage                                            10     4      6   27608
                                             44 COMRAM    10     4      6
                          _Ascii2Str
                             _LCD_HZ
                        _LCD_P8x16Sp
                       _LCD_P8x16Str
 ---------------------------------------------------------------------------------
 (1) _TimeFormat                                           5     3      2    1143
                                             29 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SetPage                                              9     4      5   28208
                                             45 BANK0      9     4      5
                             _LCD_HZ
                       _LCD_P8x16Str
                            ___lbmod
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _SetOKPage                                            0     0      0   17348
                             _LCD_HZ
                        _LCD_P8x16Sp
 ---------------------------------------------------------------------------------
 (1) _SetDefaultPara                                       0     0      0    2144
                            _write_F
 ---------------------------------------------------------------------------------
 (1) _SET_DUTY                                             3     3      0    9418
                                             33 BANK0      3     3      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2131
                                             37 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2749
                                              3 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _ResetPage                                            1     1      0   24337
                                             44 COMRAM     1     1      0
                             _LCD_HZ
                       _LCD_P8x16Str
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1     479
                                             29 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PWM_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             0     0      0    1274
                           _INIT_SPI
                            _LCD_CLS
                        _LCD_Set_Pos
                          _LCD_WrCmd
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LCD_CLS                                              2     2      0     202
                                             31 COMRAM     2     2      0
                          _LCD_WrCmd
                          _LCD_WrDat
 ---------------------------------------------------------------------------------
 (1) _KeyScan                                              4     4      0     523
                                             31 COMRAM     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _KEY_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IDPage                                               4     4      0   28578
                                             45 BANK0      4     4      0
                          _Ascii2Str
                             _LCD_HZ
                       _LCD_P8x16Str
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _Ascii2Str                                            2     1      1     988
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Fill_Data                                            5     5      0    2457
                                             37 COMRAM     5     5      0
                            _Hex2Dex
                            _write_F
 ---------------------------------------------------------------------------------
 (2) _Hex2Dex                                              3     3      0     114
                                             29 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _FRAM_INIT                                            0     0      0       0
                           _INIT_SPI
 ---------------------------------------------------------------------------------
 (2) _INIT_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Menu                                         0     0      0     715
                           _Send_Str
 ---------------------------------------------------------------------------------
 (2) _Send_Str                                             6     4      2     715
                                             33 COMRAM     6     4      2
                           _Send_Hex
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     154
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _Send_Hex                                             1     1      0      22
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DispPage1                                            9     5      4   34942
                                             45 BANK0      9     5      4
                             _LCD_HZ
                        _LCD_P8x16Sp
                       _LCD_P8x16Str
                            ___awmod
                             ___ftge
                            ___ftmul
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     2      4    3382
                                             39 BANK0      6     2      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     4      4    1165
                                             36 COMRAM     8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                             29 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     572
                                             18 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3896
                                             41 COMRAM    14     8      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2109
                                             29 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     264
                                             29 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     424
                                             33 BANK0      6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_P8x16Str                                        11     8      3    8412
                                             33 COMRAM    11     8      3
                        _LCD_Set_Pos
                          _LCD_WrDat
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_P8x16Sp                                          9     7      2    1924
                                             33 COMRAM     9     7      2
                        _LCD_Set_Pos
                          _LCD_WrDat
 ---------------------------------------------------------------------------------
 (1) _DispLogo                                             0     0      0   22516
                             _LCD_HZ
                        _LCD_P6x8Str
                       _OLED_DrawBMP
 ---------------------------------------------------------------------------------
 (2) _OLED_DrawBMP                                        12     7      5    1280
                                             33 COMRAM    12     7      5
                        _LCD_Set_Pos
                          _LCD_WrDat
 ---------------------------------------------------------------------------------
 (2) _LCD_P6x8Str                                          3     1      2    5812
                                             39 COMRAM     3     1      2
                            _show6x8
 ---------------------------------------------------------------------------------
 (3) _show6x8                                              7     5      2    4346
                                             33 COMRAM     6     4      2
                        _LCD_Set_Pos
                          _LCD_WrDat
 ---------------------------------------------------------------------------------
 (2) _LCD_HZ                                              10     6      4   15424
                                             33 COMRAM    10     6      4
                        _LCD_Set_Pos
                          _LCD_WrDat
 ---------------------------------------------------------------------------------
 (3) _LCD_WrDat                                            1     1      0      44
                                             30 COMRAM     1     1      0
                          _write_spi
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Pos                                          2     1      1     686
                                             31 COMRAM     2     1      1
                          _LCD_WrCmd
 ---------------------------------------------------------------------------------
 (4) _LCD_WrCmd                                            1     1      0      44
                                             30 COMRAM     1     1      0
                          _write_spi
 ---------------------------------------------------------------------------------
 (1) _DataClean                                            8     4      4    2439
                                             37 COMRAM     8     4      4
                            _write_F
 ---------------------------------------------------------------------------------
 (1) _write_F                                              5     3      2    2144
                                             32 COMRAM     5     3      2
                            _Hex2Dex (ARG)
                              _delay
                          _write_spi
 ---------------------------------------------------------------------------------
 (2) _write_spi                                            1     1      0      22
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     0      2     342
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DS1302_INIT                                          0     0      0     138
                          _write_cmd
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           3     3      0      69
                                             29 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _write_cmd                                            3     3      0      69
                                             29 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CAP_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AD_INIT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 14    14      0    2240
                                             15 COMRAM    14    14      0
                        i2_DataClean
                     i2_Display_Menu
                        i2_FRAM_INIT
                         i2_Send_Hex
                   i2_SetDefaultPara
                        i2_UART_INIT
                           i2_read_F
 ---------------------------------------------------------------------------------
 (8) i2_read_F                                             5     3      2     212
                                              1 COMRAM     5     3      2
                         i2_read_spi
                        i2_write_spi
 ---------------------------------------------------------------------------------
 (9) i2_read_spi                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_UART_INIT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_SetDefaultPara                                     0     0      0     548
                          i2_write_F
 ---------------------------------------------------------------------------------
 (8) i2_FRAM_INIT                                          0     0      0       0
                         i2_INIT_SPI
 ---------------------------------------------------------------------------------
 (9) i2_INIT_SPI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_Display_Menu                                       0     0      0     411
                         i2_Send_Str
 ---------------------------------------------------------------------------------
 (9) i2_Send_Str                                           6     4      2     411
                                              4 COMRAM     6     4      2
                         i2_Send_Hex
                           i2_strlen
 ---------------------------------------------------------------------------------
 (10) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_Send_Hex                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_DataClean                                          8     4      4     691
                                              7 COMRAM     8     4      4
                          i2_write_F
 ---------------------------------------------------------------------------------
 (9) i2_write_F                                            5     3      2     548
                                              2 COMRAM     5     3      2
                            i2_delay
                        i2_write_spi
 ---------------------------------------------------------------------------------
 (9) i2_write_spi                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_delay                                             2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_INIT
   _CAP_INIT
   _DS1302_INIT
     _write_cmd
     _write_data
   _DataClean
     _write_F
       _Hex2Dex (ARG)
       _delay (ARG)
       _write_spi (ARG)
   _DispLogo
     _LCD_HZ
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P6x8Str
       _show6x8
         _LCD_Set_Pos
           _LCD_WrCmd
             _write_spi
         _LCD_WrDat
           _write_spi
     _OLED_DrawBMP
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
   _DispPage1
     _LCD_HZ
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P8x16Sp
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P8x16Str
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
       ___lbmod (ARG)
     ___awmod
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     _itoa
       ___awmod (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       _utoa (ARG)
         ___lwdiv
         ___lwmod
   _Display_Menu
     _Send_Str
       _Send_Hex
       _strlen
   _FRAM_INIT
     _INIT_SPI
   _Fill_Data
     _Hex2Dex
     _write_F
       _Hex2Dex (ARG)
       _delay (ARG)
       _write_spi (ARG)
   _IDPage
     _Ascii2Str
     _LCD_HZ
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P8x16Str
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
       ___lbmod (ARG)
     _itoa
       ___awmod (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       _utoa (ARG)
         ___lwdiv
         ___lwmod
   _KEY_INIT
   _KeyScan
     _delay
   _LCD_CLS
     _LCD_WrCmd
       _write_spi
     _LCD_WrDat
       _write_spi
   _LCD_INIT
     _INIT_SPI
     _LCD_CLS
       _LCD_WrCmd
         _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_Set_Pos
       _LCD_WrCmd
         _write_spi
     _LCD_WrCmd
       _write_spi
     _delay
   _PWM_INIT
   _ResetPage
     _LCD_HZ
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P8x16Str
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
       ___lbmod (ARG)
     ___lbmod
   _SET_DUTY
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetDefaultPara
     _write_F
       _Hex2Dex (ARG)
       _delay (ARG)
       _write_spi (ARG)
   _SetOKPage
     _LCD_HZ
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P8x16Sp
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
   _SetPage
     _LCD_HZ
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P8x16Str
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
       ___lbmod (ARG)
     ___lbmod
     _itoa
       ___awmod (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       _utoa (ARG)
         ___lwdiv
         ___lwmod
   _TimeFormat
   _TimePage
     _Ascii2Str
     _LCD_HZ
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P8x16Sp
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
     _LCD_P8x16Str
       _LCD_Set_Pos
         _LCD_WrCmd
           _write_spi
       _LCD_WrDat
         _write_spi
       ___lbmod (ARG)
   _UART_INIT
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbmod
   ___lbtoft
     ___ftpack
   _delay_n
     _delay
   _get_time
     _read_time
     _write_cmd
     _write_data
   _readAD
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
     ___lbtoft
       ___ftpack
   _read_F
     _read_spi
     _write_spi
   _set_time
     _write_cmd
     _write_data
   _write_F
     _Hex2Dex (ARG)
     _delay (ARG)
     _write_spi (ARG)

 _ISR (ROOT)
   i2_DataClean
     i2_write_F
       i2_delay
       i2_write_spi
   i2_Display_Menu
     i2_Send_Str
       i2_Send_Hex
       i2_strlen
   i2_FRAM_INIT
     i2_INIT_SPI
   i2_Send_Hex
   i2_SetDefaultPara
     i2_write_F
       i2_delay
       i2_write_spi
   i2_UART_INIT
   i2_read_F
     i2_read_spi
     i2_write_spi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      86       5       83.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     40      52       1       87.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8       3        0.0%
DATA                 0      0      D8      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Jun 05 17:31:52 2016

                       l62 19F2                         _SH 00CB                         _SL 00D1  
             LCD_P8x16Sp@c 0029               LCD_P8x16Sp@i 002A               LCD_P8x16Sp@x 0028  
             LCD_P8x16Sp@y 0022               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000                LCD_HZ@adder 0029               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000               ___ftadd@exp1 0062               ___ftadd@exp2 0061  
              __CFG_LVP$ON 000000               ___ftadd@sign 0060               ?_LCD_Set_Pos 0020  
                      l282 0B2E                        l275 11AE                        l452 30E0  
                      l287 0D82                        l458 3080                        l708 0638  
                      l904 2DFA                        l912 2D6C                        l497 30D2  
                      l770 0A92                        l773 0A9A                        _CKE 007E3E  
                      l972 1BA8                        l981 1BE8                        l898 2E26  
                      _CKP 007E34                        _GIE 007F97                        l989 1C28  
             __CFG_CPB$OFF 000000                        _RC1 007C11                        _RD0 007C18  
                      _RC2 007C12                        _RD1 007C19                        _RC3 007C13  
                      _RE0 007C20                        _RD2 007C1A                        _RB6 007C0E  
                      _RE1 007C21                        _RD3 007C1B                        _RC5 007C15  
                      _RB7 007C0F                        _RE2 007C22                        _RD4 007C1C  
                      _RD6 007C1E                        _RD7 007C1F               __CFG_CPD$OFF 000000  
                      _ISR 0008                        _SMP 007E3F                        _Lev 00A9  
             ___awmod@sign 0086               LCD_P6x8Str@x 002A               LCD_P6x8Str@y 0028  
                      wreg 000FE8               __CFG_IESO$ON 000000            __end_of_AD_INIT 3006  
            LCD_P8x16Sp@ch 0023             ??_LCD_P8x16Str 0025              LCD_P8x16Str@c 0029  
          __end_of_LCD_CLS 2DC6              LCD_P8x16Str@i 002C              LCD_P8x16Str@j 002A  
            LCD_P8x16Str@x 002B              LCD_P8x16Str@y 0022              main@Arrow_Ptr 00A6  
                     ?_ISR 0001               ___ftdiv@cntr 006C                       ISR@i 001C  
             ___ftdiv@sign 0071                       l1300 1F00                       l1216 24DA  
                     l1251 18D4                       l1228 2538                       l1415 2AC2  
                     l1255 18F8                       l1336 2428                       l1425 2C18  
                     l4010 2E80                       l1266 1984                       l1275 1996  
                     l4012 2E84                       l1284 210C                       l1276 19A8  
                     l1286 2154                       l4032 1906                       l4026 18E2  
                     l4220 1CAA                       l4212 1C70                       l5020 0B10  
                     l4060 1956                       l5030 0B88                       l4054 193E  
                     l4312 266A                       l4208 17A6                       l4056 1948  
                     l4048 1920                       l4242 1CF6                       l4066 1974  
                     l4058 1950                       l4260 1D8E                       l4228 1CB6  
                     l4252 1D4C                       l4084 23BC                       l5060 0C96  
                     l5044 0C08                       l5028 0B6A                       l4172 2F7A  
                     l4068 197E                       l4350 2956                       l4262 1D92  
                     l4270 1DA0                       l4094 23EA                       l4182 2D98  
                     l5230 3052                       l4078 19CC                       l4328 269E  
                     l4360 2980                       l4344 2940                       l4280 1DC6  
                     l4264 1D96                       l4272 1DBA                       l4256 1D86  
                     l5320 1C4C                       l4346 2946                       l4266 1D9A  
                     l4258 1D8A                       l5090 0DE6                       l5082 0D9E  
                     l5314 1C2E                       l5242 1B5C                       l4194 2DAE  
                     l4450 20EC                       l5410 2C30                       l4356 2978  
                     l4540 2834                       l4372 2D50                       l5084 0DB4  
                     l5252 1B82                       l5228 304A                       l4524 2C68  
                     l4294 1E06                       l3910 24E2                       l4630 2230  
                     l4622 220C                       l4614 21F4                       l5318 1C42  
                     l5270 1BAE                       l5254 1B8C                       l4560 2874  
                     l4552 285E                       l4544 2840                       l4536 2828  
                     l3920 2524                       l3912 24EC                       l4624 2218  
                     l5088 0DD0                       l4392 2B8A                       l4384 28AC  
                     l5248 1B6E                       l4546 2848                       l3922 252E  
                     l3914 2500                       l4490 1E98                       l4626 221C  
                     l4618 2204                       l5274 1BC2                       l5610 04A0  
                     l5522 035C                       l4548 284C                       l4556 2868  
                     l4580 28F6                       l4388 2B6A                       l5292 1BEE  
                     l5276 1BCC                       l4468 2130                       l5380 2570  
                     l5348 2748                       l4572 2CA4                       l5532 03BA  
                     l4742 2CE8                       l4590 292C                       l3918 2512  
                     l4486 1E78                       l3950 2A9E                       l4646 2F12  
                     l4638 2EFC                       l4910 10A2                       l5390 2594  
                     l5366 2784                       l5614 04B0                       l5606 0492  
                     l5622 04C6                       l5526 036A                       l4584 2914  
                     l3936 254A                       l5296 1C02                       l5384 257C  
                     l5640 05A6                       l5616 04B6                       l4738 2CD6  
                     l3946 2A92                       l3970 2BFC                       l5298 1C0C  
                     l5802 086E                       l5730 06CA                       l5810 0882  
                     l5650 05BE                       l3980 308E                       l4596 21A0  
                     l3948 2A9A                       l5396 25BA                       l5820 08C4  
                     l5740 06F6                       l5708 069E                       l5660 05D2  
                     l5652 05C0                       l3990 2A3C                       l4598 21AA  
                     l3958 2AB8                       l3974 2C0E                       l3966 2BF0  
                     l5830 08EE                       l5750 073C                       l5718 06B4  
                     l5670 05F0                       l5574 0438                       l3968 2BF8  
                     l4952 16D2                       l5840 0934                       l5824 08DA  
                     l5760 076A                       l5728 06C6                       l5672 05F6  
                     l5592 0462                       _ADIF 007CF6                       l4890 0FE0  
                     l5914 0A0E                       l5842 0944                       l5834 0900  
                     l5826 08E0                       l5770 07B0                       l5658 05D0  
                     l5860 0986                       l5836 0910                       l5748 072C  
                     l3998 2A48                       l4894 0FFA                       l5926 0A2C  
                     l5838 0922                       l5846 0954                       l5782 07E8  
                     l5774 07BA                       l5678 062A                       l5598 0472  
                     l5936 0A56                       l5880 09C4                       l5944 0A68  
                     l5848 0966                       l5784 07EE                       l5768 07A0  
                     l5688 0644                       l5696 0654                       l5954 0A84  
                     l5794 085C                       l5778 07C8                       l5868 099A  
                     _ADON 007E10                       STR_1 3FEE                       STR_2 3FEE  
                     STR_3 3FEE                       STR_4 3FF4                       STR_5 3FFD  
                     STR_6 3FFD                       STR_7 3FEE                       STR_8 3FEF  
                     STR_9 3FFD                       _BRGH 007D62                       _CREN 007D5C  
                     u3110 2E46                       u3130 2E1A                       u3211 1E68  
                     u3150 2D90                       u3231 1E88                       u3161 20DC  
                     u2611 18A4                       u3181 20FC                       u2621 18BA  
                     u3371 2198                       u3390 21C8                       u3800 1C26  
                     u3720 1BA6                       u3395 21C0                       _PEIE 007F96  
                     u2940 1C9C                       u3580 0BD0                       u3590 0C5C  
                     u3840 1C66                       u3760 1BE6                       u3850 2768  
                     u3930 2C50                       u2947 1C92                       _RCIE 007CED  
                     u2980 1D78                       _RCIF 007CF5                       u3870 27A4  
                     u2987 1D6E                       _PTEN 007BF7                       _SPEN 007D5F  
                     _TRMT 007D61                       _SYNC 007D64         __size_of_FRAM_INIT 0006  
                     _Page 00DE                       _Logo 3D3F              __CFG_FCMEN$ON 000000  
                     _main 0346                       _hits 00CE               ___ftpack@arg 001E  
                     _itoa 2D34               ___ftpack@exp 0021                       _time 00C7  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
                     btemp 0053                       _utoa 23B2                 i2_read_spi 309E  
            __CFG_BOREN$ON 000000                ?i2_INIT_SPI 0001         __size_of_LCD_WrDat 0012  
       __size_of_LCD_WrCmd 0012                       prodh 000FF4        __end_ofi2_write_spi 3104  
                     prodl 000FF3            __end_ofi2_delay 30BE                       start 0342  
         __end_of_CAP_INIT 2ECA            __end_of_Hex2Dex 2F84             write_data@data 001E  
            __CFG_MCLRE$ON 000000               ___param_bank 000010               ___ftmul@sign 0034  
          __end_of_KeyScan 1C68              write_spi@data 001E                      ??_ISR 0010  
           LCD_P8x16Str@ch 0023           __end_of_LCD_INIT 1FFE               ___fttol@exp1 0080  
             ___fttol@lval 007C            __end_of_SetPage 10BC          __end_of_F16x16_HZ 3D3F  
         __end_of_INIT_SPI 301C                      _F8X16 3269                      ?_main 0096  
         __end_of_KEY_INIT 30CC                      _IC1IE 007D19                      _IC1IF 007D21  
                    ?_itoa 0087            __end_of___ftadd 19F2                      STR_10 3FEE  
                    STR_11 3FEF                      STR_20 3FFD                      STR_12 3FF1  
                    STR_21 3FEF                      STR_13 3FFD                      STR_14 3FFD  
                    STR_30 3FF4                      STR_22 3FF7                      STR_23 3FEF  
                    STR_15 3FF4                      STR_31 3FE1                      STR_16 3FFD  
                    STR_24 3FEC                      STR_32 3FD0                      _BRG16 007D53  
                    STR_17 3FEF                      STR_25 3FFB                      STR_33 3F88  
                    STR_18 3FF1                      STR_26 3FF9                      STR_34 3FBB  
                    STR_27 3FEE                      STR_19 3FFD                      STR_35 3F6A  
                    STR_28 3FEE                      STR_36 3FA3            __end_of___awmod 287E  
                    STR_29 3FEE                      STR_37 3F3F            __end_of___lbmod 2F1A  
          __end_of___ftdiv 2186                      ?_utoa 0025            __end_of___ftmul 1F2E  
          __end_of___ftsub 2C92            __end_of___fttol 2242                      _PDC0H 000F78  
                    _PDC1H 000F76                      _PDC2H 000F74                      _PDC0L 000F79  
                    _PDC1L 000F77                      _PDC2L 000F75                      _T5CON 000FB7  
          __end_of___lwdiv 2ACC            __end_of___lwmod 2C22                      i2l452 30FC  
                    i2l800 0252                      i2l458 30A0                      i2l497 30EE  
                    i2l782 0032                      i2l786 0086                      i2l789 0100  
                    i2l799 023A                      _RCREG 000FAE                      _RESEN 007DBE  
                    _RCSTA 000FAB                      _SPBRG 000FAF                      _PORTA 000F80  
                    _PTMRH 000F7C                      _PTMRL 000F7D                      _SSPIF 007CF3  
                    _SSPEN 007E35                      _TXREG 000FAD                      _TXSTA 000FAC  
             ?i2_FRAM_INIT 0001            __end_of_delay_n 305A              __CFG_WRT0$OFF 000000  
       __size_of_UART_INIT 001A              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000                      _Speed 00C5  
         __end_of_SET_DUTY 2650              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000              ___awtoft@sign 0029  
                    _delay 308E                      _dutyH 00CC                      _dutyL 00CD  
                    _table 004B              ___ftpack@sign 0022           __end_of_PWM_INIT 2F62  
                    _start 00DF             __pbitbssCOMRAM 0290            __end_of_show6x8 2A82  
                    tablat 000FF5            i2read_F@address 0002                      utoa@c 002B  
                    utoa@v 0029                      status 000FD8            __end_of_write_F 2B16  
         __end_ofi2_read_F 2E76                 SetPage@buf 0092                 SetPage@lev 008F  
              ?i2_Send_Hex 0001                ?i2_Send_Str 0005           __end_ofi2_strlen 2EF4  
         __end_of_DispLogo 24CE            __initialization 27AE             __CFG_HPOL$HIGH 000000  
             __end_of_Logo 3F3F         __size_of_DataClean 0036               __end_of_main 0AAE  
          _STATE_HALL_BACK 00D8               __end_of_itoa 2D66               __end_of_utoa 2442  
             ?i2_UART_INIT 0001         __size_of_Ascii2Str 005A          __end_of_FRAM_INIT 3112  
                ??_AD_INIT 001E             __CFG_LPOL$HIGH 000000                     ??_main 009B  
            ___fttol@sign1 007B                     ??_itoa 0041           __end_of_Send_Hex 30DA  
             LCD_WrDat@dat 001F           __end_of_Send_Str 2BA2                     ??_utoa 0029  
             LCD_WrCmd@cmd 001F              __activetblptr 000002               LCD_Set_Pos@x 0021  
             LCD_Set_Pos@y 0020                  ??_LCD_CLS 0020           __end_of_TimePage 16E6  
        __end_of_LCD_WrDat 306C          __end_of_LCD_WrCmd 307E                 ResetPage@x 002D  
       __size_of_Fill_Data 00CC         __size_of_DispPage1 036C        __size_ofi2_INIT_SPI 0016  
       __size_ofi2_write_F 004A                 i2strlen@cp 0003                 i2write_F@H 0007  
               i2write_F@L 0006                 i2write_F@t 0005       __end_of_Display_Menu 29DC  
                   ?_delay 001E                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0                     _ADRESH 000FC4                     _ADRESL 000FC3  
                   _ANSEL0 000FB8                     _ANSEL1 000FB9                     _AD_RES 00BD  
         __end_of___awtoft 2CC8           __end_of___ftpack 2558                i2_write_spi 30F6  
         __end_of___lbtoft 2F3E                     _F6x8_1 34B9                     _GODONE 007E11  
                ??i2_delay 0003                     _LCD_HZ 2650                  ??_Hex2Dex 001E  
                   i2l4122 2ED4                     i2l4124 2ED8                     i2l4118 30AE  
           __CFG_WDTEN$OFF 000000                     i2l6020 0134                     i2l6012 00F2  
                   i2l6112 02E8                     i2l6040 0200                     i2l6024 015C  
                   i2l6114 02F4                     i2l6050 0248                     i2l6036 01E6  
                   i2l6028 017E                     i2l6126 030E                     i2l6070 0270  
                   i2l6128 031A                     i2l6074 0276                     i2l6092 02B6  
                   i2l6076 028E                     i2l5470 2D1E                     _IDPage 10BC  
                   i2l5466 2D0C                     i2l6098 02CA                     i2l4694 2BAC  
                   i2l4698 2BCC                     i2l5970 003A                     i2l5980 0076  
                   i2l5990 009C                     i2l5974 0048                     i2l5984 0082  
                   i2l5986 008E                     i2l5996 00CA              ?_OLED_DrawBMP 0022  
             ?i2_DataClean 0008                     _PTCON0 000F7F             __CFG_WINEN$OFF 000000  
                   _TMR5IE 007D18                     _TMR5IF 007D20                     _PTPERH 000F7A  
                   _PTPERL 000F7B                     _TRISA0 007C90                     _TRISA1 007C91  
                   _TRISB0 007C98                     _TRISA2 007C92                     _TRISB1 007C99  
                   _TRISA3 007C93                     _TRISB2 007C9A                     _TRISA4 007C94  
                   _TRISC1 007CA1                     _TRISB3 007C9B                     _TRISD0 007CA8  
                   _TRISC2 007CA2                     _TRISB4 007C9C                     _TRISD1 007CA9  
                   _TRISC3 007CA3                     _TRISE0 007CB0                     _TRISD2 007CAA  
                   _TRISC4 007CA4                     _TRISB6 007C9E                     _TRISE1 007CB1  
                   _TRISD3 007CAB                     _TRISC5 007CA5                     _TRISB7 007C9F  
                   _TRISE2 007CB2                     _TRISD4 007CAC                     _TRISC6 007CA6  
                   _TRISD5 007CAD                     _TRISC7 007CA7                     _TRISD6 007CAE  
                   _TRISD7 007CAF                     _SSPCON 000FC6                     _SSPBUF 000FC9  
              ?i2_read_spi 0001                  ??_KeyScan 0020             __CFG_PWMPIN$ON 000000  
               _OperatorID 004A         __size_of_SetOKPage 0074       __size_of_LCD_P8x16Sp 00D8  
               _TimeFormat 2558                  ??_SetPage 0041             __CFG_SSPMX$RC7 000000  
        __end_of_UART_INIT 2FBA       __size_of_LCD_P6x8Str 01AE                     _UseNum 0049  
         __end_of_get_time 27AE                     ___ftge 28D8       __end_of_LCD_P8x16Str 1D80  
                ??___ftadd 003E             __CFG_STVREN$ON 000000                  ??___awmod 0041  
                ??___lbmod 001F                  ??___ftdiv 0069                  ??___ftmul 0030  
                ??___ftsub 0041                  ??___fttol 0076                  ??___lwdiv 0022  
                ??___lwmod 0022                     _readAD 19F2                i2read_spi@t 0001  
                   _read_F 2DC6         __size_of_ResetPage 0234                     delay@t 001E  
                   clear_0 27B4                     clear_1 27C2           __end_of_read_spi 308E  
          ___awmod@divisor 0083                  ??_delay_n 0020            ___awmod@counter 0085  
                   _strlen 2E76      ___ftmul@f3_as_product 0035               __pdataCOMRAM 004A  
         __end_of_set_time 2C5A       __size_of_LCD_Set_Pos 001C               __mediumconst 3268  
      __size_ofi2_Send_Hex 000E                  ??_show6x8 0024                     tblptrh 000FF7  
      __size_ofi2_Send_Str 0042                     tblptrl 000FF6                     tblptru 000FF8  
                ?_CAP_INIT 0001            LCD_P6x8Str@mode 0029          __end_of_DataClean 2CFE  
                ??_write_F 0023             ??_OLED_DrawBMP 0027                  ?_LCD_INIT 0001  
          ___lbmod@divisor 001E          __end_of_Ascii2Str 28D8                 __accesstop 0060  
  __end_of__initialization 2808            ___lbmod@counter 0020  __size_ofi2_SetDefaultPara 00B8  
               ___ftadd@f1 0038                 ___ftadd@f2 003B            __CFG_FLTAMX$RC1 000000  
               ___ftge@ff1 001E                 ___ftge@ff2 0021              __end_of_F8X16 34B9  
                ?_INIT_SPI 0001              ___rparam_used 000001                 ___ftdiv@f1 0063  
               ___ftdiv@f2 0066                 ___ftdiv@f3 006D                  ?_KEY_INIT 0001  
        __end_of_Fill_Data 20CA          __end_of_DispPage1 0E1A                 ___awtoft@c 0026  
               ___lbtoft@c 0029          __end_ofi2_write_F 2B60                 ___ftmul@f1 002A  
               ___ftmul@f2 002D                 ___ftsub@f1 0063                 ___ftsub@f2 0066  
               ___fttol@f1 0072             __pcstackCOMRAM 0001               __pidataBANK0 3032  
                ?_SET_DUTY 0001              __end_of_delay 309E                  IDPage@buf 008D  
                ?_PWM_INIT 0001        __size_ofi2_read_spi 0010                  ?i2_read_F 0002  
        __end_of_SetOKPage 273C                 ??_CAP_INIT 001E                    ??_delay 0020  
                ?i2_strlen 0001              ??_DS1302_INIT 0021                  ?_DispLogo 0001  
     __size_ofi2_FRAM_INIT 0006                 __pbssBANK0 00A9                    ?_LCD_HZ 0022  
                  LCD_HZ@N 0025                    LCD_HZ@x 0028                    LCD_HZ@y 0022  
                  ?_IDPage 0001                 ??_LCD_INIT 0022          __end_of_ResetPage 152A  
                ISR@change 001B             KeyScan@keytime 0020               ??i2_INIT_SPI 0001  
               ??_INIT_SPI 001E                 ??_KEY_INIT 001E                  ?_Send_Hex 0001  
                ?_Send_Str 0022         __size_of_read_time 0030                ?_TimeFormat 001E  
                ?_TimePage 002D                    ?___ftge 001E                 ??_SET_DUTY 0041  
          __CFG_WDPS$32768 000000                    _CAP1CON 000F63                    _CAP2CON 000F62  
                  _CAP3CON 000F61                    ?_readAD 0001                    ?_read_F 001F  
              TimePage@day 002E                TimePage@buf 0034                    _IC3DRIE 007D1B  
                  _IC3DRIF 007D23                TimePage@min 0030                TimePage@sec 0031  
                  _IC2QEIE 007D1A                    _IC2QEIF 007D22                 ??_PWM_INIT 001E  
                ?___awtoft 0026                  ?___ftpack 001E                  ?___lbtoft 0026  
                  _AD_INIT 2FEE                  SET_DUTY@n 0081      __size_of_Display_Menu 0054  
                  ?_strlen 001E       __size_ofi2_UART_INIT 001A                  _F16x16_HZ 351F  
          __CFG_PWM4MX$RD5 000000                    _LCD_CLS 2D96                 ??i2_read_F 0004  
       __end_ofi2_INIT_SPI 3032                    _OVDCOND 000F6B                 ??i2_strlen 0003  
                  _PWMCON0 000F6F                    _PWMCON1 000F6E                 ??_DispLogo 002E  
                  _SSPSTAT 000FC7                  ?_get_time 0001                    _AllData 0041  
                  i2_delay 30AE                    _Hex2Dex 2F62            __size_of_LCD_HZ 0078  
          __size_of_IDPage 023A                  ?_read_spi 0001              TimePage@month 002D  
                  _KeyScan 1B46        __end_of_DS1302_INIT 2FD4               ??i2_Send_Hex 0001  
    __size_of_LCD_P8x16Str 0118         __size_of_write_cmd 002C       __size_ofi2_DataClean 0036  
               ??_Send_Hex 001E               ??i2_Send_Str 0007         __size_of_write_spi 000E  
               ??_Send_Str 0024            __CFG_PWRTEN$OFF 000000                    __Hparam 0000  
                  _SetPage 0E1A                    _SetPara 00B3                    __Lparam 0000  
               ??_TimePage 0033                  ?_set_time 0001               _Display_Menu 2988  
          __size_of___ftge 0058                    ___ftadd 1894                    ___awmod 2816  
                  ___lbmod 2EF4              TimeFormat@buf 0021                    ___ftdiv 20CA  
            TimeFormat@max 001F              TimeFormat@min 001E                    ___ftmul 1E58  
                  ___ftsub 2C5A                    ___fttol 2186                    ___lwdiv 2A82  
                  ___lwmod 2BE4           i2DataClean@b_add 0008                    _address 00CF  
         i2DataClean@e_add 000A            __size_of_readAD 0154       __end_of_OLED_DrawBMP 2988  
                  __pcinit 27AE            __size_of_read_F 002C                 ??___awtoft 0029  
  __size_ofi2_Display_Menu 0054                 ??___ftpack 0023                 ??___lbtoft 0029  
                  _delay_n 3046                    __ramtop 0300    __size_of_SetDefaultPara 00B8  
                  __ptext0 0346                    __ptext1 2C22                    __ptext2 2DC6  
                  __ptext3 307E                    __ptext4 19F2                    __ptext5 2C5A  
                  __ptext6 1894                    __ptext7 2C92                    __ptext8 273C  
                  __ptext9 2D66            __size_of_strlen 002A               __size_of_ISR 033A  
                _FRAM_INIT 310C           ___awmod@dividend 0081          __end_of_read_time 2D96  
                  _show6x8 2A30        __size_of_TimeFormat 0080         __end_ofi2_Send_Hex 30F6  
       __end_ofi2_Send_Str 2BE4                    main@Key 00A8                  _LCD_WrDat 305A  
                _LCD_WrCmd 306C               _LCD_P8x16Str 1C68                 ??_get_time 0021  
           Ascii2Str@ascii 001F               ?i2_write_spi 0001                    _write_F 2ACC  
     end_of_initialization 2808                    read_F@H 0023                    read_F@L 0022  
                  read_F@t 0021              _OpenTimes_tmp 00CA                    itoa@buf 008C  
         i2_SetDefaultPara 22FA                    itoa@val 0087              __Lmediumconst 3268  
             ??i2_read_spi 0001                 ??_read_spi 001E                 ??_set_time 0021  
          OLED_DrawBMP@BMP 0025                    postdec1 000FE5                    postdec2 000FDD  
                _MOTOR_DIR 0291                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                    utoa@buf 002C                    utoa@val 0025  
                _UART_INIT 2FA0                    strlen@s 001E            i2write_spi@data 0001  
             read_time@rec 001E          __end_of_write_cmd 2E4A                 ?_FRAM_INIT 0001  
        __end_of_write_spi 30E8           ___lbmod@dividend 001F         __end_ofi2_read_spi 30AE  
               ?_LCD_WrDat 0001                 ?_LCD_WrCmd 0001                _DS1302_INIT 2FBA  
               main@SetLev 00A7          __size_of_CAP_INIT 002A                 LCD_HZ@data 0023  
             write_cmd@cmd 001E                ___lbmod@rem 0021               Send_Hex@data 001E  
                _DataClean 2CC8             __end_of_F6x8_1 351F                 main@change 00A3  
            ??_LCD_P8x16Sp 0024             __end_of_LCD_HZ 26C8                ___ftdiv@exp 0070  
           __end_of_IDPage 12F6              ??_LCD_P6x8Str 002A          __size_of_LCD_INIT 00D0  
         __CFG_T1OSCMX$OFF 000000                  _Ascii2Str 287E          __size_of_INIT_SPI 0016  
              ___ftmul@exp 0033          __size_of_KEY_INIT 000E                  _Fill_Data 1FFE  
                _DispPage1 0AAE                  i2_write_F 2B16             __end_of___ftge 2930  
               ?_UART_INIT 0001           __CFG_EXCLKMX$RC3 000000                 _write_data 2DF2  
                i2read_F@H 0006                  i2read_F@L 0005              __pidataCOMRAM 3104  
                i2read_F@t 0004          __size_of_SET_DUTY 0078             __end_of_readAD 1B46  
             Send_Str@data 0022              ??_LCD_Set_Pos 0021             __end_of_read_F 2DF2  
        __size_of_PWM_INIT 0024             __end_of_strlen 2EA0        start_initialization 27AE  
                SetPage@mp 008D                  _LastSpeed 00C3                __end_of_ISR 0342  
                Send_Str@i 0026          __size_ofi2_read_F 002C             DataClean@b_add 0026  
           DataClean@e_add 0028                  _SetOKPage 26C8                   ??_LCD_HZ 0026  
        __size_ofi2_strlen 002A                   ??_IDPage 0041          __size_of_DispLogo 008C  
                i2strlen@s 0001                 ?_DataClean 0026                  TimePage@x 0032  
                _OpenTimes 00C9                  _ResetPage 12F6               ??_TimeFormat 0020  
               ?_Ascii2Str 001E      __size_of_OLED_DrawBMP 0058          __size_of_Send_Hex 000E  
      __end_of_LCD_P8x16Sp 1E58                   ??___ftge 0024          __size_of_Send_Str 0042  
      __end_of_LCD_P6x8Str 1894                 ?_Fill_Data 0001                 ?_DispPage1 008D  
        __size_of_TimePage 01BC                 ?i2_write_F 0003               Ascii2Str@buf 001E  
              __pdataBANK0 00D2                   ??_readAD 0041                   ??_read_F 0021  
           i2_Display_Menu 29DC             _SetDefaultPara 2242                   ?_AD_INIT 0001  
                 ??_strlen 0020                 read_time@j 001F                   ?_LCD_CLS 0001  
                 LCD_CLS@x 0020                   LCD_CLS@y 0021          __size_of___awtoft 0036  
        __size_of___ftpack 008A          __size_of___lbtoft 0024              ??i2_FRAM_INIT 0001  
              ??_FRAM_INIT 001E                   LCD_HZ@wm 002B                __pbssCOMRAM 0041  
          TimeFormat@ascii 0022              __pcstackBANK0 0060         __end_of_TimeFormat 25D8  
      __end_of_LCD_Set_Pos 2FA0                ??_LCD_WrDat 001F                ??_LCD_WrCmd 001F  
               ?_SetOKPage 0001                   ?i2_delay 0001                   ?_Hex2Dex 0001  
             _OLED_DrawBMP 2930               i2DataClean@i 000E       __size_ofi2_write_spi 000E  
        __size_of_get_time 0072                   ?_KeyScan 0001                 ?_ResetPage 0001  
                 ?_SetPage 008D          __size_of_read_spi 0010           ___lwdiv@dividend 001E  
                __pintcode 0008              __pmediumconst 3268     __end_ofi2_Display_Menu 2A30  
   __end_of_SetDefaultPara 22FA                   ?___ftadd 0038                   ?___awmod 0081  
                 ?___lbmod 001E                   ?___ftdiv 0063                   ?___ftmul 002A  
                 ?___ftsub 0063                   ?___fttol 0072              ??i2_UART_INIT 0001  
                 ?___lwdiv 001E                   ?___lwmod 001E                ??_UART_INIT 001E  
        __size_of_set_time 0038                ?_write_data 0001                   ?_delay_n 0001  
 __end_ofi2_SetDefaultPara 23B2                   _CAP1BUFH 000F69                   _CAP1BUFL 000F68  
             TimePage@hour 002F               TimePage@year 0033           i2write_F@address 0003  
                 ?_show6x8 0022              read_F@address 001F                   _CAP_INIT 2EA0  
         Fill_Data@address 0029           ___lwdiv@quotient 0022             __size_of_delay 0010  
                 ?_write_F 0021                  _read_time 2D66        __end_ofi2_FRAM_INIT 3118  
            ??i2_DataClean 000C                   _LCD_INIT 1F2E                ??_DataClean 002A  
              _LCD_P8x16Sp 1D80                   _INIT_SPI 3006                _LCD_P6x8Str 16E6  
           i2Send_Hex@data 0001                   _KEY_INIT 30BE                ??_Ascii2Str 001F  
           OLED_DrawBMP@x0 002C             OLED_DrawBMP@x1 0023             OLED_DrawBMP@y0 0022  
           OLED_DrawBMP@y1 0024            ?i2_Display_Menu 0001            ?_SetDefaultPara 0001  
                 _SET_DUTY 25D8                ??_Fill_Data 0026                ??_DispPage1 0041  
              ??i2_write_F 0005                   _PWM_INIT 2F3E                _LCD_Set_Pos 2F84  
         __size_of_AD_INIT 0018                write_data@j 001F                  get_time@i 0021  
                main@index 00A4        __end_ofi2_UART_INIT 2FEE             i2Send_Str@data 0005  
         __size_of_LCD_CLS 0030                   i2_read_F 2E4A                   i2delay@t 0001  
                 i2_strlen 2ECA                   _DispLogo 2442               ?_DS1302_INIT 0001  
                _write_cmd 2E1E                  _write_spi 30DA                  copy_data0 27DC  
             _MOTOR_BUTTON 0290                  copy_data1 27FC                ??_SetOKPage 002C  
               ?_read_time 0001                  readAD@tmp 0069                   SetPage@x 0091  
         __size_ofi2_delay 0010           __size_of_Hex2Dex 0022        __size_of_write_data 002C  
                 _Send_Hex 30CC                ??_ResetPage 002D                   _Send_Str 2B60  
         __size_of_KeyScan 0122               DispPage1@buf 0091               Fill_Data@num 0028  
             DispPage1@lev 008F                   __Hrparam 0000                   _OverTEMP 0292  
                 _TimePage 152A        __end_ofi2_DataClean 2D34                   __Lrparam 0000  
         __size_of_SetPage 02A2                  read_spi@t 001E           __size_of___ftadd 015E  
         __size_of___awmod 0068           __size_of___lbmod 0026           __size_of___ftdiv 00BC  
         __size_of___ftmul 00D6           __size_of___ftsub 0038           __size_of___fttol 00BC  
         __size_of___lwdiv 004A           __size_of___lwmod 003E                   ___awtoft 2C92  
                 ___ftpack 24CE                   ___lbtoft 2F1A           __size_of_delay_n 0014  
              i2_FRAM_INIT 3112               SET_DUTY@temp 0082                   _main$532 009F  
                 _main$534 00A1                   _main$526 009D            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0024                   __ptext10 3046                   __ptext11 2FA0  
                 __ptext20 12F6                   __ptext12 152A                   __ptext21 2EF4  
                 __ptext13 2558                   __ptext30 2F62                   __ptext22 2F3E  
                 __ptext14 0E1A                   __ptext31 310C                   __ptext23 1F2E  
                 __ptext15 26C8                   __ptext40 2BE4                   __ptext32 3006  
                 __ptext24 2D96                   __ptext16 2242                   __ptext41 2A82  
                 __ptext33 2988                   __ptext25 1B46                   __ptext17 25D8  
                 __ptext50 2930                   __ptext42 2186                   __ptext34 2B60  
                 __ptext26 30BE                   __ptext18 2F1A                   __ptext51 16E6  
                 __ptext43 1E58                   __ptext35 2E76                   __ptext27 10BC  
                 __ptext19 20CA                   __ptext60 308E                   __ptext52 2A30  
                 __ptext44 24CE                   __ptext36 30CC                   __ptext28 287E  
                 __ptext61 2FBA                   __ptext53 2650                   __ptext45 28D8  
                 __ptext37 0AAE                   __ptext29 1FFE                   __ptext70 22FA  
                 __ptext62 2DF2                   __ptext54 305A                   __ptext46 2816  
                 __ptext38 2D34                   __ptext71 3112                   __ptext63 2E1E  
                 __ptext55 2F84                   __ptext47 1C68                   __ptext39 23B2  
                 __ptext80 30AE                   __ptext72 301C                   __ptext64 2EA0  
                 __ptext56 306C                   __ptext48 1D80                   __ptext73 29DC  
                 __ptext65 2FEE                   __ptext57 2CC8                   __ptext49 2442  
                 __ptext74 2BA2                   __ptext58 2ACC                   __ptext75 2ECA  
                 __ptext67 2E4A                   __ptext59 30DA                   __ptext76 30E8  
                 __ptext68 309E                   __ptext77 2CFE                   __ptext69 2FD4  
                 __ptext78 2B16                   __ptext79 30F6           __size_of_show6x8 0052  
               ?_write_cmd 0001                 ?_write_spi 0001                   _get_time 273C  
         __size_of_write_F 004A                 DataClean@i 002C              __size_of_main 0768  
            __size_of_itoa 0032                   _read_spi 307E              __size_of_utoa 0090  
                 delay_n@n 0020             write_F@address 0021                  set_time@i 0022  
               Hex2Dex@Hex 0020                 Hex2Dex@res 001E                 Hex2Dex@tmp 001F  
                 _set_time 2C22              OLED_DrawBMP@j 0029              OLED_DrawBMP@x 002B  
            OLED_DrawBMP@y 002D                   int$flags 0053                 write_cmd@j 001F  
              i2_UART_INIT 2FD4                   main@argc 0096                   main@argv 0098  
              DispPage1@mp 008D               set_time@date 0021                   itoa@base 0089  
              ??_read_time 001E                   intlevel2 0000                i2_DataClean 2CFE  
         ___lwmod@dividend 001E                 i2_INIT_SPI 301C                   show6x8@c 0023  
                 show6x8@i 0027                   show6x8@x 0026                   show6x8@y 0022  
            ?_Display_Menu 0001               ??_write_data 001E                 _TEMP_VALUE 00C0  
                 utoa@base 0027          ?i2_SetDefaultPara 0001            ___lwmod@divisor 0020  
                 strlen@cp 0020            ___lwmod@counter 0022         ??i2_SetDefaultPara 0008  
                 write_F@H 0025                   write_F@L 0024                   write_F@t 0023  
              i2Send_Str@i 0009                ??_write_cmd 001E                 _STATE_HALL 00D2  
            ?_LCD_P8x16Str 0022              ??i2_write_spi 0001                ??_write_spi 001E  
     __size_of_DS1302_INIT 001A              read_time@temp 0293               ?_LCD_P8x16Sp 0022  
       __end_of_write_data 2E1E               ?_LCD_P6x8Str 0028           ??i2_Display_Menu 000B  
         ??_SetDefaultPara 0026                 i2_Send_Hex 30E8                 i2_Send_Str 2BA2  
           ??_Display_Menu 0028  
